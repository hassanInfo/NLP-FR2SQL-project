sql,sentences_fr
SELECT count(*) FROM head WHERE age > 56,Combien de chefs de service ont plus de 56 ans ?
"SELECT name , born_state , age FROM head ORDER BY age","Indiquez le nom, l'état de naissance et l'âge des chefs de département classés par âge."
"SELECT creation , name , budget_in_billions FROM department","Indiquez l'année de création, le nom et le budget de chaque département."
"SELECT max(budget_in_billions) , min(budget_in_billions) FROM department",Quels sont le budget maximum et minimum des départements ?
SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15,Quel est le nombre moyen d'employés des départements dont le rang est compris entre 10 et 15 ?
SELECT name FROM head WHERE born_state != 'California',Quels sont les noms des chefs qui sont nés en dehors de l'État de Californie ?
SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama',Quelles sont les années de création distinctes des départements gérés par une secrétaire née dans l'état « Alabama » ?
SELECT born_state FROM head GROUP BY born_state HAVING count(*) >= 3,Quels sont les noms des états où au moins 3 têtes sont nées ?
SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1,En quelle année la plupart des départements ont-ils été créés ?
"SELECT T1.name , T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'",Afficher le nom et le nombre d'employés pour les départements gérés par des chefs dont la valeur d'intérim temporaire est 'Oui' ?
SELECT count(DISTINCT temporary_acting) FROM management,Combien y a-t-il de statuts intérimaires ?
SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);,Combien de départements sont dirigés par des chefs qui ne sont pas mentionnés ?
SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes',Quels sont les âges distincts des chefs qui agissent?
SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security',Énumérez les États où le secrétaire du département « Trésor » et le secrétaire de la « Sécurité intérieure » ​​sont nés.
"SELECT T1.department_id , T1.name , count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING count(*) > 1","Quel département a plus d'un chef à la fois ? Indiquez l'identifiant, le nom et le nombre de têtes."
"SELECT head_id , name FROM head WHERE name LIKE '%Ha%'",Quel nom de tête a la sous-chaîne 'Ha' ? Indiquez l'identifiant et le nom.
SELECT count(*) FROM farm,Combien y a-t-il de fermes ?
SELECT count(*) FROM farm,Comptez le nombre de fermes.
SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC,Énumérez le nombre total de chevaux dans les fermes par ordre croissant.
SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC,"Quel est le nombre total de chevaux pour chaque ferme, trié par ordre croissant ?"
SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens',"Quels sont les animateurs des compétitions dont le thème n'est pas ""Aliens"" ?"
SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens',Renvoyer les hôtes de compétitions dont le thème n'est pas Aliens ?
SELECT Theme FROM farm_competition ORDER BY YEAR ASC,Quels sont les thèmes des concours agricoles triés par année par ordre croissant ?
SELECT Theme FROM farm_competition ORDER BY YEAR ASC,"Retourner les thèmes des concours agricoles, triés par année ascendante."
SELECT avg(Working_Horses) FROM farm WHERE Total_Horses > 5000,Quel est le nombre moyen de chevaux de trait des élevages de plus de 5000 chevaux au total ?
SELECT avg(Working_Horses) FROM farm WHERE Total_Horses > 5000,Donnez le nombre moyen de chevaux de trait dans les exploitations de plus de 5 000 chevaux au total.
"SELECT max(Cows) , min(Cows) FROM farm",Quel est le nombre maximum et minimum de vaches dans toutes les fermes.
"SELECT max(Cows) , min(Cows) FROM farm",Renvoie le nombre maximum et minimum de vaches dans toutes les fermes.
SELECT count(DISTINCT Status) FROM city,Combien de statuts différents les villes ont-elles ?
SELECT count(DISTINCT Status) FROM city,Comptez le nombre de statuts différents.
SELECT Official_Name FROM city ORDER BY Population DESC,Énumérez les noms officiels des villes par ordre décroissant de population.
SELECT Official_Name FROM city ORDER BY Population DESC,"Quels sont les noms officiels des villes, classés par ordre décroissant de population ?"
"SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",Indiquez le nom officiel et le statut de la ville la plus peuplée.
"SELECT Official_Name , Status FROM city ORDER BY Population DESC LIMIT 1",Quel est le nom officiel et le statut de la ville qui compte le plus d'habitants ?
"SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",Afficher les années et les noms officiels des villes hôtes des compétitions.
"SELECT T2.Year , T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",Donnez les années et les noms officiels des villes de chaque concours.
SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1,Affichez les noms officiels des villes qui ont accueilli plus d'une compétition.
SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1,Quels sont les noms officiels des villes qui ont accueilli plus d'un concours ?
SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1,Montrez le statut de la ville qui a accueilli le plus grand nombre de compétitions.
SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1,Quel est le statut de la ville qui a accueilli le plus de compétitions ?
SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000,Veuillez indiquer les thèmes des compétitions avec des villes hôtes ayant des populations supérieures à 1000.
SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000,Quels sont les thèmes des concours auxquels correspondent des villes hôtes de plus de 1000 habitants ?
"SELECT Status , avg(Population) FROM city GROUP BY Status",Veuillez indiquer les différents statuts des villes et la population moyenne des villes avec chaque statut.
"SELECT Status , avg(Population) FROM city GROUP BY Status",Quels sont les statuts et les populations moyennes de chaque ville ?
SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC,"Veuillez afficher les différents statuts, classés par le nombre de villes qui ont chacun."
SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC,"Renvoie les différents statuts des villes, en ordre croissant de fréquence."
SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1,Énumérez le type de statut le plus courant dans les villes.
SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1,Quel est le statut le plus courant dans toutes les villes ?
SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition),Énumérez les noms officiels des villes qui n'ont pas organisé de concours.
SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition),Quels sont les noms officiels des villes qui n'ont pas accueilli de concours agricole ?
SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500,Afficher le statut partagé par les villes dont la population est supérieure à 1 500 et inférieure à 500.
SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500,Quels statuts correspondent à la fois aux villes de plus de 1500 habitants et aux villes de moins de 500 habitants ?
SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500,Trouvez les noms officiels des villes dont la population est supérieure à 1 500 ou inférieure à 500.
SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500,Quels sont les noms officiels des villes qui comptent plus de 1 500 habitants ou moins de 500 habitants ?
"SELECT Census_Ranking FROM city WHERE Status != ""Village""","Afficher le classement au recensement des villes dont le statut n'est pas ""Village""."
"SELECT Census_Ranking FROM city WHERE Status != ""Village""","Quels sont les classements au recensement des villes qui n'ont pas le statut ""Village"" ?"
SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1,quel cours a le plus grand nombre d'étudiants inscrits?
SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom du cours avec le plus d'étudiants inscrits?
SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1,qu'en est-il des étudiants qui se sont inscrits à certains cours mais qui ont le moins de cours chez ces étudiants ?
SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1,Quels sont les identifiants des étudiants qui se sont inscrits à certains cours mais qui ont eu le moins de cours pour tous les étudiants ?
"SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",quels sont le prénom et le nom de tous les candidats ?
"SELECT T2.first_name , T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",Quels sont les noms et prénoms de tous les candidats ?
SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),Lister l'identifiant des étudiants qui n'assistent jamais aux cours ?
SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),Quels sont les identifiants de chaque étudiant qui n'a jamais suivi de cours ?
SELECT student_id FROM student_course_attendance,Lister l'identifiant des étudiants qui ont suivi certains cours ?
SELECT student_id FROM student_course_attendance,Quels sont les identifiants de tous les étudiants qui ont suivi au moins un cours ?
"SELECT T1.student_id , T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",Quels sont les identifiants de tous les étudiants pour les cours et quels sont les noms de ces cours ?
SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1,Quel est le détail de l'étudiant qui s'est inscrit le plus récemment au cours ?
SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1,Quels détails avons-nous sur les étudiants qui se sont inscrits aux cours le plus récemment ?
"SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""",Combien d'étudiants suivent le cours d'anglais?
"SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""",Combien d'étudiants suivent des cours d'anglais?
SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171,À combien de cours l'étudiant dont l'identifiant est 171 assiste-t-il ?
SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171,À combien de cours l'étudiant avec l'identifiant 171 assiste-t-il réellement ?
"SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""",Trouver l'identifiant du candidat dont l'e-mail est stanley.monahan@example.org ?
"SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""",Quel est l'identifiant du candidat dont l'e-mail est stanley.monahan@example.org ?
SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1,Trouver l'identifiant du candidat qui a accédé le plus récemment au cours ?
SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1,Quel est l'identifiant du candidat qui a accédé le plus récemment au cours ?
SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,Quel est le détail de l'étudiant qui s'est inscrit le plus de cours ?
SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,Quelles sont les coordonnées de l'étudiant qui s'est inscrit au plus grand nombre de cours ?
"SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",Indiquez l'identifiant des étudiants qui se sont inscrits à certains cours et le nombre de leurs cours inscrits ?
"SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id","Pour chaque étudiant inscrit à un cours, à combien de cours sont-ils inscrits ?"
"SELECT T3.course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",Combien d'étudiants inscrits chaque cours compte-t-il? Indiquez le nom du cours et le nombre d'étudiants inscrits ?
"SELECT T3.course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id","Pour chaque identifiant de cours, combien d'étudiants sont inscrits et quels sont les noms de cours ?"
"SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = ""Pass""","Trouver l'identifiant des candidats dont le code d'évaluation est ""Pass"" ?"
"SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = ""Pass""",Quels sont les identifiants des candidats dont le code de résultat est Pass ?
"SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = ""Fail""","Trouver le numéro de portable des candidats dont le code d'évaluation est ""Echec"" ?"
"SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = ""Fail""","Quels sont les numéros de téléphone portable des candidats qui ont reçu un code d'évaluation ""Échec"" ?"
SELECT student_id FROM student_course_attendance WHERE course_id = 301,Quels sont les identifiants des étudiants qui se sont inscrits au cours 301 ?
SELECT student_id FROM student_course_attendance WHERE course_id = 301,Quels sont les identifiants des étudiants inscrits au cours 301 ?
SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1,Quel est l'identifiant de l'étudiant qui s'est inscrit le plus récemment au cours 301 ?
SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1,Quels sont les identifiants des étudiants qui se sont inscrits au cours 301 le plus récemment ?
SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id,Trouver des villes distinctes d'adresses de personnes ?
SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id,Quelles sont les différentes villes où les gens vivent?
SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id,Trouver des villes d'adresse distinctes pour les étudiants ?
SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id,Quelles sont les différentes villes où vivent les étudiants ?
SELECT course_name FROM courses ORDER BY course_name,Lister les noms des cours par ordre alphabétique ?
SELECT course_name FROM courses ORDER BY course_name,Quels sont les noms des cours par ordre alphabétique ?
SELECT first_name FROM people ORDER BY first_name,Lister les prénoms des personnes par ordre alphabétique ?
SELECT first_name FROM people ORDER BY first_name,Quels sont les prénoms des personnes par ordre alphabétique ?
SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance,Quel est l'identifiant des étudiants qui se sont inscrits à des cours ou qui ont suivi des cours ?
SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance,Quels sont les identifiants des étudiants qui se sont inscrits ou ont suivi un cours ?
SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121,Trouver l'identifiant des cours qui sont inscrits ou suivis par l'étudiant dont l'identifiant est 121 ?
SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121,Quels sont les identifiants des cours inscrits ou suivis par l'étudiant dont l'identifiant est 121 ?
SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),Quelles sont toutes les informations sur les étudiants qui se sont inscrits à des cours mais qui n'ont pas suivi de cours ?
SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),Quels sont tous les détails des étudiants qui se sont inscrits mais n'ont suivi aucun cours ?
"SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.registration_date",Indiquez l'identifiant des étudiants qui ont enregistré des statistiques de cours dans l'ordre de la date d'inscription.
"SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.registration_date",Quels sont les identifiants des étudiants qui se sont inscrits aux statistiques des cours par ordre de date d'inscription ?
"SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.date_of_attendance",Indiquez l'identifiant des étudiants qui ont suivi des cours de statistiques dans l'ordre de la date de participation.
"SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.date_of_attendance",Quels sont les identifiants des étudiants qui ont suivi les cours du département de statistiques par ordre de date de fréquentation.
SELECT date FROM weather WHERE max_temperature_f > 85,Donnez-moi les dates où la température maximale était supérieure à 85.
SELECT date FROM weather WHERE max_temperature_f > 85,Quelles sont les dates avec une température maximale supérieure à 85 ?
SELECT name FROM station WHERE lat < 37.5,"Quels sont les noms des stations qui ont une latitude inférieure à 37,5 ?"
SELECT name FROM station WHERE lat < 37.5,"Quels sont les noms de toutes les stations dont la latitude est inférieure à 37,5 ?"
"SELECT city , max(lat) FROM station GROUP BY city","Pour chaque ville, renvoyez la latitude la plus élevée parmi ses stations."
"SELECT city , max(lat) FROM station GROUP BY city","Pour chaque ville, quelle est la latitude la plus élevée de ses gares ?"
"SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",Donnez-moi la gare de départ et la gare d'arrivée pour les trajets avec les trois identifiants les plus anciens.
"SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3",Quelle est la gare et la gare d'arrivée pour les trajets avec les trois plus petits identifiants ?
"SELECT avg(lat) , avg(long) FROM station WHERE city = ""San Jose""",Quelle est la latitude et la longitude moyennes des stations situées dans la ville de San José ?
"SELECT avg(lat) , avg(long) FROM station WHERE city = ""San Jose""",Quelle est la latitude et la longitude moyennes à San José ?
SELECT id FROM trip ORDER BY duration LIMIT 1,Quel est l'identifiant du voyage qui a la durée la plus courte ?
SELECT id FROM trip ORDER BY duration LIMIT 1,Quel est l'identifiant du trajet le plus court ?
"SELECT sum(duration) , max(duration) FROM trip WHERE bike_id = 636",Quelle est la durée totale et maximale des trajets avec l'identifiant vélo 636 ?
"SELECT sum(duration) , max(duration) FROM trip WHERE bike_id = 636",Quelle est la durée totale et maximale de tous les trajets avec le vélo id 636 ?
"SELECT zip_code , avg(mean_temperature_f) FROM weather WHERE date LIKE ""8/%"" GROUP BY zip_code","Pour chaque code postal, retournez la température moyenne moyenne du mois d'août à cet endroit."
"SELECT zip_code , avg(mean_temperature_f) FROM weather WHERE date LIKE ""8/%"" GROUP BY zip_code","Pour chaque code postal, quelle est la température moyenne moyenne pour toutes les dates commençant par '8' ?"
SELECT count(DISTINCT bike_id) FROM trip,"À partir de l'enregistrement du voyage, trouvez le nombre de vélos uniques."
SELECT count(DISTINCT bike_id) FROM trip,Combien y a-t-il d'identifiants de vélo différents ?
SELECT count(DISTINCT city) FROM station,Quel est le nombre de villes distinctes dans lesquelles les stations sont situées ?
SELECT count(DISTINCT city) FROM station,Combien de villes différentes ont ces stations ?
"SELECT COUNT(*) FROM station WHERE city = ""Mountain View""",Combien de stations compte la ville de Mountain View ?
"SELECT COUNT(*) FROM station WHERE city = ""Mountain View""",Combien de stations y a-t-il à Mountain View ?
SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 7,Renvoie le nom unique des stations qui ont déjà eu 7 vélos disponibles.
SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 7,Quels sont les différents noms pour chaque station qui a déjà eu 7 vélos disponibles ?
"SELECT start_station_name , start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",Quelle gare de départ a enregistré le plus de trajets à partir du mois d'août ? Donnez-moi le nom et l'identifiant de la station.
"SELECT start_station_name , start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",Quels sont le nom et l'identifiant de la station de départ de celle qui a eu le plus de trajets de départ en août ?
SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1,Quel vélo a voyagé le plus souvent dans le code postal 94002 ?
SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1,Quel est l'identifiant du vélo qui a le plus voyagé en 94002 ?
SELECT COUNT(*) FROM weather WHERE mean_humidity > 50 AND mean_visibility_miles > 8,Combien de jours ont eu à la fois une humidité moyenne supérieure à 50 et une visibilité moyenne supérieure à 8 ?
SELECT COUNT(*) FROM weather WHERE mean_humidity > 50 AND mean_visibility_miles > 8,Quel est le nombre de jours qui ont eu une humidité moyenne supérieure à 50 et une visibilité moyenne supérieure à 8 ?
"SELECT T1.lat , T1.long , T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id ORDER BY T2.duration LIMIT 1","Quelle est la latitude, la longitude, la ville de la gare à partir de laquelle le trajet le plus court a commencé ?"
"SELECT T1.lat , T1.long , T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id ORDER BY T2.duration LIMIT 1","Quelles sont la latitude, la longitude et la ville de la gare à partir de laquelle le trajet de la plus courte durée a commencé ?"
"SELECT id FROM station WHERE city = ""San Francisco"" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available) > 10",Quels sont les identifiants des stations situées à San Francisco et dont la disponibilité moyenne des vélos est supérieure à 10 ?
"SELECT id FROM station WHERE city = ""San Francisco"" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available) > 10",Quels sont les identifiants des stations de San Francisco qui ont normalement plus de 10 vélos disponibles ?
"SELECT T1.name , T1.id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available) > 14 UNION SELECT name , id FROM station WHERE installation_date LIKE ""12/%""",Quels sont les noms et identifiants des stations qui disposaient en moyenne de plus de 14 vélos ou qui ont été installées en décembre ?
"SELECT T1.name , T1.id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available) > 14 UNION SELECT name , id FROM station WHERE installation_date LIKE ""12/%""",Quels sont les noms et identifiants de toutes les stations qui ont plus de 14 vélos disponibles en moyenne ou dont des vélos ont été installés en décembre ?
SELECT cloud_cover FROM weather WHERE zip_code = 94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3,Quels sont les 3 taux de couverture nuageuse les plus courants dans la région du code postal 94107 ?
SELECT cloud_cover FROM weather WHERE zip_code = 94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3,Quelles sont les 3 couvertures nuageuses les plus courantes dans le code postal 94107 ?
SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1,Quel est le code postal dans lequel la pression moyenne moyenne au niveau de la mer est la plus basse ?
SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1,Quel est le code postal qui a la pression moyenne moyenne au niveau de la mer la plus basse ?
"SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city = ""Palo Alto"")",Quelle est la disponibilité moyenne de vélos dans les stations qui ne sont pas situées à Palo Alto ?
"SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city = ""Palo Alto"")",Quelle est la disponibilité moyenne des vélos pour les stations qui ne sont pas à Palo Alto ?
SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available) > 10),Quelle est la longitude moyenne des stations qui n'ont jamais eu de disponibilité de vélo supérieure à 10 ?
SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available) > 10),Quelle est la longitude moyenne de toutes les stations qui n'ont jamais eu plus de 10 vélos disponibles ?
"SELECT date , zip_code FROM weather WHERE max_temperature_f >= 80",Quand et dans quel code postal la température maximale a-t-elle atteint 80 ?
"SELECT date , zip_code FROM weather WHERE max_temperature_f >= 80",Quels codes postaux ont une station avec une température maximale supérieure ou égale à 80 et quand a-t-elle atteint cette température ?
SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f) > 60,Donnez-moi des identifiants pour tous les voyages qui ont eu lieu dans une zone de code postal avec une température moyenne moyenne supérieure à 60.
SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f) > 60,"Pour chaque code postal, trouver les identifiants de tous les trajets qui ont une température moyenne supérieure à 60 ?"
"SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code","Pour chaque code postal, indiquez combien de fois la vitesse maximale du vent a atteint 25 ?"
"SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code","Pour chaque code postal, combien de fois la vitesse maximale du vent a-t-elle atteint 25 mph ?"
"SELECT date , zip_code FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)",Quel jour et dans quel code postal le point de rosée minimum était-il inférieur à n'importe quel jour du code postal 94107 ?
"SELECT date , zip_code FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)","Quels jours ont eu un point de rosée minimum inférieur à n'importe quel jour dans le code postal 94107, et dans quels codes postaux ces mesures ont-elles été prises ?"
"SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id","Pour chaque trajet, retournez la date d'installation de sa station d'arrivée."
"SELECT T1.id , T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",Quelle est la date d'installation de chaque station d'arrivée sur tous les trajets ?
SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id = T2.id ORDER BY T2.dock_count DESC LIMIT 1,Quel voyage a commencé à partir de la gare avec le plus grand nombre de quais ? Donnez-moi l'identifiant du voyage.
SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id = T2.id ORDER BY T2.dock_count DESC LIMIT 1,Quel est l'identifiant du trajet qui a commencé à partir de la gare avec le plus grand nombre de quais ?
"SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != ""San Francisco""",Comptez le nombre de voyages qui ne se sont pas terminés dans la ville de San Francisco.
"SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != ""San Francisco""",Combien de voyages ne se sont pas terminés à San Francisco ?
"SELECT date FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""","Au code postal 94107, quel jour ni brouillard ni pluie n'ont été observés ?"
"SELECT date FROM weather WHERE zip_code = 94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""",Quel jour n'y a-t-il eu ni brouillard ni pluie dans le code postal 94107 ?
SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available) < 7,"Quels sont les identifiants des stations qui ont une latitude supérieure à 37,4 et qui n'ont jamais eu de disponibilité de vélos en dessous de 7 ?"
SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available) < 7,"Quels sont les identifiants de toutes les stations qui ont une latitude supérieure à 37,4 et qui n'ont jamais eu moins de 7 vélos disponibles ?"
"SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available) > 10 EXCEPT SELECT name FROM station WHERE city = ""San Jose""",Quels sont les noms des stations qui ont une disponibilité moyenne de vélos supérieure à 10 et qui ne sont pas situées dans la ville de San José ?
"SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available) > 10 EXCEPT SELECT name FROM station WHERE city = ""San Jose""",Quels sont les noms de toutes les stations qui ont plus de 10 vélos disponibles et qui ne sont pas situées à San Jose ?
"SELECT name , lat , city FROM station ORDER BY lat LIMIT 1","Quels sont le nom, la latitude et la ville de la station avec la latitude la plus basse ?"
"SELECT name , lat , city FROM station ORDER BY lat LIMIT 1","Quels sont le nom, la latitude et la ville de la gare la plus au sud ?"
"SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3","Quelles sont la date, la température moyenne et l'humidité moyenne pour les 3 premiers jours avec les vitesses de rafales maximales les plus élevées ?"
"SELECT date , mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3","Quelle est la date, la température moyenne et l'humidité moyenne pour les jours avec les 3 plus grandes vitesses de rafales maximales ?"
"SELECT city , COUNT(*) FROM station GROUP BY city HAVING COUNT(*) >= 15",Indiquez le nom et le nombre de stations pour toutes les villes qui ont au moins 15 stations.
"SELECT city , COUNT(*) FROM station GROUP BY city HAVING COUNT(*) >= 15",Quel est le nom de chaque ville qui a au moins 15 stations et combien de stations a-t-elle ?
"SELECT start_station_id , start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*) >= 200",Trouver les identifiants et les noms des gares à partir desquelles au moins 200 trajets ont commencé.
"SELECT start_station_id , start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*) >= 200",Quels sont les identifiants et les noms de toutes les stations de départ qui ont été le début d'au moins 200 trajets ?
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles) < 10,Trouvez le code postal dans lequel la visibilité moyenne moyenne est inférieure à 10.
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles) < 10,"Pour chaque code postal, sélectionnez tous ceux qui ont une visibilité moyenne moyenne inférieure à 10."
SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC,Énumérez toutes les villes dans l'ordre décroissant de la latitude la plus élevée des stations de chaque ville.
SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC,"Pour chaque ville, listez leurs noms dans l'ordre décroissant de leur latitude de station la plus élevée."
"SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",Quelles sont les dates qui ont eu les 5 meilleurs taux de couverture nuageuse ? Dites-moi aussi le taux de couverture nuageuse.
"SELECT date , cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",Quelles sont les dates qui ont les 5 taux de couverture nuageuse les plus élevés et quels sont les taux ?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Quels sont les identifiants et durées des trajets avec les 3 premières durées ?
"SELECT id , duration FROM trip ORDER BY duration DESC LIMIT 3",Quels sont les identifiants des voyages qui ont duré le plus longtemps et combien de temps ont-ils duré ?
"SELECT T1.name , T1.long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id","Pour chaque station, renvoyez sa longitude et la durée moyenne des trajets qui ont commencé à partir de la station."
"SELECT T1.name , T1.long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id","Pour chaque identifiant de station de départ, quel est son nom, sa longitude et la durée moyenne des trajets qui y ont commencé ?"
"SELECT T1.name , T1.lat , min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id","Pour chaque gare, trouvez sa latitude et la durée minimale des trajets qui se sont terminés à la gare."
"SELECT T1.name , T1.lat , min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id","Pour chaque ID de station d'extrémité, quel est son nom, sa latitude et la durée minimale des trajets qui s'y terminent ?"
SELECT DISTINCT start_station_name FROM trip WHERE duration < 100,Listez toutes les stations distinctes à partir desquelles un trajet d'une durée inférieure à 100 a commencé.
SELECT DISTINCT start_station_name FROM trip WHERE duration < 100,Quels sont les différents noms de stations de départ pour un trajet qui a duré moins de 100 ?
SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f >= 70,Trouvez tous les codes postaux dans lesquels le point de rosée maximum n'a jamais atteint 70.
SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f >= 70,Quels sont tous les différents codes postaux qui ont un point de rosée maximum toujours inférieur à 70 ?
SELECT id FROM trip WHERE duration >= (SELECT avg(duration) FROM trip WHERE zip_code = 94103),Trouvez l'identifiant des trajets qui ont duré au moins aussi longtemps que la durée moyenne des trajets dans le code postal 94103.
SELECT id FROM trip WHERE duration >= (SELECT avg(duration) FROM trip WHERE zip_code = 94103),Quels sont les identifiants de tous les trajets qui ont duré autant que la durée moyenne du trajet dans le code postal 94103 ?
SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31,"Quelles sont les dates auxquelles la pression moyenne au niveau de la mer était comprise entre 30,3 et 31 ?"
SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31,"Quelles sont les dates qui ont une pression moyenne au niveau de la mer entre 30,3 et 31 ?"
"SELECT date , max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1",Trouvez le jour où la différence entre la température maximale et la température minimale était la plus petite. Signalez également la différence.
"SELECT date , max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1","Quels sont les jours qui ont eu la plus petite plage de température, et quelle était cette plage ?"
"SELECT DISTINCT T1.id , T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Quels sont l'identifiant et le nom des stations qui ont déjà eu plus de 12 vélos disponibles ?
"SELECT DISTINCT T1.id , T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12",Quels sont les différents identifiants et noms des stations qui ont eu plus de 12 vélos disponibles ?
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*) >= 100,Donnez-moi le code postal où l'humidité moyenne moyenne est inférieure à 70 et au moins 100 trajets ont eu lieu.
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*) >= 100,Quels sont les codes postaux qui ont une humidité moyenne moyenne inférieure à 70 et qui ont fait au moins 100 trajets ?
"SELECT name FROM station WHERE city = ""Palo Alto"" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*) > 100",Quels sont les noms des gares situées dans la ville de Palo Alto mais qui n'ont jamais été le point d'arrivée des voyages plus de 100 fois ?
"SELECT name FROM station WHERE city = ""Palo Alto"" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*) > 100",Quels sont les noms des stations situées à Palo Alto mais qui n'ont jamais été le point d'arrivée des voyages
"SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = ""Mountain View"" AND T3.city = ""Palo Alto""",Combien de voyages ont commencé à partir de la ville de Mountain View et se sont terminés à la ville de Palo Alto ?
"SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = ""Mountain View"" AND T3.city = ""Palo Alto""",Combien de voyages indiqués à partir d'une station à Mountain View et se sont terminés à une à Palo Alto ?
"SELECT avg(T1.lat) , avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id",Quelle est la latitude et la longitude moyennes des points de départ de tous les trajets ?
"SELECT avg(T1.lat) , avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id",Quelle est la latitude et la longitude moyennes de toutes les stations de départ des trajets ?
SELECT count(*) FROM book,Combien y a-t-il de livres ici?
SELECT Writer FROM book ORDER BY Writer ASC,Listez les auteurs des livres par ordre alphabétique croissant.
SELECT Title FROM book ORDER BY Issues ASC,Listez les titres des livres par ordre croissant de numéros.
"SELECT Title FROM book WHERE Writer != ""Elaine Lee""",Quels sont les titres des livres dont l'auteur n'est pas « Elaine Lee » ?
"SELECT Title , Issues FROM book",Quels sont le titre et les numéros des livres?
SELECT Publication_Date FROM publication ORDER BY Price DESC,Quelles sont les dates de parutions par ordre décroissant de prix ?
SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000,Quels sont les différents éditeurs de publications dont le prix est supérieur à 5 000 000 ?
SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1,Indiquez l'éditeur de la publication avec le prix le plus élevé.
SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3,Lister les dates de parution des publications avec les 3 prix les plus bas.
"SELECT T1.Title , T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID",Afficher le titre et les dates de publication des livres.
SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000,Afficher les écrivains qui ont publié un livre avec un prix supérieur à 4000000.
SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T2.Price DESC,Afficher les titres des livres par ordre décroissant de prix de publication.
SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*) > 1,Afficher les éditeurs qui ont plus d'une publication.
"SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher",Affichez les différents éditeurs avec le nombre de publications qu'ils ont.
SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer la date de publication la plus courante.
SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*) > 1,Listez les écrivains qui ont écrit plus d'un livre.
SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication),Listez les titres des livres qui ne sont pas publiés.
SELECT Publisher FROM publication WHERE Price > 10000000 INTERSECT SELECT Publisher FROM publication WHERE Price < 5000000,Afficher les éditeurs qui ont des publications avec un prix supérieur à 1 000 000 et des publications avec un prix inférieur à 5 000 000.
SELECT COUNT (DISTINCT Publication_Date) FROM publication,Quel est le nombre de dates de publication distinctes ?
SELECT COUNT (DISTINCT Publication_Date) FROM publication,Combien y a-t-il de dates de publication distinctes dans notre dossier ?
"SELECT Price FROM publication WHERE Publisher = ""Person"" OR Publisher = ""Wiley""","Afficher les prix des publications dont l'éditeur est ""Person"" ou ""Wiley"""
SELECT count(*) FROM actor,Combien y a-t-il d'acteurs ?
SELECT count(*) FROM actor,Comptez le nombre d'acteurs.
SELECT Name FROM actor ORDER BY Name ASC,Listez les noms des acteurs par ordre alphabétique croissant.
SELECT Name FROM actor ORDER BY Name ASC,"Quels sont les noms des acteurs, classés par ordre alphabétique ?"
"SELECT Character , Duration FROM actor",Quels sont les personnages et la durée des acteurs ?
"SELECT Character , Duration FROM actor",Renvoie les caractères et les durées pour chaque acteur.
SELECT Name FROM actor WHERE Age != 20,Énumérez le nom des acteurs dont l'âge n'est pas de 20 ans.
SELECT Name FROM actor WHERE Age != 20,Comment s'appellent les acteurs qui n'ont pas 20 ans ?
SELECT Character FROM actor ORDER BY age DESC,Quels sont les caractères des acteurs par ordre décroissant d'âge ?
SELECT Character FROM actor ORDER BY age DESC,"Renvoie les personnages des acteurs, classés par âge décroissant."
SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1,Quelle est la durée de l'acteur le plus âgé ?
SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1,Renvoie la durée de l'acteur avec le plus grand âge.
"SELECT Name FROM musical WHERE Nominee = ""Bob Fosse""","Comment s'appellent les comédies musicales avec le nominé ""Bob Fosse"" ?"
"SELECT Name FROM musical WHERE Nominee = ""Bob Fosse""",Renvoyez les noms des comédies musicales qui ont le candidat Bob Fosse.
"SELECT DISTINCT Nominee FROM musical WHERE Award != ""Tony Award""","Quels sont les nominés distincts des comédies musicales avec le prix qui n'est pas ""Tony Award"" ?"
"SELECT DISTINCT Nominee FROM musical WHERE Award != ""Tony Award""",Retournez les différents nominés des comédies musicales qui ont un prix qui n'est pas le Tony Award.
"SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",Afficher les noms des acteurs et les noms des comédies musicales dans lesquelles ils sont.
"SELECT T1.Name , T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID",Quels sont les noms des acteurs et les comédies musicales dans lesquelles ils jouent ?
"SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = ""The Phantom of the Opera""","Afficher les noms des acteurs qui sont apparus dans la comédie musicale avec le nom ""Le Fantôme de l'Opéra""."
"SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = ""The Phantom of the Opera""",Quels sont les noms des acteurs qui ont joué dans la comédie musicale intitulée Le Fantôme de l'Opéra ?
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC,Afficher les noms des acteurs par ordre décroissant de l'année où leur comédie musicale est récompensée.
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC,Quels sont les noms des acteurs classés par ordre décroissant de l'année au cours de laquelle leur comédie musicale a été récompensée ?
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",Afficher les noms des comédies musicales et le nombre d'acteurs qui sont apparus dans les comédies musicales.
"SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",Combien d'acteurs sont apparus dans chaque comédie musicale ?
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*) >= 3,Afficher les noms des comédies musicales qui ont au moins trois acteurs.
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*) >= 3,Comment s'appellent les comédies musicales qui ont au moins 3 acteurs ?
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee",Afficher les différents nominés et le nombre de comédies musicales qu'ils ont été nominés.
"SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee",Pour combien de comédies musicales chaque nominé a-t-il été nominé ?
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer le candidat qui a été nominé le plus grand nombre de fois.
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1,Qui est le nominé qui a été nominé pour le plus de comédies musicales ?
SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1,Énumérez le résultat le plus courant des comédies musicales.
SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1,Renvoie le résultat le plus fréquent dans toutes les comédies musicales.
SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*) > 2,Énumérez les nominés qui ont été nominés pour plus de deux comédies musicales.
SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*) > 2,Qui sont les nominés qui ont été nominés plus de deux fois ?
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor),Énumérez le nom des comédies musicales qui n'ont pas d'acteurs.
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor),Comment s'appellent les comédies musicales qui n'ont pas d'acteurs ?
"SELECT Nominee FROM musical WHERE Award = ""Tony Award"" INTERSECT SELECT Nominee FROM musical WHERE Award = ""Drama Desk Award""","Affichez les nominés qui ont nominé des comédies musicales pour le ""Tony Award"" et le ""Drama Desk Award""."
"SELECT Nominee FROM musical WHERE Award = ""Tony Award"" INTERSECT SELECT Nominee FROM musical WHERE Award = ""Drama Desk Award""",Qui sont les nominés qui ont été nominés à la fois pour un Tony Award et un Drama Desk Award ?
"SELECT Nominee FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks""","Montrez le candidat musical avec le prix ""Bob Fosse"" ou ""Cleavant Derricks""."
"SELECT Nominee FROM musical WHERE Award = ""Tony Award"" OR Award = ""Cleavant Derricks""",Qui sont les nominés qui ont été nominés pour les prix Bob Fosse ou Cleavant Derricks ?
SELECT email FROM user_profiles WHERE name = 'Mary',"Trouvez les e-mails de l'utilisateur nommé ""Mary""."
SELECT partitionid FROM user_profiles WHERE name = 'Iron Man',"Quel est l'identifiant de partition de l'utilisateur nommé ""Iron Man""."
SELECT count(*) FROM user_profiles,Combien y a-t-il d'utilisateurs ?
SELECT count(*) FROM follows,Combien d'abonnés chaque utilisateur a-t-il ?
SELECT count(*) FROM follows GROUP BY f1,Trouvez le nombre d'abonnés pour chaque utilisateur.
SELECT count(*) FROM tweets,Trouver le nombre de tweets enregistrés.
SELECT count(DISTINCT UID) FROM tweets,Trouvez le nombre d'utilisateurs qui ont posté des tweets.
"SELECT name , email FROM user_profiles WHERE name LIKE '%Swift%'",Recherchez le nom et l'e-mail de l'utilisateur dont le nom contient le mot « Swift ».
SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%',Trouver les noms des utilisateurs dont les emails contiennent 'superstar' ou 'edu'.
SELECT text FROM tweets WHERE text LIKE '%intern%',Renvoie le texte des tweets sur le sujet 'stagiaire'.
"SELECT name , email FROM user_profiles WHERE followers > 1000",Trouvez le nom et l'e-mail des utilisateurs qui ont plus de 1000 abonnés.
SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count(*) > (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 WHERE T1.name = 'Tyler Swift'),"Trouvez les noms des utilisateurs dont le nombre d'abonnés est supérieur à celui de l'utilisateur nommé ""Tyler Swift""."
"SELECT T1.name , T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING count(*) > 1",Recherchez le nom et l'adresse e-mail des utilisateurs qui ont plusieurs abonnés.
SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count(*) > 1,Trouvez les noms des utilisateurs qui ont plus d'un tweet.
"SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = ""Mary"" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = ""Susan""",Trouvez l'identifiant des utilisateurs qui sont suivis par Mary et Susan.
"SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = ""Mary"" OR T1.name = ""Susan""",Trouvez l'identifiant des utilisateurs qui sont suivis par Mary ou Susan.
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1,Trouvez le nom de l'utilisateur qui a le plus grand nombre d'abonnés.
"SELECT name , email FROM user_profiles ORDER BY followers LIMIT 1",Trouvez le nom et l'e-mail de l'utilisateur suivi du plus petit nombre de personnes.
"SELECT name , followers FROM user_profiles ORDER BY followers DESC",Indiquez le nom et le nombre d'abonnés pour chaque utilisateur et triez les résultats par nombre d'abonnés dans l'ordre décroissant.
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5,Indiquez les noms de 5 utilisateurs suivis du plus grand nombre d'autres utilisateurs.
SELECT text FROM tweets ORDER BY createdate,Listez le texte de tous les tweets par ordre de date.
"SELECT T1.name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",Trouvez le nom de chaque utilisateur et le nombre de tweets tweetés par chacun d'eux.
"SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count(*) < 2",Trouvez le nom et l'ID de partition des utilisateurs qui ont tweeté moins de deux fois.
"SELECT T1.name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count(*) > 1",Trouvez le nom de l'utilisateur qui a tweeté plus d'une fois et le nombre de tweets qu'il a tweeté.
SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets),Trouvez le nombre moyen d'abonnés pour les utilisateurs qui n'ont aucun tweet.
SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets),Trouvez le nombre moyen d'abonnés pour les utilisateurs qui ont eu des tweets.
"SELECT max(followers) , sum(followers) FROM user_profiles",Trouvez le nombre maximum et total d'abonnés de tous les utilisateurs.
SELECT distinct(catalog_entry_name) FROM catalog_contents,Trouvez les noms de toutes les entrées du catalogue.
SELECT distinct(catalog_entry_name) FROM catalog_contents,Quels sont tous les noms d'entrées de catalogue ?
SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*) > 3,Trouvez la liste des types de données d'attribut possédés par plus de 3 définitions d'attribut.
SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*) > 3,Quels sont les types de données d'attribut avec plus de 3 définitions d'attribut ?
"SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = ""Green""","Quel est le type de données d'attribut de l'attribut portant le nom ""Green"" ?"
"SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = ""Green""","Recherchez le type de données d'attribut pour l'attribut nommé ""Vert""."
"SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",Trouvez le nom et le niveau de la structure du catalogue avec un niveau compris entre 5 et 10.
"SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",Quels sont le nom et le niveau de la structure du catalogue avec un numéro de niveau compris entre 5 et 10
"SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""","Retrouvez tous les éditeurs de catalogues dont le nom contient ""Murray"""
"SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""","Quels éditeurs de catalogue ont la sous-chaîne ""Murray"" dans leurs noms ?"
SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1,Quel éditeur de catalogue a publié le plus de catalogues ?
SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1,Trouvez l'éditeur de catalogue qui a le plus de catalogues.
"SELECT t1.catalog_name , t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5",Trouvez les noms et les dates de publication de tous les catalogues dont le numéro de niveau de catalogue est supérieur à 5.
"SELECT t1.catalog_name , t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5",Quels sont le nom et la date de publication des catalogues dont le numéro de niveau de catalogue est supérieur à 5 ?
SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1),Quels sont les noms d'entrée du catalogue avec l'attribut possédé par la plupart des entrées.
SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1),Recherchez les noms d'entrée du catalogue avec l'attribut qui ont le plus d'entrées.
SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1,Quel est le nom de l'entrée du catalogue le plus cher (en USD) ?
SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1,Trouvez le nom d'entrée du catalogue avec le prix le plus élevé (en USD).
SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1,Quel est le nom du niveau du catalogue le moins cher (en USD) ?
SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1,Trouvez le nom du niveau du catalogue avec le prix le plus bas (en USD).
"SELECT avg(price_in_euros) , min(price_in_euros) FROM catalog_contents",Quels sont les prix moyen et minimum (en euros) de tous les produits ?
"SELECT avg(price_in_euros) , min(price_in_euros) FROM catalog_contents",Donnez-moi le prix moyen et minimum (en Euro) des produits.
SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1,Quel est le produit avec la hauteur la plus élevée ? Donnez-moi le nom de l'entrée du catalogue.
SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1,Quel contenu de catalogue a la hauteur la plus élevée ? Donnez-moi le nom de l'entrée du catalogue.
SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1,Trouvez le nom du produit qui a la plus petite capacité.
SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1,Quel contenu de catalogue a la plus petite capacité ? Renvoie le nom de l'entrée de catalogue.
"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""","Retrouvez les noms de tous les produits dont le numéro de stock commence par ""2""."
"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""","Quels contenus de catalogue ont un numéro de stock de produit commençant par ""2"" ? Afficher les noms des entrées de catalogue."
"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8""",Trouvez les noms des entrées de catalogue avec le numéro de niveau 8.
"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = ""8""",Quels sont les noms des entrées de catalogue avec le numéro de niveau 8 ?
SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5,Trouvez les noms des produits avec une longueur inférieure à 3 ou une hauteur supérieure à 5.
SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5,Quels contenus de catalogue ont une longueur inférieure à 3 ou supérieure à 5 ? Recherchez les noms des entrées de catalogue.
"SELECT t1.attribute_name , t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0",Recherchez le nom et l'ID d'attribut des définitions d'attribut avec la valeur d'attribut 0.
"SELECT t1.attribute_name , t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0",Quelles définitions d'attribut ont la valeur d'attribut 0 ? Donnez-moi le nom et l'ID de l'attribut.
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700",Trouvez le nom et la capacité des produits dont le prix est supérieur à 700 (en USD).
"SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700",Quel contenu de catalogue a un prix supérieur à 700 dollars ? Montrez leurs noms et capacités d'entrée de catalogue.
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*) > 1,Trouvez les dates auxquelles plus d'une révision ont été faites.
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*) > 1,Quels jours plus d'une révisions ont été faites sur les catalogues.
SELECT count(*) FROM catalog_contents,Combien y a-t-il de produits dans les enregistrements ?
SELECT count(*) FROM catalog_contents,Trouver le nombre total de contenus du catalogue.
SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8,Nommez tous les produits avec le prochain ID d'entrée supérieur à 8.
SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8,Quels sont les noms d'entrée de catalogue des produits avec le prochain ID d'entrée supérieur à 8 ?
SELECT count(*) FROM Aircraft,Combien d'avions avons-nous ?
SELECT count(*) FROM Aircraft,Combien d'avions existent dans la base de données ?
SELECT count(*) FROM Aircraft,Combien y a-t-il d'avions ?
SELECT count(*) FROM Aircraft,Quel est le nombre d'avions ?
"SELECT name , distance FROM Aircraft",Afficher le nom et la distance pour tous les avions.
"SELECT name , distance FROM Aircraft",Quels sont les noms et les distances de tous les avions ?
SELECT aid FROM Aircraft WHERE distance > 1000,Afficher les identifiants pour tous les avions avec plus de 1000 de distance.
SELECT aid FROM Aircraft WHERE distance > 1000,Quels sont les identifiants de tous les avions qui peuvent couvrir une distance de plus de 1000 ?
SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000,Combien d'avions ont une distance entre 1000 et 5000 ?
SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000,Quel est le nombre d'avions qui ont une distance entre 1000 et 5000 ?
"SELECT name , distance FROM Aircraft WHERE aid = 12",Quel est le nom et la distance des avions avec l'identifiant 12 ?
"SELECT name , distance FROM Aircraft WHERE aid = 12",Quel est le nom et la distance de l'avion qui a un identifiant de 12 ?
"SELECT min(distance) , avg(distance) , max(distance) FROM Aircraft","Quelle est la distance minimale, moyenne et maximale de tous les avions."
"SELECT min(distance) , avg(distance) , max(distance) FROM Aircraft","Renvoie les distances minimales, moyennes et maximales parcourues sur tous les avions."
"SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",Afficher l'identifiant et le nom de l'avion avec la distance maximale.
"SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1",Quel est l'identifiant et le nom de l'avion qui peut couvrir la distance maximale ?
SELECT name FROM Aircraft ORDER BY distance LIMIT 3,Afficher le nom des avions avec les trois premières distances les plus basses.
SELECT name FROM Aircraft ORDER BY distance LIMIT 3,Quels sont les avions avec les 3 longueurs les plus courtes ? Listez leurs noms.
SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft),Afficher les noms de tous les avions avec des distances supérieures à la moyenne.
SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft),Quels sont les noms de tous les avions qui peuvent couvrir plus de distances que la moyenne ?
SELECT count(*) FROM Employee,Combien d'employés avons-nous?
SELECT count(*) FROM Employee,Quel est le nombre d'employés ?
SELECT count(*) FROM Employee,Trouver le nombre total d'employés.
SELECT count(*) FROM Employee,Combien y a-t-il d'employés en tout ?
SELECT count(*) FROM Employee,Combien y a-t-il d'employés?
SELECT count(*) FROM Employee,Compter le nombre d'employés
"SELECT name , salary FROM Employee ORDER BY salary",Afficher le nom et le salaire de tous les employés triés par salaire.
"SELECT name , salary FROM Employee ORDER BY salary",Quel est le nom et le salaire de tous les employés par ordre de salaire ?
SELECT eid FROM Employee WHERE salary > 100000,Afficher les identifiants de tous les employés avec au moins 100 000 de salaire.
SELECT eid FROM Employee WHERE salary > 100000,Quel est l'identifiant de chaque employé qui a au moins un salaire de 100 000 ?
SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000,Combien d'employés ont un salaire entre 100 000 et 200 000 ?
SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000,Quel est le nombre d'employés qui ont un salaire entre 100 000 et 200 000 ?
"SELECT name , salary FROM Employee WHERE eid = 242518965",Quel est le nom et le salaire de l'employé avec l'identifiant 242518965 ?
"SELECT name , salary FROM Employee WHERE eid = 242518965",Quel est le nom et le salaire de l'employé avec l'identifiant 242518965 ?
"SELECT avg(salary) , max(salary) FROM Employee",Quel est le salaire moyen et maximum de tous les employés.
"SELECT avg(salary) , max(salary) FROM Employee",Quel est le salaire moyen et le plus élevé de tous les employés ?
"SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",Afficher l'identifiant et le nom de l'employé avec le salaire maximum.
"SELECT eid , name FROM Employee ORDER BY salary DESC LIMIT 1",Quel est l'identifiant et le nom de l'employé avec le salaire le plus élevé ?
SELECT name FROM Employee ORDER BY salary ASC LIMIT 3,Afficher le nom des employés avec les trois salaires les plus bas.
SELECT name FROM Employee ORDER BY salary ASC LIMIT 3,Comment s'appellent les 3 salariés les moins payés ?
SELECT name FROM Employee WHERE salary > (SELECT avg(salary) FROM Employee),Afficher les noms de tous les employés dont le salaire est supérieur à la moyenne.
SELECT name FROM Employee WHERE salary > (SELECT avg(salary) FROM Employee),Quels sont les noms de tous les employés qui ont un salaire supérieur à la moyenne ?
"SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",Montrez la carte d'identité et le salaire de Mark Young.
"SELECT eid , salary FROM Employee WHERE name = 'Mark Young'",Quels sont l'identité et le salaire de l'employé nommé Mark Young ?
SELECT count(*) FROM Flight,Combien de vols avons-nous ?
SELECT count(*) FROM Flight,Quel est le nombre de vols ?
"SELECT flno , origin , destination FROM Flight ORDER BY origin","Afficher le numéro de vol, l'origine, la destination de tous les vols dans l'ordre alphabétique des villes de départ."
"SELECT flno , origin , destination FROM Flight ORDER BY origin","Quels sont le numéro de vol, l'origine et la destination de tous les vols par ordre alphabétique des villes de départ ?"
"SELECT flno FROM Flight WHERE origin = ""Los Angeles""",Afficher tous les numéros de vol de Los Angeles.
"SELECT flno FROM Flight WHERE origin = ""Los Angeles""",Quels sont les numéros de tous les vols en provenance de Los Angeles ?
"SELECT origin FROM Flight WHERE destination = ""Honolulu""",Afficher les origines de tous les vols avec destination Honolulu.
"SELECT origin FROM Flight WHERE destination = ""Honolulu""",Quelles sont les origines de tous les vols qui se dirigent vers Honolulu ?
"SELECT departure_date , arrival_date FROM Flight WHERE origin = ""Los Angeles"" AND destination = ""Honolulu""",Montrez-moi la date de départ et la date d'arrivée pour tous les vols de Los Angeles à Honolulu.
"SELECT departure_date , arrival_date FROM Flight WHERE origin = ""Los Angeles"" AND destination = ""Honolulu""",Quelles sont les dates de départ et d'arrivée de tous les vols de LA à Honolulu ?
SELECT flno FROM Flight WHERE distance > 2000,Afficher le numéro de vol pour tous les vols de plus de 2 000 distances.
SELECT flno FROM Flight WHERE distance > 2000,Quels sont les nombres de tous les vols qui peuvent couvrir une distance de plus de 2000 ?
"SELECT avg(price) FROM Flight WHERE origin = ""Los Angeles"" AND destination = ""Honolulu""",Quel est le prix moyen des vols Los Angeles-Honolulu.
"SELECT avg(price) FROM Flight WHERE origin = ""Los Angeles"" AND destination = ""Honolulu""",Quel est le prix moyen des vols de Los Angeles à Honolulu ?
"SELECT origin , destination FROM Flight WHERE price > 300",Afficher l'origine et la destination pour les vols dont le prix est supérieur à 300.
"SELECT origin , destination FROM Flight WHERE price > 300",Quelle est l'origine et la destination de tous les vols dont le prix est supérieur à 300 ?
"SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",Afficher le numéro de vol et la distance du vol avec le prix maximum.
"SELECT flno , distance FROM Flight ORDER BY price DESC LIMIT 1",Quel est le numéro de vol et sa distance pour celui avec le prix maximum ?
SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3,Afficher le numéro de vol des vols avec les trois distances les plus basses.
SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3,Quels sont les numéros des vols les plus courts ?
"SELECT avg(distance) , avg(price) FROM Flight WHERE origin = ""Los Angeles""",Quelle est la distance moyenne et le prix moyen des vols au départ de Los Angeles.
"SELECT avg(distance) , avg(price) FROM Flight WHERE origin = ""Los Angeles""",Quelle est la distance moyenne et le prix de tous les vols au départ de Los Angeles ?
"SELECT origin , count(*) FROM Flight GROUP BY origin",Afficher toutes les origines et le nombre de vols depuis chaque origine.
"SELECT origin , count(*) FROM Flight GROUP BY origin","Pour chaque origine, combien de vols en provenaient ?"
"SELECT destination , count(*) FROM Flight GROUP BY destination",Afficher toutes les destinations et le nombre de vols vers chaque destination.
"SELECT destination , count(*) FROM Flight GROUP BY destination",Quelles sont les destinations et le nombre de vols vers chacune ?
SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1,Quelle origine a le plus grand nombre de vols ?
SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1,Quel endroit a le plus de vols en provenance de là ?
SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1,Quelle destination a le moins de vols ?
SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1,Quelle destination a le moins de vols ?
SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99,Quel est le nom de l'avion pour le vol avec le numéro 99 ?
SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99,Quel est le nom de l'avion qui était sur le vol numéro 99 ?
"SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = ""Airbus A340-300""",Afficher tous les numéros de vol avec des avions Airbus A340-300.
"SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = ""Airbus A340-300""",Quels sont les numéros de vol de l'avion Airbus A340-300 ?
"SELECT T2.name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",Afficher les noms des avions et le nombre de vols pour chaque avion.
"SELECT T2.name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid",Quel est le nom de chaque avion et combien de vols chacun effectue-t-il ?
SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count(*) >= 2,Afficher les noms de tous les avions avec au moins deux vols.
SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count(*) >= 2,Quels sont les noms de tous les avions avec au moins 2 vols ?
SELECT count(DISTINCT eid) FROM Certificate,Combien d'employés ont un certificat.
SELECT count(DISTINCT eid) FROM Certificate,Quel est le nombre d'employés distincts titulaires de certificats ?
SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate,Afficher les identifiants de tous les employés qui n'ont pas de certificat.
SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate,Quels sont les identifiants de tous les employés qui n'ont pas de certificat ?
"SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = ""John Williams""",Afficher les noms de tous les aéronefs dont John Williams possède des certificats.
"SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = ""John Williams""",Quels sont les noms de tous les avions que John Williams a des certificats pour pouvoir piloter ?
"SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Boeing 737-800""",Afficher les noms de tous les employés qui ont un certificat de Boeing 737-800.
"SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Boeing 737-800""",Quels sont les noms de tous les employés qui ont un certificat pour voler sur Boeing 737-800 ?
"SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Boeing 737-800"" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Airbus A340-300""",Afficher les noms de tous les employés qui ont des certificats sur Boeing 737-800 et Airbus A340-300.
"SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Boeing 737-800"" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Airbus A340-300""",Quels sont les noms de tous les employés qui peuvent piloter à la fois le Boeing 737-800 et l'Airbus A340-300 ?
"SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Boeing 737-800""",Afficher les noms de tous les employés qui n'ont pas de certificat de Boeing 737-800.
"SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = ""Boeing 737-800""",Quels sont les noms de tous les employés qui ne sont pas certifiés pour piloter des Boeing 737-800 ?
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1,Afficher le nom de l'avion dont le moins de personnes possède son certificat.
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1,Quels sont les noms des avions pour lesquels le moins de personnes sont certifiées ?
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid WHERE T2.distance > 5000 GROUP BY T1.aid ORDER BY count(*) >= 5,Afficher le nom et la distance des aéronefs avec plus de 5000 distance et dont au moins 5 personnes ont son certificat.
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid WHERE T2.distance > 5000 GROUP BY T1.aid ORDER BY count(*) >= 5,Quel est le nom et la distance de chaque avion qui peut couvrir une distance de plus de 5000 et qu'au moins 5 personnes peuvent voler ?
"SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",quel est le salaire et le nom de l'employé qui a le plus de certificats d'aéronef ?
"SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",Quel est le salaire et le nom de l'employé qui est certifié pour piloter le plus d'avions ?
SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1,Quel est le salaire et le nom de l'employé qui a le plus de certificats sur les avions avec une distance supérieure à 5000 ?
SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1,Quel est le salaire et le nom de l'employé avec le plus de certificats pour piloter des avions de plus de 5000 ?
SELECT count(DISTINCT allergy) FROM Allergy_type,Combien y a-t-il d'allergies ?
SELECT count(DISTINCT allergy) FROM Allergy_type,Combien y a-t-il d'entrées d'allergies ?
SELECT count(DISTINCT allergytype) FROM Allergy_type,Combien existe-t-il de types d'allergies différents ?
SELECT count(DISTINCT allergytype) FROM Allergy_type,Combien y a-t-il d'allergies distinctes ?
SELECT DISTINCT allergytype FROM Allergy_type,Afficher tous les types d'allergies.
SELECT DISTINCT allergytype FROM Allergy_type,Quels sont les différents types d'allergies ?
"SELECT allergy , allergytype FROM Allergy_type",Afficher toutes les allergies et leurs types.
"SELECT allergy , allergytype FROM Allergy_type",Quelles sont les allergies et leurs types ?
"SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype = ""food""",Afficher toutes les allergies aux types d'aliments.
"SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype = ""food""",Quelles sont toutes les différentes allergies alimentaires ?
"SELECT allergytype FROM Allergy_type WHERE allergy = ""Cat""",Quel est le type d'allergie au chat ?
"SELECT allergytype FROM Allergy_type WHERE allergy = ""Cat""",Quel est le type d'allergie d'une allergie au chat?
"SELECT count(*) FROM Allergy_type WHERE allergytype = ""animal""",Combien d'allergies ont le type animal ?
"SELECT count(*) FROM Allergy_type WHERE allergytype = ""animal""",Combien existe-t-il d'allergies de type animal ?
"SELECT allergytype , count(*) FROM Allergy_type GROUP BY allergytype",Afficher tous les types d'allergies et le nombre d'allergies dans chaque type.
"SELECT allergytype , count(*) FROM Allergy_type GROUP BY allergytype",Quels sont les types d'allergies et combien d'allergies correspondent à chacune ?
SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1,Quel type d'allergie a le plus grand nombre d'allergies ?
SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1,Quel type d'allergie est le plus courant ?
SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1,Quel type d'allergie a le moins d'allergies ?
SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1,Quel type d'allergie est le moins courant ?
SELECT count(*) FROM Student,Combien d'étudiants sont là?
SELECT count(*) FROM Student,Quel est le nombre total d'étudiants ?
"SELECT Fname , Lname FROM Student",Afficher le prénom et le nom de tous les élèves.
"SELECT Fname , Lname FROM Student",Quels sont les noms complets de tous les étudiants
SELECT count(DISTINCT advisor) FROM Student,Combien de conseillers différents sont répertoriés ?
SELECT count(DISTINCT advisor) FROM Student,Combien y a-t-il de conseillers ?
SELECT DISTINCT Major FROM Student,Afficher toutes les majeures.
SELECT DISTINCT Major FROM Student,Quelles sont les différentes majeures ?
SELECT DISTINCT city_code FROM Student,Afficher toutes les villes où vivent les étudiants.
SELECT DISTINCT city_code FROM Student,Dans quelles villes vivent les étudiants ?
"SELECT Fname , Lname , Age FROM Student WHERE Sex = 'F'","Afficher le prénom, le nom et l'âge de toutes les étudiantes. Leur sexe est F."
"SELECT Fname , Lname , Age FROM Student WHERE Sex = 'F'",Quels sont les noms complets et l'âge de toutes les étudiantes dont le sexe est F ?
SELECT StuID FROM Student WHERE Sex = 'M',Afficher les identifiants d'étudiants pour tous les étudiants de sexe masculin.
SELECT StuID FROM Student WHERE Sex = 'M',Quelles sont les cartes d'étudiant pour tous les étudiants de sexe masculin ?
SELECT count(*) FROM Student WHERE age = 18,Combien d'élèves ont 18 ans ?
SELECT count(*) FROM Student WHERE age = 18,Combien d'élèves ont 18 ans ?
SELECT StuID FROM Student WHERE age > 20,Afficher tous les identifiants d'étudiants âgés de plus de 20 ans.
SELECT StuID FROM Student WHERE age > 20,Quelles sont les cartes d'étudiants pour les étudiants de plus de 20 ans ?
"SELECT city_code FROM Student WHERE LName = ""Kim""","Dans quelle ville vit l'étudiant dont le nom de famille est ""Kim"" ?"
"SELECT city_code FROM Student WHERE LName = ""Kim""",Donnez la ville dans laquelle vit l'élève dont le nom de famille est Kim.
SELECT Advisor FROM Student WHERE StuID = 1004,Qui est le conseiller de l'étudiant avec ID 1004 ?
SELECT Advisor FROM Student WHERE StuID = 1004,Qui conseille l'élève 1004 ?
"SELECT count(*) FROM Student WHERE city_code = ""HKG"" OR city_code = ""CHI""",Combien d'étudiants vivent à HKG ou CHI ?
"SELECT count(*) FROM Student WHERE city_code = ""HKG"" OR city_code = ""CHI""",Indiquez le nombre d'étudiants vivant à HKG ou à CHI.
"SELECT min(age) , avg(age) , max(age) FROM Student","Afficher l'âge minimum, moyen et maximum de tous les élèves."
"SELECT min(age) , avg(age) , max(age) FROM Student","Quel est l'âge minimum, moyen et maximum de tous les élèves ?"
SELECT LName FROM Student WHERE age = (SELECT min(age) FROM Student),Quel est le nom de famille du plus jeune étudiant ?
SELECT LName FROM Student WHERE age = (SELECT min(age) FROM Student),Indiquez le nom de famille du plus jeune étudiant.
SELECT StuID FROM Student WHERE age = (SELECT max(age) FROM Student),Afficher l'identifiant étudiant de l'étudiant le plus âgé.
SELECT StuID FROM Student WHERE age = (SELECT max(age) FROM Student),Quel numéro d'étudiant correspond à l'étudiant le plus âgé ?
"SELECT major , count(*) FROM Student GROUP BY major",Afficher toutes les majeures et le nombre d'étudiants correspondant.
"SELECT major , count(*) FROM Student GROUP BY major",Combien d'étudiants y a-t-il pour chaque majeure?
SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1,Quelle majeure compte le plus d'étudiants ?
SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1,Quelle est la plus grande majeure ?
"SELECT age , count(*) FROM Student GROUP BY age",Afficher tous les âges et le nombre correspondant d'élèves.
"SELECT age , count(*) FROM Student GROUP BY age",Quel âge a chaque élève et combien d'élèves ont chaque âge ?
"SELECT avg(age) , sex FROM Student GROUP BY sex",Indiquez l'âge moyen des étudiants masculins et féminins.
"SELECT avg(age) , sex FROM Student GROUP BY sex",Quel est l'âge moyen des étudiants masculins et féminins ?
"SELECT city_code , count(*) FROM Student GROUP BY city_code",Afficher toutes les villes et le nombre d'étudiants correspondant.
"SELECT city_code , count(*) FROM Student GROUP BY city_code",Combien d'étudiants vivent dans chaque ville ?
"SELECT advisor , count(*) FROM Student GROUP BY advisor",Afficher tous les conseillers et le nombre correspondant d'étudiants.
"SELECT advisor , count(*) FROM Student GROUP BY advisor",Combien d'étudiants compte chaque conseiller ?
SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1,Quel conseiller a le plus grand nombre d'étudiants ?
SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1,Donnez le conseiller avec le plus d'étudiants.
"SELECT count(*) FROM Has_allergy WHERE Allergy = ""Cat""",Combien d'élèves ont des allergies aux chats ?
"SELECT count(*) FROM Has_allergy WHERE Allergy = ""Cat""",Combien d'élèves sont concernés par les allergies aux chats ?
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*) >= 2,Afficher toutes les cartes d'étudiants qui ont au moins deux allergies.
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*) >= 2,Quelles sont les cartes d'identité des étudiants qui ont plus d'une allergie ?
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy,Quelles sont les cartes d'étudiant des étudiants qui n'ont pas d'allergies ?
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy,Quels élèves ne sont pas concernés par les allergies ?
"SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.sex = ""F"" AND T1.allergy = ""Milk"" OR T1.allergy = ""Eggs""",Combien d'étudiantes sont allergiques au lait ou aux œufs ?
"SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.sex = ""F"" AND T1.allergy = ""Milk"" OR T1.allergy = ""Eggs""",Combien d'élèves de sexe féminin sont allergiques au lait ou aux œufs ?
"SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = ""food""",Combien d'élèves ont une allergie alimentaire?
"SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = ""food""",Combien d'élèves sont concernés par les allergies alimentaires ?
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1,Quelle allergie touche le plus d'élèves ?
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1,Quelle allergie est la plus fréquente ?
"SELECT Allergy , count(*) FROM Has_allergy GROUP BY Allergy",Afficher toutes les allergies avec le nombre d'élèves concernés.
"SELECT Allergy , count(*) FROM Has_allergy GROUP BY Allergy",Combien d'élèves ont chaque allergie différente ?
"SELECT T2.allergytype , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",Afficher tous les types d'allergies avec le nombre d'élèves concernés.
"SELECT T2.allergytype , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",Combien d'élèves sont concernés par chaque type d'allergie ?
"SELECT lname , age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"")",Trouvez le nom de famille et l'âge de l'élève allergique au lait et au chat.
"SELECT lname , age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"")",Quels sont les noms de famille et l'âge des élèves allergiques au lait et au chat ?
"SELECT T1.Allergy , T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = ""Lisa"" ORDER BY T1.Allergy",Quelles sont les allergies et leurs types dont souffre l'élève prénommé Lisa ? Et commandez le résultat par nom d'allergies.
"SELECT T1.Allergy , T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = ""Lisa"" ORDER BY T1.Allergy",Quelles sont les allergies de la fille nommée Lisa ? Et quels en sont les types ? Triez le résultat par noms d'allergies.
"SELECT fname , sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"")",Trouvez le prénom et le sexe de l'élève allergique au lait mais pas au chat.
"SELECT fname , sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Milk"" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy = ""Cat"")",Quels sont le prénom et le sexe des élèves allergiques au lait mais qui supportent les chats ?
"SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""animal"")",Trouvez l'âge moyen des élèves qui ont des allergies aux types d'aliments et d'animaux.
"SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""animal"")",Quel âge ont en moyenne les élèves allergiques aux aliments et aux types d'animaux ?
"SELECT fname , lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"")",Énumérez le prénom et le nom des élèves qui n'ont aucune allergie à un type d'aliment.
"SELECT fname , lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"")",Quel est le nom complet de chaque élève qui n'est allergique à aucun type d'aliment.
"SELECT count(*) FROM Student WHERE sex = ""M"" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"")",Trouvez le nombre d'étudiants de sexe masculin (le sexe est 'M') qui ont une allergie à un type d'aliment.
"SELECT count(*) FROM Student WHERE sex = ""M"" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"")",Combien d'étudiants masculins (le sexe est 'M') sont allergiques à n'importe quel type de nourriture ?
"SELECT DISTINCT T1.fname , T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = ""Milk"" OR T2.Allergy = ""Cat""",Retrouvez les différents prénoms et villes des élèves allergiques au lait ou au chat.
"SELECT DISTINCT T1.fname , T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = ""Milk"" OR T2.Allergy = ""Cat""",Quels sont les prénoms distincts et les villes des élèves allergiques soit au lait soit au chat ?
"SELECT count(*) FROM Student WHERE age > 18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"" OR T2.allergytype = ""animal"")",Trouvez le nombre d'étudiants qui ont plus de 18 ans et qui n'ont pas d'allergie alimentaire ou animale.
"SELECT count(*) FROM Student WHERE age > 18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = ""food"" OR T2.allergytype = ""animal"")",Combien d'élèves ont plus de 18 ans et n'ont pas d'allergie à un type d'aliment ou à un type d'animal ?
"SELECT fname , major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Soy"")",Trouvez le prénom et le major des élèves qui ne sont pas allergiques au soja.
"SELECT fname , major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy = ""Soy"")",Quels sont le prénom et la majeure des élèves capables de consommer du soja ?
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;",Une liste des 5 premiers pays par nombre de factures. Indiquez le nom du pays et le nombre de factures.
"SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;",Quels sont les 5 premiers pays en nombre de factures et combien en ont-ils ?
"SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;",Une liste des 8 premiers pays par taille de facture brute/totale. Indiquez le nom du pays et le montant brut de la facture.
"SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;",Quels sont les noms des 8 premiers pays en termes de taille totale de facture et quelles sont ces tailles ?
"SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",Une liste des 10 premiers pays par taille de facture moyenne. Indiquez le nom du pays et le montant moyen de la facture.
"SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",Quels sont les noms des pays et la taille moyenne des factures des principaux pays par taille ?
"SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5;",Découvrez 5 clients qui ont acheté quelque chose le plus récemment. Indiquez le prénom et le nom des clients.
"SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5;",Quels sont les noms et prénoms des 5 clients qui ont acheté quelque chose le plus récemment ?
"SELECT T1.first_name , T1.last_name , COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;",Découvrez les 10 meilleurs clients par nombre total de commandes. Indiquez le prénom et le nom des clients et le nombre total de commandes.
"SELECT T1.first_name , T1.last_name , COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;",Quels sont les prénoms et noms des 10 principaux clients en nombre total de commandes et combien de commandes ont-ils passées ?
"SELECT T1.first_name , T1.last_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;",Dressez la liste des 10 meilleurs clients en termes de ventes brutes totales. Indiquez le prénom et le nom des clients et le total des ventes brutes.
"SELECT T1.first_name , T1.last_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;","Quels sont les noms et prénoms des 10 premiers clients avec les ventes brutes les plus élevées, et quelles sont également les ventes ?"
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;",Énumérez les 5 meilleurs genres par nombre de pistes. Liste le nom des genres et le nombre total de pistes.
"SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;",Combien de pistes compte chaque genre et quels sont les noms des 5 meilleurs ?
SELECT title FROM albums;,Indiquez le titre de chaque album.
SELECT title FROM albums;,Quels sont les titres de tous les albums ?
SELECT title FROM albums ORDER BY title;,Répertoriez tous les albums classés par titre d'album dans l'ordre croissant.
SELECT title FROM albums ORDER BY title;,Quels sont les titres de tous les albums par ordre alphabétique ?
SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;,Listez tous les albums dont le titre commence par A dans l'ordre alphabétique.
SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;,Quels sont les titres de tous les albums qui commencent par A dans l'ordre alphabétique ?
"SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY total LIMIT 10;",Dressez la liste des noms et prénoms des clients des 10 factures les moins chères.
"SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY total LIMIT 10;",Quels sont les noms et prénoms des clients avec les 10 factures les moins chères ?
"SELECT sum(total) FROM invoices WHERE billing_city = ""Chicago"" AND billing_state = ""IL"";","Indiquez le montant total de la facture de Chicago, IL."
"SELECT sum(total) FROM invoices WHERE billing_city = ""Chicago"" AND billing_state = ""IL"";","Quel est le montant total des factures facturées depuis Chicago, Illinois ?"
"SELECT COUNT(*) FROM invoices WHERE billing_city = ""Chicago"" AND billing_state = ""IL"";","Indiquez le nombre de factures de Chicago, IL."
"SELECT COUNT(*) FROM invoices WHERE billing_city = ""Chicago"" AND billing_state = ""IL"";","Combien de factures ont été facturées depuis Chicago, Illinois ?"
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state;","Indiquez le nombre de factures provenant des États-Unis, regroupées par État."
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state;",Combien de factures ont été facturées pour chaque État ?
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",Énumérez l'état des États-Unis avec le plus de factures.
"SELECT billing_state , COUNT(*) FROM invoices WHERE billing_country = ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",Quels sont les États avec le plus de factures ?
"SELECT billing_state , COUNT(*) , SUM(total) FROM invoices WHERE billing_state = ""CA"";",Indiquez le nombre de factures et le total des factures de Californie.
"SELECT billing_state , COUNT(*) , SUM(total) FROM invoices WHERE billing_state = ""CA"";",Quel est le nombre de factures et le montant total facturé par CA ?
"SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = ""Aerosmith"";",Lister les albums d'Aerosmith.
"SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = ""Aerosmith"";",Quels sont les titres de tous les albums d'Aerosmith ?
"SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = ""Billy Cobham"";",Combien d'albums compte Billy Cobham ?
"SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = ""Billy Cobham"";",Combien d'albums Billy Cobam a-t-il sortis ?
"SELECT company FROM customers WHERE first_name = ""Eduardo"" AND last_name = ""Martins"";",Eduardo Martins est client de quelle entreprise ?
"SELECT company FROM customers WHERE first_name = ""Eduardo"" AND last_name = ""Martins"";",Quelle est l'entreprise dont Eduardo Martins est client ?
"SELECT email , phone FROM customers WHERE first_name = ""Astrid"" AND last_name = ""Gruber"";",Quels sont l'e-mail et le numéro de téléphone d'Astrid Gruber ?
"SELECT email , phone FROM customers WHERE first_name = ""Astrid"" AND last_name = ""Gruber"";",Quel est l'email et le numéro de téléphone d'Astrid Gruber la cliente ?
"SELECT count(*) FROM customers WHERE city = ""Prague"";",Combien de clients vivent dans la ville de Prague ?
"SELECT count(*) FROM customers WHERE city = ""Prague"";",Combien de clients vivent dans la ville de Prague ?
"SELECT count(*) FROM customers WHERE state = ""CA"";",Combien de clients dans l'état de CA ?
"SELECT count(*) FROM customers WHERE state = ""CA"";",Combien de clients viennent de Californie ?
"SELECT country FROM customers WHERE first_name = ""Roberto"" AND last_name = ""Almeida"";",Dans quel pays habite Roberto Almeida ?
"SELECT country FROM customers WHERE first_name = ""Roberto"" AND last_name = ""Almeida"";",Dans quel pays Roberto Almeida?
SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%',"Indiquez le nom des albums publiés par un artiste dont le nom a ""Led"""
SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%',Quel est le titre de l'album qui a été publié par l'artiste dont le nom a la phrase « Led » ?
"SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson"";",Combien de clients Steve Johnson prend-il en charge ?
"SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson"";",Quel est le nombre de clients pris en charge par Steve Johnson ?
"SELECT title , phone , hire_date FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";","Quels sont le titre, le téléphone et la date d'embauche de Nancy Edwards ?"
"SELECT title , phone , hire_date FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";","Quels sont le titre, le numéro de téléphone et la date d'embauche de l'employée nommée Nancy Edwards ?"
"SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards"";",trouver le nom complet des employés qui relèvent de Nancy Edwards ?
"SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards"";",Quels sont le prénom et le nom de l'employé qui relève de Nancy Edwards ?
"SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";",Quelle est l'adresse de l'employée Nancy Edwards ?
"SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";",Quelle est l'adresse de Nancy Edwards ?
"SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Trouvez le nom complet de l'employé qui a pris en charge le plus grand nombre de clients.
"SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Quel est le nom complet de l'employé qui a le plus de clients ?
"SELECT count(*) FROM employees WHERE country = ""Canada"";",Combien d'employés vivent au Canada?
"SELECT count(*) FROM employees WHERE country = ""Canada"";",Combien d'employés vivent au Canada?
"SELECT phone FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";",Quel est le numéro de téléphone de l'employée Nancy Edwards ?
"SELECT phone FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";",Quel est le numéro de téléphone de Nancy Edwards ?
"SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;",Qui est le plus jeune employé de l'entreprise ? Indiquez le prénom et le nom de l'employé.
"SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;",Quel est le prénom et le nom du plus jeune employé ?
"SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;",Énumérez les 10 meilleurs employés qui travaillent le plus longtemps dans l'entreprise. Indiquez le prénom et le nom de l'employé.
"SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;",Quels sont les noms et prénoms des 10 employés les plus anciens ?
"SELECT count(*) , city FROM employees WHERE title = 'IT Staff' GROUP BY city",Trouver le nombre d'employés dont le titre est Personnel informatique de chaque ville ?
"SELECT count(*) , city FROM employees WHERE title = 'IT Staff' GROUP BY city",Combien y a-t-il d'employés du personnel informatique dans chaque ville ?
"SELECT T2.first_name , T2.last_name , count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;",Quel employé gère le plus grand nombre de personnes ? Indiquez le prénom et le nom de l'employé et le nombre de personnes qui relèvent de cet employé.
"SELECT T2.first_name , T2.last_name , count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;",Quels sont les noms et prénoms de tous les employés et combien de personnes relèvent d'eux ?
"SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";",Combien de commandes Lucas Mancini a-t-il ?
"SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";",Combien de commandes Luca Mancini a-t-il dans ses factures ?
"SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";",Quel est le montant total dépensé par Lucas Mancini ?
"SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";",Combien d'argent Lucas Mancini a-t-il dépensé ?
SELECT name FROM media_types;,Répertorier tous les types de médias.
SELECT name FROM media_types;,Quels sont les noms de tous les types de médias ?
SELECT DISTINCT name FROM genres;,Énumérez tous les différents types de genre.
SELECT DISTINCT name FROM genres;,Quels sont les différents noms des genres ?
SELECT name FROM playlists;,Indiquez le nom de toutes les listes de lecture.
SELECT name FROM playlists;,Quels sont les noms de toutes les playlists ?
"SELECT composer FROM tracks WHERE name = ""Fast As a Shark"";",Qui est le compositeur du morceau Fast As a Shark ?
"SELECT composer FROM tracks WHERE name = ""Fast As a Shark"";","Quel est le compositeur qui a créé le morceau ""Fast As a Shark"" ?"
"SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark"";",Combien de temps dure le morceau Fast As a Shark ?
"SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark"";",Combien de millisecondes dure Fast As a Shark ?
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"";",Quel est le nom des morceaux dont le genre est Rock ?
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"";",Quel est le nom de tous les morceaux du genre Rock ?
"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = ""Balls to the Wall"";",Quel est le titre de l'album auquel appartient Balls to the Wall ?
"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = ""Balls to the Wall"";",Quel est le nom de l'album qui contient le titre Ball to the Wall ?
"SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall"";",Nom de la liste de toutes les pistes dans Balls to the Wall.
"SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall"";",Quel est le nom de toutes les pistes de l'album nommé Balls to the Wall ?
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id) > 10;,Les titres de liste des albums ont un nombre de pistes supérieur à 10.
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id) > 10;,Quels sont les noms des albums qui ont plus de 10 titres ?
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file"";",Répertoriez le nom des pistes appartenant au genre Rock et dont le type de média est Fichier audio MPEG.
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file"";",Quels sont les noms de toutes les pistes Rock stockées sur les fichiers audio MPEG ?
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file"";",Indiquez le nom des pistes appartenant au genre Rock ou le type de média est un fichier audio MPEG.
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file"";",Quels sont les noms de toutes les pistes appartenant au genre Rock et dont le type de média est MPEG ?
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"" OR T1.name = ""Jazz""",Indiquez le nom des pistes appartenant au genre Rock ou au genre Jazz.
"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = ""Rock"" OR T1.name = ""Jazz""",Quels sont les noms des morceaux qui sont des chansons Rock ou Jazz ?
"SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies"";",Liste le nom de toutes les pistes dans les listes de lecture de films.
"SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies"";",Quels sont les noms de toutes les pistes qui se trouvent sur les listes de lecture intitulées Films ?
SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id) > 100;,Indiquez le nom de la liste de lecture dont le nombre de pistes est supérieur à 100.
SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id) > 100;,Quels sont les noms de toutes les listes de lecture contenant plus de 100 pistes ?
"SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = ""Daan"" AND T4.last_name = ""Peeters"";",Liste toutes les pistes achetées par le client Daan Peeters.
"SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = ""Daan"" AND T4.last_name = ""Peeters"";",Quels sont les morceaux achetés par Dean Peeters ?
"SELECT unit_price FROM tracks WHERE name = ""Fast As a Shark"";",Combien coûte le morceau Fast As a Shark ?
"SELECT unit_price FROM tracks WHERE name = ""Fast As a Shark"";","Quel est le prix unitaire du morceau ""Fast As a Shark"" ?"
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music',Trouvez le nom des pistes qui se trouvent dans la liste de lecture Films mais pas dans la liste de lecture musicale.
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music',Quels sont les noms de toutes les pistes qui figurent dans la liste de lecture Films mais pas dans la liste de lecture Musique ?
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music',Trouvez le nom des pistes qui se trouvent à la fois dans les listes de lecture de films et de musique.
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music',Quels sont les noms de toutes les pistes qui se trouvent à la fois dans les playlists Films et Musique ?
"SELECT count(*) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;",Trouver le nombre de pistes dans chaque genre ?
"SELECT count(*) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;",Combien y a-t-il de morceaux dans chaque genre ?
SELECT count(*) FROM editor,Combien y a-t-il d'éditeurs ?
SELECT Name FROM editor ORDER BY Age ASC,Dressez la liste des noms des éditeurs par ordre croissant d'âge.
"SELECT Name , Age FROM editor",Quels sont les noms et l'âge des éditeurs ?
SELECT Name FROM editor WHERE Age > 25,Dressez la liste des noms des éditeurs âgés de plus de 25 ans.
SELECT Name FROM editor WHERE Age = 24 OR Age = 25,Afficher les noms des éditeurs âgés de 24 ou 25 ans.
SELECT Name FROM editor ORDER BY Age ASC LIMIT 1,Comment s'appelle le plus jeune éditeur ?
"SELECT Age , COUNT(*) FROM editor GROUP BY Age",Quels sont les différents âges des éditeurs ? Montrez chaque tranche d'âge avec le nombre d'éditeurs de cette tranche d'âge.
SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer l'âge le plus courant des éditeurs.
SELECT DISTINCT Theme FROM journal,Montrez les thèmes distincts des revues.
"SELECT T2.Name , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",Indiquez les noms des éditeurs et le thème des revues pour lesquelles ils siègent à des comités.
"SELECT T2.Name , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID","Pour chaque journal_committee, recherchez le nom de l'éditeur et le thème du journal."
"SELECT T2.Name , T2.age , T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC","Indiquez les noms et âges des éditeurs et le thème des revues pour lesquelles ils siègent à des comités, par ordre alphabétique croissant de thème."
SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000,Affichez les noms des éditeurs qui font partie du comité des revues dont les ventes sont supérieures à 3 000.
"SELECT T1.editor_id , T1.Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id","Affichez l'identifiant, le nom de chaque éditeur et le nombre de comités de revues auxquels ils appartiennent."
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*) >= 2,Indiquez les noms des éditeurs qui font partie d'au moins deux comités de revues.
SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee),Dressez la liste des noms des éditeurs qui ne font partie d'aucun comité de revue.
"SELECT date , theme , sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID","Indiquez la date, le thème et les ventes de la revue qui n'avait aucun des éditeurs répertoriés siégeant au comité."
SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo',Quelle est la moyenne des ventes des revues qui ont un éditeur dont le type de travail est « Photo » ?
SELECT count(*) FROM Accounts,Combien de comptes avons-nous ?
SELECT count(*) FROM Accounts,Comptez le nombre de comptes.
SELECT count(*) FROM Accounts,Afficher le nombre de comptes.
SELECT count(*) FROM Accounts,Combien y a-t-il de comptes ?
SELECT count(*) FROM Accounts,Combien y a-t-il de comptes au total ?
SELECT count(*) FROM Accounts,Comptez le nombre de comptes.
"SELECT account_id , customer_id , account_name FROM Accounts","Afficher les identifiants, les identifiants des clients, les noms de tous les comptes."
"SELECT account_id , customer_id , account_name FROM Accounts","Quels sont les identifiants de compte, les identifiants client et les noms de compte pour tous les comptes ?"
"SELECT other_account_details FROM Accounts WHERE account_name = ""338""",Afficher les autres détails du compte pour le compte portant le nom 338.
"SELECT other_account_details FROM Accounts WHERE account_name = ""338""",Quelles sont les autres informations de compte pour le compte portant le nom 338 ?
"SELECT T2.customer_first_name , T2.customer_last_name , T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = ""162""","Quels sont le prénom, le nom et le téléphone du client avec le nom de compte 162 ?"
"SELECT T2.customer_first_name , T2.customer_last_name , T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = ""162""",Donnez le nom complet et le téléphone du client qui a le nom de compte 162.
"SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Art"" AND T2.customer_last_name = ""Turcotte""",Combien de comptes le client dont le prénom Art et le nom de famille Turcotte possède-t-il ?
"SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Art"" AND T2.customer_last_name = ""Turcotte""",Renvoie le nombre de comptes que possède le client dont le prénom Art et le nom de famille Turcotte.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Afficher tous les identifiants client et le nombre de comptes pour chaque client.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Combien de comptes y a-t-il pour chaque identifiant client ?
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Combien de comptes possède chaque client ? Indiquez le numéro et l'identifiant client.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id",Comptez le nombre de comptes correspondant à chaque identifiant client.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1",Afficher l'identifiant client et le nombre de comptes avec la plupart des comptes.
"SELECT customer_id , count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1","Quel est l'identifiant client du client avec le plus de comptes, et combien de comptes cette personne possède-t-elle ?"
"SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1","Quel est le prénom, le nom et l'identifiant du client avec le moins de comptes."
"SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",Donnez le nom complet et l'identifiant client du client avec le moins de comptes.
SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts),Afficher le nombre de tous les clients sans compte.
SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts),Combien de clients n'ont pas de compte ?
SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts),Combien de clients n'ont pas de compte ?
SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts),Comptez le nombre de clients qui n'ont pas de compte.
"SELECT customer_first_name , customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",Afficher les prénoms et noms de famille des clients sans compte.
"SELECT customer_first_name , customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",Quels sont les noms complets des clients qui n'ont pas de compte ?
"SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",Afficher les noms et prénoms distincts de tous les clients disposant d'un compte.
"SELECT DISTINCT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",Quels sont les noms complets des clients qui ont des comptes ?
SELECT count(DISTINCT customer_id) FROM Accounts,Combien de clients ont un compte ?
SELECT count(DISTINCT customer_id) FROM Accounts,Comptez le nombre de clients qui détiennent un compte.
SELECT count(DISTINCT customer_id) FROM Accounts,Combien de clients ont ouvert un compte ?
SELECT count(DISTINCT customer_id) FROM Accounts,Comptez le nombre de clients qui ont un compte.
SELECT count(*) FROM Customers,Combien de clients avons-nous ?
SELECT count(*) FROM Customers,Comptez le nombre de clients.
SELECT count(*) FROM Customers,Afficher le nombre de clients.
SELECT count(*) FROM Customers,Comptez le nombre de clients.
SELECT count(*) FROM Customers,Trouvez le nombre total de clients.
SELECT count(*) FROM Customers,Combien de clients avons-nous ?
SELECT count(*) FROM Customers,Comptez le nombre de clients enregistrés.
SELECT count(*) FROM Customers,Combien y a-t-il de clients ?
SELECT count(*) FROM Customers,Comptez le nombre de clients.
SELECT count(*) FROM Customers,Combien y a-t-il de clients ?
SELECT count(*) FROM Customers,Renvoie le nombre total de clients distincts.
SELECT count(*) FROM Customers,Combien de clients au total ?
SELECT count(*) FROM Customers,Combien y a-t-il de clients ?
"SELECT customer_id , customer_first_name , customer_last_name , customer_phone FROM Customers","Afficher les identifiants, les prénoms, les noms et les téléphones de tous les clients."
"SELECT customer_id , customer_first_name , customer_last_name , customer_phone FROM Customers","Quels sont les identifiants, noms complets et téléphones de chaque client ?"
"SELECT customer_phone , customer_email FROM Customers WHERE customer_first_name = ""Aniyah"" AND customer_last_name = ""Feest""",Quels sont le téléphone et l'e-mail du client dont le prénom Aniyah et le nom Feest ?
"SELECT customer_phone , customer_email FROM Customers WHERE customer_first_name = ""Aniyah"" AND customer_last_name = ""Feest""",Retournez le téléphone et l'email du client avec le prénom Aniyah et le nom de famille Feest.
SELECT count(*) FROM Customers_cards,Afficher le nombre de cartes client.
SELECT count(*) FROM Customers_cards,Combien y a-t-il de cartes client ?
"SELECT card_id , customer_id , card_type_code , card_number FROM Customers_cards","Afficher les identifiants, les identifiants client, les codes de type de carte, les numéros de carte pour toutes les cartes."
"SELECT card_id , customer_id , card_type_code , card_number FROM Customers_cards","Quels sont les identifiants de carte, les identifiants client, les types de carte et les numéros de carte pour chaque carte client ?"
"SELECT date_valid_from , date_valid_to FROM Customers_cards WHERE card_number = ""4560596484842""",Afficher la date de validité et la date de validité pour la carte avec le numéro de carte '4560596484842'.
"SELECT date_valid_from , date_valid_to FROM Customers_cards WHERE card_number = ""4560596484842""",Quelles sont les dates de début et de fin de validité de la carte portant le numéro 4560596484842 ?
"SELECT T2.customer_first_name , T2.customer_last_name , T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_number = ""4560596484842""","Quels sont le prénom, le nom et le téléphone du client avec la carte 4560596484842."
"SELECT T2.customer_first_name , T2.customer_last_name , T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_number = ""4560596484842""",Renvoyez le nom complet et le téléphone du client qui a le numéro de carte 4560596484842.
"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Art"" AND T2.customer_last_name = ""Turcotte""",Combien de cartes possède le client Art Turcotte ?
"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Art"" AND T2.customer_last_name = ""Turcotte""",Comptez le nombre de cartes que possède le client avec le prénom Art et le nom Turcotte.
"SELECT count(*) FROM Customers_cards WHERE card_type_code = ""Debit""",Combien de cartes de débit avons-nous ?
"SELECT count(*) FROM Customers_cards WHERE card_type_code = ""Debit""",Comptez le nombre de cartes client de type Débit.
"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Blanche"" AND T2.customer_last_name = ""Huels"" AND T1.card_type_code = ""Credit""",Combien de cartes de crédit possède la cliente Blanche Huels ?
"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Blanche"" AND T2.customer_last_name = ""Huels"" AND T1.card_type_code = ""Credit""",Comptez le nombre de cartes de crédit que possède le client dont le prénom Blanche et le nom Huels possèdent.
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Afficher tous les identifiants des clients et le nombre de cartes détenues par chaque client.
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id",Quels sont les différents identifiants client et combien de cartes chacun possède-t-il ?
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1","Quel est l'identifiant client avec le plus grand nombre de cartes, et combien en possède-t-il ?"
"SELECT customer_id , count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1","Renvoie l'identifiant du client qui a le plus de cartes, ainsi que le nombre de cartes."
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2","Afficher l'identifiant, le prénom et le nom de tous les clients avec au moins deux cartes."
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2",Quels sont les identifiants et noms complets des clients qui détiennent deux cartes ou plus ?
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1","Quel est l'identifiant du client, le prénom et le nom avec le moins de comptes."
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",Renvoie l'identifiant et le nom complet du client qui a le moins de comptes.
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Afficher tous les codes de type de carte et le nombre de cartes dans chaque type.
"SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",Quels sont les différents types de cartes et combien y a-t-il de cartes de chaque ?
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de type de carte avec le plus grand nombre de cartes ?
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1,Renvoie le code du type de carte le plus courant.
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*) >= 5,Afficher les codes de type de carte avec au moins 5 cartes.
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*) >= 5,Quels sont les codes des types de cartes qui ont 5 cartes ou plus ?
"SELECT card_type_code , count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code",Afficher tous les codes de type de carte et le nombre de clients détenant des cartes dans chaque type.
"SELECT card_type_code , count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code",Quels sont les différents codes de type de carte et combien de clients différents détiennent chaque type ?
"SELECT customer_id , customer_first_name FROM Customers EXCEPT SELECT T1.customer_id , T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE card_type_code = ""Credit""",Afficher les identifiants et prénoms des clients sans carte de crédit.
"SELECT customer_id , customer_first_name FROM Customers EXCEPT SELECT T1.customer_id , T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE card_type_code = ""Credit""",Quels sont les identifiants et prénoms des clients non titulaires de carte bancaire ?
SELECT DISTINCT card_type_code FROM Customers_Cards,Afficher tous les codes de type de carte.
SELECT DISTINCT card_type_code FROM Customers_Cards,Quels sont les différents codes de type de carte ?
SELECT count(DISTINCT card_type_code) FROM Customers_Cards,Afficher le nombre de types de cartes.
SELECT count(DISTINCT card_type_code) FROM Customers_Cards,Combien y a-t-il de types de cartes différents ?
SELECT DISTINCT transaction_type FROM Financial_Transactions,Afficher tous les types de transactions.
SELECT DISTINCT transaction_type FROM Financial_Transactions,Quels sont les différents types de transactions ?
SELECT count(DISTINCT transaction_type) FROM Financial_Transactions,Afficher le nombre de types de transactions.
SELECT count(DISTINCT transaction_type) FROM Financial_Transactions,Combien y a-t-il de types de transactions différents ?
"SELECT avg(transaction_amount) , sum(transaction_amount) FROM Financial_transactions",Quel est le montant moyen et total de la transaction ?
"SELECT avg(transaction_amount) , sum(transaction_amount) FROM Financial_transactions","Renvoie le montant moyen des transactions, ainsi que le montant total de toutes les transactions."
"SELECT T2.card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Afficher les codes de type de carte et le nombre de transactions.
"SELECT T2.card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",Quels sont les différents types de cartes et combien de transactions ont été effectuées avec chacune ?
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Afficher le type de transaction et le nombre de transactions.
"SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type",Quels sont les différents types de transactions et combien de transactions ont eu lieu pour chacun ?
SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1,Quel est le type de transaction qui a traité le plus grand montant total de transactions ?
SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1,Renvoie le type de transaction avec le montant total le plus élevé.
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id",Afficher l'identifiant du compte et le nombre de transactions pour chaque compte
"SELECT account_id , count(*) FROM Financial_transactions GROUP BY account_id","Quels sont les différents identifiants de compte qui ont effectué des transactions financières, ainsi que le nombre de transactions correspondant à chacun ?"
SELECT count(*) FROM track,Combien de pistes avons-nous ?
SELECT count(*) FROM track,Comptez le nombre de pistes.
"SELECT name , LOCATION FROM track",Afficher le nom et l'emplacement de toutes les pistes.
"SELECT name , LOCATION FROM track",Quels sont les noms et les emplacements de toutes les pistes ?
"SELECT name , seating FROM track WHERE year_opened > 2000 ORDER BY seating","Afficher les noms et les sièges, classés par siège pour toutes les pistes ouvertes après 2000."
"SELECT name , seating FROM track WHERE year_opened > 2000 ORDER BY seating","Quels sont les noms et les sièges de toutes les pistes ouvertes après 2000, classés par siège ?"
"SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1","Quels sont le nom, l'emplacement et les sièges de la piste la plus récemment ouverte ?"
"SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1","Renvoyez le nom, l'emplacement et les sièges de la piste qui a été ouverte l'année la plus récente."
"SELECT min(seating) , max(seating) , avg(seating) FROM track","Quel est le nombre minimum, maximum et moyen de places assises pour toutes les pistes."
"SELECT min(seating) , max(seating) , avg(seating) FROM track","Renvoyez les places assises minimales, maximales et moyennes sur toutes les pistes."
"SELECT name , LOCATION , year_opened FROM track WHERE seating > (SELECT avg(seating) FROM track)","Afficher le nom, le lieu, l'année d'ouverture pour toutes les pistes avec un nombre de places supérieur à la moyenne."
"SELECT name , LOCATION , year_opened FROM track WHERE seating > (SELECT avg(seating) FROM track)","Quels sont les noms, les emplacements et les années d'ouverture des pistes avec des sièges supérieurs à la moyenne ?"
SELECT DISTINCT LOCATION FROM track,Quels sont les emplacements distincts où se trouvent les pistes ?
SELECT DISTINCT LOCATION FROM track,Donnez les différents emplacements des pistes.
SELECT count(*) FROM race,Combien y a-t-il de courses ?
SELECT count(*) FROM race,Comptez le nombre de courses.
SELECT DISTINCT CLASS FROM race,Quelles sont les classes distinctes que les races peuvent avoir ?
SELECT DISTINCT CLASS FROM race,Retournez les différentes classes de races.
"SELECT name , CLASS , date FROM race","Afficher le nom, la classe et la date de toutes les courses."
"SELECT name , CLASS , date FROM race","Quels sont les noms, les classes et les dates de toutes les courses ?"
"SELECT CLASS , count(*) FROM race GROUP BY CLASS",Indiquez la classe de course et le nombre de courses dans chaque classe.
"SELECT CLASS , count(*) FROM race GROUP BY CLASS","Quelles sont les différentes classes de races, et combien de races correspondent à chacune ?"
SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1,Quelle est la classe de course avec le plus grand nombre de courses.
SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1,Donnez la classe de races qui est la plus courante.
SELECT CLASS FROM race GROUP BY CLASS HAVING count(*) >= 2,Indiquez la classe de course avec au moins deux courses.
SELECT CLASS FROM race GROUP BY CLASS HAVING count(*) >= 2,Quelles sont les classes de races qui ont deux ou plusieurs races correspondantes ?
SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id WHERE T1.class = 'GT',Quels sont les noms des circuits sans course en classe 'GT'.
SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id WHERE T1.class = 'GT',Donnez les noms des pistes qui n'ont pas de course dans la classe 'GT'.
SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race),Afficher tous les noms de piste qui n'ont pas eu de courses.
SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race),Renvoie les noms des pistes qui n'ont eu aucune course.
SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000,Afficher l'année où une piste avec au moins 5000 places assises a été ouverte et une piste avec pas plus de 4000 places assises a été ouverte.
SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000,Quelles sont les années d'ouverture pour les pistes de 4000 à 5000 places assises ?
"SELECT T2.name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",Afficher le nom de la piste et le nombre de courses dans chaque piste.
"SELECT T2.name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",Quels sont les noms des différentes pistes et combien de courses chacune a-t-elle eues ?
SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1,Afficher le nom de la piste avec le plus grand nombre de courses.
SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom de la piste qui a eu le plus grand nombre de courses ?
"SELECT T1.name , T1.date , T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id",Afficher le nom et la date de chaque course et son nom de piste.
"SELECT T1.name , T1.date , T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id","Quels sont les noms et les dates des courses, et les noms des pistes où elles se déroulent ?"
"SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count(*) = 1",Afficher le nom et l'emplacement de la piste avec 1 course.
"SELECT T2.name , T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING count(*) = 1",Quels sont les noms et les emplacements des pistes qui ont eu exactement 1 course ?
SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000,Trouvez les emplacements où se trouvent à la fois des pistes de plus de 90 000 places et des pistes de moins de 70 000 places.
SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000,Quels sont les emplacements qui ont à la fois des pistes de plus de 90 000 sièges et des pistes de moins de 70 000 sièges ?
SELECT count(*) FROM member WHERE Membership_card = 'Black',Combien de membres ont la carte de membre noire ?
"SELECT count(*) , address FROM member GROUP BY address",Trouvez le nombre de membres vivant à chaque adresse.
SELECT name FROM member WHERE address = 'Harford' OR address = 'Waterbury',Donnez-moi les noms des membres dont l'adresse est à Harford ou Waterbury.
"SELECT name , member_id FROM member WHERE Membership_card = 'Black' OR age < 30",Retrouvez les identifiants et noms des membres de moins de 30 ans ou avec carte de membre noire.
"SELECT Time_of_purchase , age , address FROM member ORDER BY Time_of_purchase","Trouvez l'heure d'achat, l'âge et l'adresse de chaque membre, et affichez les résultats dans l'ordre de l'heure d'achat."
SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*) > 5,Quelle carte de membre compte plus de 5 membres ?
SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40,Quelle adresse compte à la fois des membres de moins de 30 ans et des membres de plus de 40 ans ?
SELECT membership_card FROM member WHERE address = 'Hartford' INTERSECT SELECT membership_card FROM member WHERE address = 'Waterbury',Quelle est la carte de membre détenue par les membres vivant à Hartford et ceux vivant à Waterbury ?
SELECT count(*) FROM member WHERE address != 'Hartford',Combien de membres ne vivent pas à Hartford?
SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card = 'Black',Quelle adresse n'a pas de membre avec la carte de membre noire ?
SELECT address FROM shop ORDER BY open_year,Afficher les adresses des magasins classées par année d'ouverture.
"SELECT avg(num_of_staff) , avg(score) FROM shop",Quels sont le score moyen et l'effectif moyen de tous les magasins ?
"SELECT shop_id , address FROM shop WHERE score < (SELECT avg(score) FROM shop)",Retrouver l'identifiant et l'adresse des commerces dont le score est inférieur au score moyen.
"SELECT address , num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",Trouvez l'adresse et le numéro d'employé des magasins qui n'ont pas d'happy hour.
"SELECT t1.address , t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id = t2.shop_id WHERE MONTH = 'May'",Quels sont l'identifiant et l'adresse des magasins qui ont un happy hour en mai ?
"SELECT shop_id , count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1",quel magasin a le plus souvent l'happy hour ? Indiquez son identifiant et le nombre de happy hours.
SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1,Quel mois a le plus de happy hours ?
SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*) > 2,Quels mois ont plus de 2 happy hours ?
SELECT count(*) FROM ALBUM,Combien y a-t-il d'albums ?
SELECT count(*) FROM ALBUM,Trouver le nombre d'albums.
SELECT Name FROM GENRE,Énumérez les noms de tous les genres musicaux.
SELECT Name FROM GENRE,Quels sont les noms des différents genres musicaux ?
"SELECT * FROM CUSTOMER WHERE State = ""NY""",Retrouvez toutes les informations clients dans l'état de NY.
"SELECT * FROM CUSTOMER WHERE State = ""NY""",Quelles sont toutes les informations client pour les clients de l'État de New York ?
"SELECT FirstName , LastName FROM EMPLOYEE WHERE City = ""Calgary""",Quels sont les prénoms et noms de famille des employés qui vivent dans la ville de Calgary.
"SELECT FirstName , LastName FROM EMPLOYEE WHERE City = ""Calgary""",Trouvez les noms complets des employés vivant dans la ville de Calgary.
SELECT distinct(BillingCountry) FROM INVOICE,Quels sont les pays de facturation distincts des factures ?
SELECT distinct(BillingCountry) FROM INVOICE,Retrouvez les différents pays de facturation pour toutes les factures.
"SELECT Name FROM ARTIST WHERE Name LIKE ""%a%""","Trouvez les noms de tous les artistes qui ont ""a"" dans leur nom."
"SELECT Name FROM ARTIST WHERE Name LIKE ""%a%""",Quels sont les noms d'artistes qui ont la lettre 'a' dans leur nom ?
"SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = ""AC/DC""","Retrouvez le titre de tous les albums de l'artiste ""AC/DC""."
"SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = ""AC/DC""","Quels sont les titres des albums de l'artiste ""AC/DC"" ?"
"SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = ""Metallica""","Combien d'albums l'artiste ""Metallica"" possède-t-il ?"
"SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = ""Metallica""","Trouver le nombre d'albums de l'artiste ""Metallica""."
"SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = ""Balls to the Wall""","À quel artiste appartient l'album ""Balls to the Wall"" ?"
"SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = ""Balls to the Wall""","Retrouvez le nom de l'artiste qui a réalisé l'album ""Balls to the Wall""."
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1,Quel artiste a le plus d'albums ?
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1,Quel est le nom de l'artiste avec le plus grand nombre d'albums ?
SELECT Name FROM TRACK WHERE Name LIKE '%you%',"Trouvez les noms de toutes les pistes qui contiennent le mot ""vous""."
SELECT Name FROM TRACK WHERE Name LIKE '%you%',Quels sont les noms des morceaux qui contiennent le mot you ?
SELECT AVG(UnitPrice) FROM TRACK,Quel est le prix unitaire moyen de toutes les pistes ?
SELECT AVG(UnitPrice) FROM TRACK,Trouver le prix unitaire moyen d'une piste.
"SELECT max(Milliseconds) , min(Milliseconds) FROM TRACK",Quelles sont les durées des pistes les plus longues et les plus courtes en millisecondes ?
"SELECT max(Milliseconds) , min(Milliseconds) FROM TRACK",Trouvez les durées maximales et minimales des pistes en millisecondes.
"SELECT T1.Title , T2.AlbumID , COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID","Afficher les noms d'album, les identifiants et le nombre de pistes pour chaque album."
"SELECT T1.Title , T2.AlbumID , COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID","Quels sont les noms et les identifiants des différents albums, et combien de pistes contiennent chacun ?"
SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1,Quel est le nom du genre le plus courant dans toutes les pistes ?
SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1,Trouvez le nom du genre qui est le plus fréquent sur toutes les pistes.
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1,Quel est le type de média le moins courant dans toutes les pistes ?
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1,Quel est le nom du type de média qui est le moins commun à toutes les pistes ?
"SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",Afficher les noms et les identifiants des albums contenant des pistes dont le prix unitaire est supérieur à 1.
"SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID",Quels sont les titres et identifiants des albums contenant des titres dont le prix unitaire est supérieur à 1 ?
"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Rock""",Combien de morceaux appartiennent au genre rock ?
"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Rock""",Comptez le nombre de morceaux qui font partie du genre rock.
"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Jazz""",Quel est le prix unitaire moyen des morceaux appartenant au genre Jazz ?
"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Jazz""",Trouver le prix unitaire moyen des morceaux de jazz.
"SELECT FirstName , LastName FROM CUSTOMER WHERE Email = ""luisg@embraer.com.br""","Quels sont le prénom et le nom du client qui a l'e-mail ""luisg@embraer.com.br"" ?"
"SELECT FirstName , LastName FROM CUSTOMER WHERE Email = ""luisg@embraer.com.br""","Retrouvez le nom complet du client avec l'email ""luisg@embraer.com.br""."
"SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""","Combien de clients ont une adresse e-mail contenant ""gmail.com"" ?"
"SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""","Comptez le nombre de clients qui ont un email contenant ""gmail.com""."
"SELECT T2.FirstName , T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.FirstName = ""Leonie""",Quel est le nom et le prénom de l'employé qui aide le client avec le prénom Léonie ?
"SELECT T2.FirstName , T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.FirstName = ""Leonie""",Retrouvez les noms complets des employés qui aident les clients avec le prénom Léonie.
"SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = ""70174""",Dans quelle ville habite l'employé qui aide le client avec le code postal 70174 ?
"SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = ""70174""",Trouvez les villes correspondant aux employés qui aident les clients avec le code postal 70174.
SELECT COUNT(DISTINCT city) FROM EMPLOYEE,Dans combien de villes distinctes les employés vivent-ils ?
SELECT COUNT(DISTINCT city) FROM EMPLOYEE,Trouvez le nombre de villes différentes dans lesquelles vivent les employés.
"SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Retrouvez toutes les dates de facturation correspondant aux clients dont le prénom Astrid et le nom Gruber.
"SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = ""Astrid"" AND LastName = ""Gruber""",Quelles sont les dates de facturation des clients avec le prénom Astrid et le nom de famille Gruber ?
SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId = T2.CustomerId WHERE T2.total > 20,Trouvez tous les noms de famille des clients dont le total des factures n'est pas supérieur à 20.
SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId = T2.CustomerId WHERE T2.total > 20,Quels sont les noms de famille des clients dont le total des factures n'excède pas 20 ?
"SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = ""Brazil""",Trouver les prénoms de tous les clients qui vivent au Brésil et avoir une facture.
"SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = ""Brazil""",Quels sont les différents prénoms des clients du Brésil qui ont également eu une facture ?
"SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = ""Germany""",Trouvez l'adresse de tous les clients qui vivent en Allemagne et qui ont une facture.
"SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = ""Germany""",Quelles sont les adresses des clients résidant en Allemagne qui ont eu une facture ?
SELECT Phone FROM EMPLOYEE,Dressez la liste des numéros de téléphone de tous les employés.
SELECT Phone FROM EMPLOYEE,Quels sont les numéros de téléphone de chaque employé ?
"SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = ""AAC audio file""",Combien y a-t-il de pistes dans le type de média du fichier audio AAC ?
"SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = ""AAC audio file""","Comptez le nombre de pistes du type de média ""fichier audio AAC""."
"SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Latin"" OR T1.Name = ""Pop""",Quelle est la durée moyenne en millisecondes des morceaux appartenant au genre Latin ou Pop ?
"SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Latin"" OR T1.Name = ""Pop""",Trouvez la durée moyenne en millisecondes des pistes latines et pop.
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) >= 10",Veuillez indiquer les prénoms et identifiants des employés qui servent au moins 10 clients.
"SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) >= 10",Quels sont les prénoms et identifiants des représentants de l'assistance pour les employés servant 10 clients ou plus ?
SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) <= 20,Veuillez indiquer les noms de famille des employés qui ne servent pas plus de 20 clients.
SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) <= 20,Quels sont les noms de famille des employés qui servent au plus 20 clients ?
SELECT Title FROM ALBUM ORDER BY Title,Veuillez lister tous les titres d'albums par ordre alphabétique.
SELECT Title FROM ALBUM ORDER BY Title,"Quels sont tous les titres des albums, par ordre alphabétique ?"
"SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*) >= 3 ORDER BY T2.Name",Veuillez indiquer le nom et l'identifiant de tous les artistes qui ont au moins 3 albums par ordre alphabétique.
"SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*) >= 3 ORDER BY T2.Name","Quels sont les noms et identifiants des artistes avec 3 albums ou plus, classés par ordre alphabétique ?"
SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId,Trouvez les noms des artistes qui n'ont pas d'albums.
SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId,Comment s'appellent les artistes qui n'ont sorti aucun album ?
"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Rock""",Quel est le prix unitaire moyen des pistes rock ?
"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Rock""",Trouvez le prix unitaire moyen des morceaux du genre Rock.
"SELECT max(Milliseconds) , min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Pop""",Quelle est la durée des pistes pop les plus longues et les plus courtes en millisecondes ?
"SELECT max(Milliseconds) , min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = ""Pop""",Trouvez les longueurs maximales et minimales en millisecondes des pistes pop.
"SELECT BirthDate FROM EMPLOYEE WHERE City = ""Edmonton""",Quelles sont les dates de naissance des employés vivant à Edmonton?
"SELECT BirthDate FROM EMPLOYEE WHERE City = ""Edmonton""",Trouvez les dates de naissance correspondant aux employés qui habitent la ville d'Edmonton.
SELECT distinct(UnitPrice) FROM TRACK,Quels sont les prix unitaires distincts de toutes les pistes ?
SELECT distinct(UnitPrice) FROM TRACK,Trouvez les prix unitaires distincts pour les pistes.
SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM),Combien d'artistes n'ont pas d'album ?
SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM),Comptez le nombre d'artistes qui n'ont pas sorti d'album.
SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock',"Quels sont les titres des albums contenant à la fois des morceaux de genre ""Reggae"" et ""Rock"" ?"
SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock',Trouvez les titres des albums qui contiennent des morceaux des genres Reggae et Rock.
SELECT customer_phone FROM available_policies,Trouvez tous les numéros de téléphone.
SELECT customer_phone FROM available_policies,Quels sont tous les numéros de téléphone ?
"SELECT customer_phone FROM available_policies WHERE policy_type_code = ""Life Insurance""","Quels sont les numéros de téléphone des clients dans le cadre du contrat ""Assurance Vie"" ?"
"SELECT customer_phone FROM available_policies WHERE policy_type_code = ""Life Insurance""","Quels sont les numéros de téléphone des clients utilisant la police avec le code ""Assurance vie"" ?"
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1,Quel type de stratégie contient le plus d'enregistrements dans la base de données ?
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1,Quel type de politique apparaît le plus fréquemment dans les politiques disponibles ?
SELECT customer_phone FROM available_policies WHERE policy_type_code = (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1),Quels sont tous les numéros de téléphone des clients sous le type de police le plus populaire ?
SELECT customer_phone FROM available_policies WHERE policy_type_code = (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1),Trouvez les numéros de téléphone des clients utilisant le type de politique le plus courant parmi les politiques disponibles.
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*) > 4,Recherchez le type de police utilisé par plus de 4 clients.
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*) > 4,Trouvez les types de polices que plus de 4 clients utilisent. Montrez leur code de type.
"SELECT sum(settlement_amount) , avg(settlement_amount) FROM settlements",Trouver le montant total et moyen des règlements.
"SELECT sum(settlement_amount) , avg(settlement_amount) FROM settlements",Renvoie la somme et la moyenne de tous les montants de règlement.
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING count(*) > 2,Trouvez le nom des services qui ont été utilisés plus de 2 fois dans la première notification de perte.
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING count(*) > 2,Quels services ont été utilisés plus de deux fois lors de la première déclaration de sinistre ? Renvoie le nom du service.
SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id = t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1,Quelle est la date d'effet de la réclamation qui a le plus grand montant de règlement total ?
SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id = t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1,Trouvez la réclamation qui a le montant de règlement total le plus élevé. Renvoyer la date d'effet de la réclamation.
"SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = ""Dayana Robel""","Combien de polices sont répertoriées pour le client nommé ""Dayana Robel"" ?"
"SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = ""Dayana Robel""","Comptez le nombre total de polices utilisées par le client nommé ""Dayana Robel""."
SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom du client qui a le plus de polices répertoriées ?
SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1,Quel client utilise le plus de polices ? Donnez-moi le nom du client.
"SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = ""Dayana Robel""","Quels sont tous les types de polices du client nommé ""Dayana Robel"" ?"
"SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = ""Dayana Robel""","Dites-moi les types de polices utilisées par la cliente nommée ""Dayana Robel""."
SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1),Quels sont tous les types de polices du client qui a le plus de polices répertoriées ?
SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1),Répertorier tous les types de polices utilisés par le client inscrit au plus grand nombre de polices.
SELECT service_name FROM services ORDER BY service_name,Listez tous les services par ordre alphabétique.
SELECT service_name FROM services ORDER BY service_name,Donnez-moi une liste de tous les noms de service triés par ordre alphabétique.
SELECT count(*) FROM services,Combien y a-t-il de services ?
SELECT count(*) FROM services,Comptez le nombre total de services disponibles.
SELECT count(*) FROM services,Combien y a-t-il de services ?
SELECT count(*) FROM services,Comptez le nombre de services.
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id,Trouver les noms des utilisateurs qui n'ont pas de premier avis de sinistre.
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id,Quels clients ne disposent pas d'un premier dossier de déclaration de sinistre ? Donnez-moi les noms des clients.
"SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = ""Close a policy"" OR t3.service_name = ""Upgrade a policy""","Retrouvez les noms des clients qui ont utilisé soit le service ""Fermer un contrat"" ​​soit le service ""Mettre à jour un contrat""."
"SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = ""Close a policy"" OR t3.service_name = ""Upgrade a policy""","Quels clients ont utilisé le service nommé ""Fermer une police"" ou ""Mettre à jour une police"" ? Donnez-moi les noms des clients."
"SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = ""Close a policy"" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = ""New policy application""","Retrouvez les noms des clients qui ont utilisé à la fois le service ""Fermer un contrat"" ​​et le service ""Nouvelle demande de contrat""."
"SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = ""Close a policy"" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = ""New policy application""","Quels clients ont utilisé à la fois le service nommé ""Fermer une politique"" et le service nommé ""Mettre à jour une politique"" ? Donnez-moi les noms des clients."
"SELECT customer_id FROM customers WHERE customer_name LIKE ""%Diana%""","Trouver les identifiants des clients dont le nom contient ""Diana""."
"SELECT customer_id FROM customers WHERE customer_name LIKE ""%Diana%""","Quels sont les identifiants des clients qui ont ""Diana"" dans une partie de leur nom ?"
"SELECT max(settlement_amount) , min(settlement_amount) FROM settlements",Quels sont les montants de règlement maximum et minimum enregistrés ?
"SELECT max(settlement_amount) , min(settlement_amount) FROM settlements",Trouvez le montant de règlement maximum et minimum.
"SELECT customer_id , customer_name FROM customers ORDER BY customer_id ASC",Listez tous les clients par ordre croissant d'ID.
"SELECT customer_id , customer_name FROM customers ORDER BY customer_id ASC",Quelle est la liste ordonnée des identifiants client ?
"SELECT t2.date_opened , t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE ""%Diana%""","Récupérer les dates d'ouverture et de fermeture de toutes les polices associées au client dont le nom contient ""Diana"""
"SELECT t2.date_opened , t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE ""%Diana%""","Quelles sont les dates d'ouverture et de fermeture de toutes les polices utilisées par le client qui a ""Diana"" dans une partie de son nom ?"
SELECT count(*) FROM enzyme,Combien y a-t-il de sortes d'enzymes ?
SELECT count(*) FROM enzyme,Quel est le nombre total d'enzymes ?
SELECT name FROM enzyme ORDER BY name DESC,Dressez la liste des noms d'enzymes par ordre lexicographique décroissant.
SELECT name FROM enzyme ORDER BY name DESC,Quels sont les noms des enzymes par ordre décroissant ?
"SELECT name , LOCATION FROM enzyme",Énumérez les noms et les endroits où les enzymes peuvent avoir un effet.
"SELECT name , LOCATION FROM enzyme",Quels sont les noms et les emplacements de toutes les enzymes répertoriées ?
SELECT max(OMIM) FROM enzyme,Quelle est la valeur maximale de l'héritage mendélien en ligne chez l'homme (OMIM) des enzymes ?
SELECT max(OMIM) FROM enzyme,Quelle est la valeur OMIM maximale dans la base de données ?
"SELECT product , chromosome , porphyria FROM enzyme WHERE LOCATION = 'Cytosol'","Quel est le produit, le chromosome et la porphyrie liés aux enzymes qui agissent à l'emplacement « Cytosol » ?"
"SELECT product , chromosome , porphyria FROM enzyme WHERE LOCATION = 'Cytosol'","Quel est le produit, le chromosome et la porphyrie des enzymes situées au « Cytosol » ?"
SELECT name FROM enzyme WHERE product != 'Heme',Comment s'appellent les enzymes qui ne produisent pas d'hème ?
SELECT name FROM enzyme WHERE product != 'Heme',"Quels sont les noms des enzymes dont le produit n'est pas ""hème"" ?"
"SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",Quels sont les noms et les noms commerciaux des médicaments qui ont la valeur « Oui » dans le dossier de la FDA ?
"SELECT name , trade_name FROM medicine WHERE FDA_approved = 'Yes'",Quels sont les noms et les noms commerciaux des médicaments approuvés par la FDA ?
SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor',"Quels sont les noms des enzymes contenues dans le médicament appelé ""Amisulpride"" qui peuvent servir d'""inhibiteurs"" ?"
SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor',Quels sont les noms des enzymes utilisées dans le médicament Amisulpride qui agissent comme inhibiteurs ?
"SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count(*) >= 2",Quels sont les identifiants et les noms des médicaments qui peuvent interagir avec deux enzymes ou plus ?
"SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count(*) >= 2","Pour chaque identifiant de médicament, quels sont les noms des médicaments qui peuvent interagir avec plus d'une enzyme ?"
"SELECT T1.id , T1.Name , T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC","Quels sont les identifiants, les noms et le statut d'approbation de la FDA des médicaments par ordre décroissant du nombre d'enzymes avec lesquelles ils peuvent interagir."
"SELECT T1.id , T1.Name , T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC","Quels sont les identifiants, les noms et le statut d'approbation de la FDA pour les médicaments commandés par nombre décroissant d'interactions enzymatiques possibles ?"
"SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom de l'enzyme avec le plus grand nombre de médicaments qui peuvent interagir en tant qu'« activateur » ?
"SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom de l'enzyme qui peut interagir avec la plupart des médicaments en tant qu'activateur ?
SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole',Quel est le type d'interaction de l'enzyme nommée « ALA synthase » et du médicament nommé « Aripiprazole » ?
SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole',Quel est le type d'interaction entre l'enzyme nommée « ALA synthase » et le médicament nommé « Aripiprazole » ?
"SELECT interaction_type , count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",Quel est le type d'interaction le plus courant entre les enzymes et les médicaments ? Et combien sont-ils ?
"SELECT interaction_type , count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1","Quels sont les types d'interactions les plus courants entre les enzymes et les médicaments, et combien y en a-t-il ?"
SELECT count(*) FROM medicine WHERE FDA_approved = 'No',Combien de médicaments ont le statut d'approbation FDA 'Non' ?
SELECT count(*) FROM medicine WHERE FDA_approved = 'No',Combien de médicaments n'ont pas été approuvés par la FDA ?
SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );,Combien d'enzymes n'ont aucune interaction ?
SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );,Quel est le nombre d'enzymes sans aucune interaction ?
"SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT(*) >= 3",Quel est l'identifiant et le nom commercial des médicaments pouvant interagir avec au moins 3 enzymes ?
"SELECT T1.id , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT(*) >= 3",Quels sont les identifiants et les noms commerciaux du médicament qui peut interagir avec au moins 3 enzymes ?
"SELECT DISTINCT T1.name , T1.location , T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'","Quels sont le nom, l'emplacement et les produits distincts des enzymes qui ont une interaction « inhibiteur » ?"
"SELECT DISTINCT T1.name , T1.location , T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'","Quels sont les différents noms, emplacements et produits des enzymes capables d'interagir avec les inhibiteurs ?"
"SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'inhibitor' INTERSECT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'activitor'",Indiquez le nom du médicament et le nom commercial qui peuvent à la fois interagir comme « inhibiteur » et « activateur » avec les enzymes.
"SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'inhibitor' INTERSECT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'activitor'",Quels sont les médicaments et les noms commerciaux qui peuvent interagir en tant qu'inhibiteur et activateur avec les enzymes ?
"SELECT name , trade_name FROM medicine EXCEPT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id JOIN enzyme AS T3 ON T3.id = T2.enzyme_id WHERE T3.product = 'Protoporphyrinogen IX'",Indiquez les noms de médicaments et les noms commerciaux qui ne peuvent pas interagir avec l'enzyme avec le produit « Heme ».
"SELECT name , trade_name FROM medicine EXCEPT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id JOIN enzyme AS T3 ON T3.id = T2.enzyme_id WHERE T3.product = 'Protoporphyrinogen IX'",Quels sont les médicaments et les noms commerciaux qui ne peuvent pas interagir avec l'enzyme avec le produit « Heme » ?
SELECT count(DISTINCT FDA_approved) FROM medicine,Combien de statuts d'approbation distincts de la FDA existe-t-il pour les médicaments ?
SELECT count(DISTINCT FDA_approved) FROM medicine,Combien de statuts d'approbation différents de la FDA existent pour les médicaments ?
"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""","Quels noms d'enzymes ont la sous-chaîne ""ALA"" ?"
"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""",Quels sont les noms des enzymes qui incluent la chaîne « ALA » ?
"SELECT trade_name , count(*) FROM medicine GROUP BY trade_name",trouver le nombre de médicaments offerts par chaque commerce.
"SELECT trade_name , count(*) FROM medicine GROUP BY trade_name",Combien de médicaments sont proposés par chaque nom commercial ?
"SELECT school , nickname FROM university ORDER BY founded",Énumérez toutes les écoles et leurs surnoms dans l'ordre de l'année de fondation.
"SELECT school , nickname FROM university ORDER BY founded","Quelles sont les différentes écoles et leurs surnoms, classés par leurs années de fondation ?"
"SELECT school , LOCATION FROM university WHERE affiliation = 'Public'",Énumérez toutes les écoles publiques et leurs emplacements.
"SELECT school , LOCATION FROM university WHERE affiliation = 'Public'",Quelles sont les écoles publiques et quels sont leurs emplacements?
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1,Quand l'école avec le plus grand nombre d'inscriptions a-t-elle été fondée ?
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1,Renvoie l'année de création de l'école avec le plus grand nombre d'inscriptions.
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,Trouvez l'année de fondation de la plus récente école non publique.
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,Quelle est l'année de fondation de l'école non publique qui a été fondée le plus récemment ?
SELECT count(DISTINCT school_id) FROM basketball_match,Combien d'écoles sont dans le match de basket?
SELECT count(DISTINCT school_id) FROM basketball_match,Comptez le nombre d'écoles qui ont eu des matchs de basket.
SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1,Quel est le score en pourcentage le plus élevé de la compétition ?
SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1,Renvoie le pourcentage d'accélération le plus élevé sur tous les matchs de basket-ball.
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent LIMIT 1,Quelle est la conférence principale de l'école qui a le score de pourcentage d'acc le plus bas du concours ?
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent LIMIT 1,Renvoie la conférence principale de l'école avec le score de pourcentage d'acc le plus bas.
"SELECT t2.team_name , t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t1.founded LIMIT 1",Quel est le nom de l'équipe et le score de la saison régulière de l'école qui a été fondée le plus longtemps ?
"SELECT t2.team_name , t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t1.founded LIMIT 1",Renvoyez le nom de l'équipe et l'acc pendant la saison régulière pour l'école qui a été fondée le plus tôt.
"SELECT t2.All_Games , t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'",Trouvez l'emplacement et le score de tous les jeux de l'école qui a Clemson comme nom d'équipe.
"SELECT t2.All_Games , t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'",Quel est le score de tous les jeux et l'emplacement de l'école appelée Clemson ?
SELECT avg(enrollment) FROM university WHERE founded < 1850,Quelle est la taille moyenne des inscriptions dans les universités fondées avant 1850 ?
SELECT avg(enrollment) FROM university WHERE founded < 1850,Renvoie le nombre moyen d'inscriptions dans les universités fondées avant 1850.
"SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",Afficher l'inscription et la conférence_primaire du collège le plus ancien.
"SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1",Quelles sont les inscriptions et la conférence primaire pour l'université qui a été fondée le plus tôt ?
"SELECT sum(enrollment) , min(enrollment) FROM university",Quel est le nombre total et minimum d'inscriptions de toutes les écoles ?
"SELECT sum(enrollment) , min(enrollment) FROM university",Renvoie les inscriptions totales et minimales dans toutes les écoles.
"SELECT sum(enrollment) , affiliation FROM university GROUP BY affiliation",Trouvez le nombre total d'inscriptions d'élèves pour différents types d'écoles d'affiliation.
"SELECT sum(enrollment) , affiliation FROM university GROUP BY affiliation",Quels sont les effectifs totaux des universités de chaque type d'affiliation ?
SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match),Combien d'écoles ne participent pas au match de basket ?
SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match),Comptez le nombre d'universités qui ne participent pas au match de baketball.
SELECT school FROM university WHERE founded > 1850 OR affiliation = 'Public',Trouvez les écoles fondées après 1850 ou publiques.
SELECT school FROM university WHERE founded > 1850 OR affiliation = 'Public',Quelles sont les écoles fondées avant 1850 ou publiques ?
SELECT count(DISTINCT affiliation) FROM university,Découvrez le nombre de types d'affiliation différents.
SELECT count(DISTINCT affiliation) FROM university,Comptez le nombre de types d'affiliation différents.
"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""",Trouvez combien d'emplacements d'écoles ont le mot 'NY'.
"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""",Combien d'universités ont un emplacement qui contient NY ?
SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE enrollment < (SELECT avg(enrollment) FROM university),Trouvez les noms des équipes des universités dont les inscriptions sont inférieures à la taille moyenne des inscriptions.
SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE enrollment < (SELECT avg(enrollment) FROM university),Quels sont les noms des équipes des universités qui ont un effectif inférieur à la moyenne ?
"SELECT count(*) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation",Trouvez le nombre d'universités qui ont plus de 20 000 inscriptions pour chaque type d'affiliation.
"SELECT count(*) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation",Quelles sont les différentes affiliations et combien d'écoles ont chacune un nombre d'inscriptions supérieur à 20 000 ?
"SELECT sum(Enrollment) , affiliation FROM university WHERE founded > 1850 GROUP BY affiliation",Trouvez le nombre total d'étudiants inscrits dans les collèges qui ont été fondés après l'année 1850 pour chaque type d'affiliation.
"SELECT sum(Enrollment) , affiliation FROM university WHERE founded > 1850 GROUP BY affiliation",Quelles sont les différentes affiliations et quel est l'effectif total des écoles fondées après 1850 pour chaque type d'inscription ?
SELECT max(Enrollment) FROM university,Quel est le nombre maximum d'inscriptions dans toutes les écoles ?
SELECT max(Enrollment) FROM university,Renvoyer le maximum d'inscriptions dans toutes les écoles.
SELECT * FROM basketball_match,Énumérez toutes les informations concernant le match de basket.
SELECT * FROM basketball_match,Quelles sont toutes les informations sur le match de basket?
SELECT team_name FROM basketball_match ORDER BY All_Home DESC,"Listez les noms de toutes les équipes de la compétition de basket-ball, classés par tous les scores à domicile dans l'ordre décroissant."
SELECT team_name FROM basketball_match ORDER BY All_Home DESC,"Quels sont les noms de toutes les équipes de la compétition de basket-ball, triées par tous les scores à domicile par ordre décroissant ?"
SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;,les noms des modèles lancés entre 2002 et 2004.
"SELECT Model_name , RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;",Quel modèle a le moins de RAM ? Indiquez le nom du modèle et la quantité de RAM.
"SELECT chip_model , screen_mode FROM phone WHERE Hardware_Model_name = ""LG-P760"";","Quels sont le modèle de puce et le mode d'écran du téléphone avec le nom de modèle matériel ""LG-P760"" ?"
"SELECT count(*) FROM phone WHERE Company_name = ""Nokia Corporation"";","Combien de modèles de matériel téléphonique sont produits par la société nommée ""Nokia Corporation"" ?"
"SELECT max(T1.RAM_MiB) , min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = ""Nokia Corporation"";","Quelle est la taille maximale et minimale de la RAM du téléphone produit par la société nommée ""Nokia Corporation"" ?"
"SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = ""Nokia Corporation"";","Quelle est la taille moyenne de la ROM des téléphones produits par la société nommée ""Nokia Corporation"" ?"
"SELECT T2.Hardware_Model_name , T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32;",Indiquez le nom du modèle matériel et le nom de la société pour tous les téléphones qui ont été lancés en 2002 ou dont la taille de RAM est supérieure à 32.
"SELECT Hardware_Model_name , Company_name FROM phone WHERE Accreditation_type LIKE 'Full';","Trouvez tous les téléphones qui ont le mot ""Complet"" dans leurs types d'accréditation. Indiquez le nom du modèle de matériel et le nom de la société."
"SELECT T1.Char_cells , T1.Pixels , T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = ""LG-P760"";","Trouvez les couleurs des cellules char, des pixels et du matériel pour l'écran du téléphone dont le nom du modèle matériel est ""LG-P760""."
"SELECT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = ""Graphics"";","Indiquez le nom du modèle matériel et le nom de l'entreprise pour le téléphone dont le type de mode d'écran est ""Graphiques""."
"SELECT Company_name , count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;",Trouvez le nom de l'entreprise qui a le moins de modèles de téléphones. Indiquez le nom de l'entreprise et le numéro de modèle de téléphone produit par cette entreprise.
SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*) > 1;,Indiquez le nom de l'entreprise qui a produit plus d'un modèle de téléphone.
"SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;","Lister le nombre maximum, minimum et moyen de ko utilisés en mode écran."
SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;,Indiquez le nom du modèle de téléphone lancé en 2002 et avec la taille de RAM la plus élevée.
"SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = ""LG-P760"";","Quels sont le type de mode Wi-Fi et d'écran du modèle matériel nommé ""LG-P760"" ?"
"SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = ""Text"" OR T1.RAM_MiB > 32;","Indiquez le nom du modèle matériel pour les téléphones dont le type de mode d'écran ""Texte"" ou la taille de la RAM est supérieure à 32."
"SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = ""Graphics"" OR t2.Company_name = ""Nokia Corporation""","Indiquez le nom du modèle matériel pour les téléphones qui ont été produits par ""Nokia Corporation"" ou dont le type de mode d'écran est ""Graphiques""."
"SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = ""Nokia Corporation"" AND T1.Type != ""Text"";","Indiquez le nom du modèle matériel pour les téléphones qui ont été produits par ""Nokia Corporation"" mais dont le type de mode d'écran n'est pas Texte."
"SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;",Indiquez le modèle de matériel téléphonique et le nom de l'entreprise pour les téléphones dont l'utilisation de l'écran en Ko est comprise entre 10 et 15.
"SELECT Accreditation_type , count(*) FROM phone GROUP BY Accreditation_type",Trouvez le nombre de téléphones pour chaque type d'accréditation.
"SELECT Accreditation_type , count(*) FROM phone GROUP BY Accreditation_type",Combien de téléphones appartiennent à chaque type d'accréditation ?
SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*) > 3,Trouvez le niveau d'accréditation que plus de 3 téléphones utilisent.
SELECT * FROM chip_model,Trouvez les détails pour tous les modèles de puces.
SELECT count(*) FROM chip_model WHERE wifi = 'No',Combien de modèles n'ont pas la fonction wifi ?
SELECT count(*) FROM chip_model WHERE wifi = 'No',Comptez le nombre de modèles de puces qui n'ont pas de wifi.
SELECT model_name FROM chip_model ORDER BY launch_year,Listez tous les noms de modèles triés par année de lancement.
SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone),Trouvez la taille moyenne de la mémoire vive des modèles de puces qui ne sont jamais utilisées par aucun téléphone.
SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type = 'Full',Trouvez les noms des modèles de puces qui ne sont utilisés par aucun téléphone avec un type d'accréditation complet.
SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode = t2.screen_mode WHERE t2.Accreditation_type = 'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode = t2.screen_mode WHERE t2.Accreditation_type = 'Full',Trouvez les pixels des modes d'écran utilisés par les téléphones avec des types d'accréditation complets et les téléphones avec des types d'accréditation provisoires.
SELECT count(*) FROM country,Combien y a-t-il de pays au total ?
SELECT count(*) FROM country,Comptez le nombre de pays.
"SELECT Country_name , Capital FROM country",Afficher le nom du pays et la capitale de tous les pays.
"SELECT Country_name , Capital FROM country",Quels sont les noms et les capitales de chaque pays ?
"SELECT Official_native_language FROM country WHERE Official_native_language LIKE ""%English%""","Afficher toutes les langues maternelles officielles qui contiennent le mot ""anglais""."
"SELECT Official_native_language FROM country WHERE Official_native_language LIKE ""%English%""","Quelles sont les langues maternelles officielles qui contiennent la chaîne ""English""."
SELECT DISTINCT POSITION FROM match_season,Afficher toutes les positions distinctes des matchs.
SELECT DISTINCT POSITION FROM match_season,Quelles sont les différentes positions pour la saison de match?
"SELECT Player FROM match_season WHERE College = ""UCLA""",Montrez les joueurs du collège UCLA.
"SELECT Player FROM match_season WHERE College = ""UCLA""",Qui sont les joueurs de UCLA ?
"SELECT DISTINCT POSITION FROM match_season WHERE College = ""UCLA"" OR College = ""Duke""",Montrez la position distincte des joueurs du collège UCLA ou Duke.
"SELECT DISTINCT POSITION FROM match_season WHERE College = ""UCLA"" OR College = ""Duke""",Quelles sont les différentes positions des joueurs des collèges UCLA ou Duke ?
"SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE POSITION = ""Defender""",Affichez les numéros de choix de repêchage et les classes de repêchage des joueurs dont les positions sont des défenseurs.
"SELECT Draft_Pick_Number , Draft_Class FROM match_season WHERE POSITION = ""Defender""",Quels sont les nombres de choix de repêchage et les classes de repêchage pour les joueurs qui jouent au poste de défenseur ?
SELECT count(DISTINCT Team) FROM match_season,Combien d'équipes distinctes sont impliquées dans les saisons de match ?
SELECT count(DISTINCT Team) FROM match_season,Comptez le nombre d'équipes différentes impliquées dans la saison des matchs.
"SELECT Player , Years_Played FROM player",Afficher les joueurs et les années jouées.
"SELECT Player , Years_Played FROM player",Qui sont les différents joueurs et combien d'années chacun a-t-il joué ?
SELECT Name FROM Team,Afficher tous les noms d'équipe.
SELECT Name FROM Team,Comment s'appellent toutes les équipes ?
"SELECT T2.Season , T2.Player , T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country","Affichez la saison, le joueur et le nom du pays auquel appartient ce joueur."
"SELECT T2.Season , T2.Player , T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country","Pour chaque joueur, quels sont son nom, sa saison et son pays d'appartenance ?"
"SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = ""Indonesia""",Quels joueurs viennent d'Indonésie ?
"SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = ""Indonesia""",Qui sont les joueurs indonésiens ?
"SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = ""Dublin""",Quelles sont les positions distinctes des acteurs d'un pays dont la capitale est Dublin ?
"SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = ""Dublin""",Donnez les différentes positions des joueurs qui jouent pour le pays avec la capitale Dublin.
"SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = ""Maryland"" OR T2.College = ""Duke""",Quelles sont les langues officielles des pays des joueurs du Maryland ou du Duke College ?
"SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = ""Maryland"" OR T2.College = ""Duke""",Renvoyez les langues maternelles officielles des pays qui ont des joueurs du Maryland ou des collèges Duke.
"SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = ""Defender""",Combien de langues officielles distinctes y a-t-il parmi les pays des joueurs dont les postes sont défenseurs.
"SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = ""Defender""",Comptez le nombre de langues officielles différentes correspondant aux pays d'origine des joueurs qui jouent à Defender.
"SELECT T1.Season , T1.Player , T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id","Affichez la saison, le joueur et le nom de l'équipe à laquelle appartiennent les joueurs."
"SELECT T1.Season , T1.Player , T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id","Qui sont les différents joueurs, à quelle saison jouent-ils et quel est le nom de l'équipe dans laquelle ils évoluent ?"
"SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = ""Ryley Goldner""","Afficher les positions des joueurs de l'équipe avec le nom ""Ryley Goldner""."
"SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = ""Ryley Goldner""",Retournez les positions des joueurs de l'équipe Ryley Goldner.
"SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = ""Columbus Crew""","Combien de collèges distincts sont associés à des joueurs de l'équipe portant le nom ""Columbus Crew""."
"SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = ""Columbus Crew""",Comptez le nombre de collèges différents dont sont issus les joueurs qui jouent pour Columbus Crew.
"SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = ""Columbus Crew""","Afficher les joueurs et les années jouées pour les joueurs de l'équipe ""Columbus Crew""."
"SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = ""Columbus Crew""","Quels sont les joueurs qui ont joué pour Columbus Crew, et combien d'années chacun a-t-il joué ?"
"SELECT POSITION , COUNT(*) FROM match_season GROUP BY POSITION",Afficher la position des joueurs et le nombre de joueurs correspondant.
"SELECT POSITION , COUNT(*) FROM match_season GROUP BY POSITION",Combien de joueurs ont joué à chaque position ?
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",Afficher les noms de pays et le nombre de joueurs correspondant.
"SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name",Combien y a-t-il de joueurs de chaque pays ?
SELECT player FROM match_season ORDER BY College ASC,Renvoie tous les joueurs triés par collège dans l'ordre alphabétique croissant.
SELECT player FROM match_season ORDER BY College ASC,"Quels sont tous les joueurs qui ont joué la saison des matchs, triés par collège par ordre alphabétique croissant ?"
SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1,Afficher la position la plus courante des joueurs dans les saisons de match.
SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1,Quelle est la position la plus courante chez les joueurs lors des saisons de match ?
SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3,Affichez les 3 collèges de joueurs les plus courants au cours des saisons de match.
SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3,Quels sont les trois collèges dont sont issus le plus de joueurs ?
SELECT College FROM match_season GROUP BY College HAVING count(*) >= 2,Montrez le nom des collèges qui ont au moins deux joueurs.
SELECT College FROM match_season GROUP BY College HAVING count(*) >= 2,Quels sont les noms de tous les collèges qui ont deux joueurs ou plus ?
SELECT College FROM match_season GROUP BY College HAVING count(*) >= 2 ORDER BY College DESC,Afficher le nom des collèges qui ont au moins deux joueurs par ordre alphabétique décroissant.
SELECT College FROM match_season GROUP BY College HAVING count(*) >= 2 ORDER BY College DESC,"Quels sont les noms des collèges qui comptent deux joueurs ou plus, classés par ordre alphabétique décroissant ?"
SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season),Quels sont les noms des équipes qui n'ont pas de record de saison de match ?
SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season),Renvoie les noms des équipes qui n'ont aucun record de saison de match.
"SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = ""Forward"" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = ""Defender""",Quels sont les noms des pays qui ont à la fois des joueurs au poste d'attaquant et des joueurs au poste de défenseur ?
"SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = ""Forward"" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = ""Defender""","Renvoie les noms des pays qui ont des joueurs qui jouent en position d'attaquant, ainsi que des joueurs qui jouent en position de défenseur."
"SELECT College FROM match_season WHERE POSITION = ""Midfielder"" INTERSECT SELECT College FROM match_season WHERE POSITION = ""Defender""",Quel collège a à la fois des joueurs au poste de milieu de terrain et des joueurs au poste de défenseur ?
"SELECT College FROM match_season WHERE POSITION = ""Midfielder"" INTERSECT SELECT College FROM match_season WHERE POSITION = ""Defender""","Renvoyez les collèges qui ont des joueurs qui jouent au poste de milieu de terrain, ainsi que des joueurs qui jouent au poste de défenseur."
SELECT count(*) FROM climber,Combien y a-t-il de grimpeurs ?
SELECT count(*) FROM climber,Comptez le nombre de grimpeurs.
SELECT Name FROM climber ORDER BY Points DESC,Énumérez les noms des grimpeurs par ordre décroissant de points.
SELECT Name FROM climber ORDER BY Points DESC,"Quels sont les noms des grimpeurs, classés par points descendants ?"
"SELECT Name FROM climber WHERE Country != ""Switzerland""",Énumérez les noms des grimpeurs dont le pays n'est pas la Suisse.
"SELECT Name FROM climber WHERE Country != ""Switzerland""",Comment s'appellent les grimpeurs qui ne sont pas originaires de la Suisse ?
"SELECT max(Points) FROM climber WHERE Country = ""United Kingdom""",Quel est le point maximum pour les grimpeurs dont le pays est le Royaume-Uni ?
"SELECT max(Points) FROM climber WHERE Country = ""United Kingdom""",Renvoyez le nombre maximum de points pour les grimpeurs du Royaume-Uni.
SELECT COUNT(DISTINCT Country) FROM climber,De combien de pays distincts viennent les grimpeurs ?
SELECT COUNT(DISTINCT Country) FROM climber,Comptez le nombre de pays différents d'où viennent les grimpeurs.
SELECT Name FROM mountain ORDER BY Name ASC,Comment appelle-t-on les montagnes par ordre alphabétique croissant ?
SELECT Name FROM mountain ORDER BY Name ASC,Donnez les noms des montagnes par ordre alphabétique.
SELECT Country FROM mountain WHERE Height > 5000,Quels sont les pays des montagnes avec une hauteur supérieure à 5000 ?
SELECT Country FROM mountain WHERE Height > 5000,Renvoie les pays des montagnes qui ont une hauteur supérieure à 5000.
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1,Quel est le nom de la plus haute montagne ?
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1,Renvoie le nom de la montagne avec la plus grande hauteur.
SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3,Énumérez les chaînes de montagnes distinctes avec les 3 premières proéminence.
SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3,Quels sont les différents massifs des 3 montagnes les plus en vue ?
"SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Afficher les noms des grimpeurs et les noms des montagnes qu'ils gravissent.
"SELECT T1.Name , T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Quels sont les noms des grimpeurs et les noms correspondants des montagnes qu'ils gravissent ?
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Montrez les noms des grimpeurs et les hauteurs des montagnes qu'ils gravissent.
"SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",Quels sont les noms des grimpeurs et les hauteurs correspondantes des montagnes qu'ils gravissent ?
SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1,Indiquez la hauteur de la montagne escaladée par l'alpiniste avec le maximum de points.
SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1,Quelle est la hauteur de la montagne escaladée par l'alpiniste qui a le plus de points ?
"SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = ""West Germany""","Montrez les noms distincts des montagnes escaladées par les grimpeurs du pays ""Allemagne de l'Ouest""."
"SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = ""West Germany""",Quels sont les différents noms des montagnes escaladées par les grimpeurs du pays de l'Allemagne de l'Ouest ?
"SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = ""Uganda""",Afficher les temps mis par les grimpeurs pour gravir des montagnes dans le pays Ouganda.
"SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = ""Uganda""",Quels sont les temps utilisés par les grimpeurs qui ont escaladé des montagnes dans le pays de l'Ouganda ?
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Veuillez indiquer les pays et le nombre de grimpeurs de chaque pays.
"SELECT Country , COUNT(*) FROM climber GROUP BY Country",Combien y a-t-il d'alpinistes dans chaque pays ?
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1,Énumérez les pays qui ont plus d'une montagne.
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1,Quels pays ont plus d'une montagne ?
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber),Énumérez les noms des montagnes qui n'ont pas d'alpiniste.
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber),Comment s'appellent les sommets qu'aucun grimpeur n'a escaladés ?
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200,Montrez les pays qui ont des montagnes avec une hauteur supérieure à 5600 étages et des montagnes avec une hauteur inférieure à 5200.
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200,Quels sont les pays qui ont à la fois des montagnes supérieures à 5600 et inférieures à 5200 ?
SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1,Montrez la gamme qui a le plus grand nombre de montagnes.
SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1,Quelle chaîne contient le plus de montagnes ?
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000,Afficher les noms des montagnes avec une hauteur supérieure à 5000 ou une proéminence supérieure à 1000.
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000,Quels sont les noms des montagnes qui ont une hauteur de plus de 5000 ou une proéminence de plus de 1000 ?
SELECT count(*) FROM body_builder,Combien y a-t-il de carrossiers ?
SELECT Total FROM body_builder ORDER BY Total ASC,Dressez la liste des scores totaux des carrossiers par ordre croissant.
"SELECT Snatch , Clean_Jerk FROM body_builder ORDER BY Snatch ASC",Énumérez le score de snatch et le score de clean jerk des culturistes dans l'ordre croissant du score de snatch.
SELECT avg(Snatch) FROM body_builder,Quel est le score moyen des culturistes ?
SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1,Quel est le score d'épaulé-jeté du carrossier avec le score total le plus élevé ?
SELECT Birth_Date FROM People ORDER BY Height ASC,Quels sont les anniversaires des personnes par ordre croissant de taille ?
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID,Comment s'appellent les carrossiers ?
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total > 300,Quels sont les noms des carrossiers dont le score total est supérieur à 300 ?
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1,Quel est le nom du culturiste avec le plus grand poids corporel ?
"SELECT T2.Birth_Date , T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1",Quels sont la date de naissance et le lieu de naissance du carrossier avec le total de points le plus élevé ?
SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total < 315,Quelles sont les hauteurs des carrossiers avec un score total inférieur à 315 ?
SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200,Quel est le score total moyen des carrossiers dont la taille est supérieure à 200 ?
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC,Quels sont les noms des culturistes par ordre décroissant des scores totaux ?
"SELECT Birth_Place , COUNT(*) FROM people GROUP BY Birth_Place",Dressez la liste de chaque lieu de naissance avec le nombre de personnes à partir de là.
SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1,Quel est le lieu de naissance le plus courant des gens ?
SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*) >= 2,Quels sont les lieux de naissance partagés par au moins deux personnes ?
"SELECT Height , Weight FROM people ORDER BY Height DESC",Énumérez la taille et le poids des personnes par ordre décroissant de taille.
SELECT * FROM body_builder,Afficher toutes les informations sur chaque carrossier.
"SELECT Name , birth_place FROM people EXCEPT SELECT T1.Name , T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id = T2.people_id",Dressez la liste des noms et des origines des personnes qui ne sont pas des culturistes.
SELECT count(DISTINCT Birth_Place) FROM people,Combien y a-t-il de lieux de naissance distincts ?
SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder),Combien de personnes ne sont pas carrossiers ?
SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T1.snatch > 140 OR T2.height > 200;,Indiquez le poids des culturistes qui ont un score d'arraché supérieur à 140 ou une taille supérieure à 200.
"SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T2.Birth_Date LIKE ""%January%"";","Quels sont les scores totaux des carrossiers dont l'anniversaire contient la chaîne ""janvier"" ?"
SELECT min(snatch) FROM body_builder,Quel est le score minimum de snatch ?
SELECT count(*) FROM election,Combien y a-t-il d'élections ?
SELECT Votes FROM election ORDER BY Votes DESC,Énumérez les votes des élections par ordre décroissant.
"SELECT Date , Vote_Percent FROM election",Énumérez les dates et les pourcentages de vote des élections.
"SELECT min(Vote_Percent) , max(Vote_Percent) FROM election",Quels sont les pourcentages de vote minimum et maximum des élections ?
"SELECT Name , Party FROM representative",Quels sont les noms et partis des représentants ?
"SELECT Name FROM Representative WHERE Party != ""Republican""","Comment s'appellent les élus dont le parti n'est pas ""républicain"" ?"
"SELECT Lifespan FROM representative WHERE State = ""New York"" OR State = ""Indiana""",Quelle est la durée de vie des représentants de l'État de New York ou de l'État de l'Indiana ?
"SELECT T2.Name , T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID",Quels sont les noms des représentants et les dates des élections auxquelles ils ont participé.
SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE Votes > 10000,Quels sont les noms des représentants ayant plus de 10 000 voix lors d'une élection ?
SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC,Quels sont les noms des représentants dans l'ordre décroissant des votes ?
SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes ASC LIMIT 1,Quel est le parti du représentant qui a le plus petit nombre de votes.
SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY Vote_Percent DESC,Quelle est la durée de vie des représentants par ordre décroissant de pourcentage de vote ?
"SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Party = ""Republican""","Quel est le nombre moyen de voix des représentants du parti ""Républicain"" ?"
"SELECT Party , COUNT(*) FROM representative GROUP BY Party",Quels sont les différents partis de représentation ? Indiquez le nom du parti et le nombre de représentants dans chaque parti.
"SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1",Quel est le parti qui a le plus grand nombre de représentants ?
SELECT Party FROM representative GROUP BY Party HAVING COUNT(*) >= 3,Quels partis ont au moins trois représentants ?
SELECT State FROM representative GROUP BY State HAVING COUNT(*) >= 2,Quels états ont au moins deux représentants ?
SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election),Énumérez les noms des représentants qui n'ont pas participé aux élections énumérées ici.
"SELECT Party FROM representative WHERE State = ""New York"" INTERSECT SELECT Party FROM representative WHERE State = ""Pennsylvania""",Montrez les partis qui ont à la fois des représentants dans l'État de New York et des représentants dans l'État de Pennsylvanie.
SELECT count(DISTINCT Party) FROM representative,Combien y a-t-il de partis distincts pour les représentants ?
SELECT count(*) FROM Apartment_Bookings,Combien y a-t-il de réservations d'appartements au total ?
SELECT count(*) FROM Apartment_Bookings,Comptez le nombre total de réservations d'appartements.
"SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",Afficher les dates de début et les dates de fin de toutes les réservations d'appartements.
"SELECT booking_start_date , booking_end_date FROM Apartment_Bookings",Quelles sont la date de début et la date de fin de chaque réservation d'appartement ?
SELECT DISTINCT building_description FROM Apartment_Buildings,Afficher toutes les descriptions de bâtiments distinctes.
SELECT DISTINCT building_description FROM Apartment_Buildings,Donnez-moi une liste de toutes les descriptions de bâtiments distinctes.
"SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = ""Emma""","Afficher les noms courts des bâtiments gérés par ""Emma""."
"SELECT building_short_name FROM Apartment_Buildings WHERE building_manager = ""Emma""","Quels bâtiments ""Emma"" gère-t-elle ? Donnez-moi les noms courts des bâtiments."
"SELECT building_address , building_phone FROM Apartment_Buildings WHERE building_manager = ""Brenden""","Afficher les adresses et téléphones de tous les immeubles gérés par ""Brenden""."
"SELECT building_address , building_phone FROM Apartment_Buildings WHERE building_manager = ""Brenden""",Quels sont l'adresse et le numéro de téléphone des immeubles gérés par « Brenden » ?
"SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE ""%court%""","Quels sont les noms complets des bâtiments qui contiennent le mot ""court"" ?"
"SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE ""%court%""","Retrouvez tous les noms et prénoms d'immeubles contenant le mot ""court""."
"SELECT min(bathroom_count) , max(bathroom_count) FROM Apartments",Quel est le nombre minimum et maximum de salles de bains de tous les appartements ?
"SELECT min(bathroom_count) , max(bathroom_count) FROM Apartments",Donnez-moi le nombre minimum et maximum de salles de bains parmi tous les appartements.
SELECT avg(bedroom_count) FROM Apartments,Quel est le nombre moyen de chambres de tous les appartements ?
SELECT avg(bedroom_count) FROM Apartments,Trouvez le nombre moyen de chambres de tous les appartements.
"SELECT apt_number , room_count FROM Apartments",Renvoyez le numéro d'appartement et le nombre de pièces pour chaque appartement.
"SELECT apt_number , room_count FROM Apartments",Quel est le numéro d'appartement et le nombre de chambres de chaque appartement ?
"SELECT avg(room_count) FROM Apartments WHERE apt_type_code = ""Studio""","Quel est le nombre moyen de pièces des appartements avec le code de type ""Studio"" ?"
"SELECT avg(room_count) FROM Apartments WHERE apt_type_code = ""Studio""","Trouvez le nombre moyen de chambres des appartements qui ont le code de type ""Studio""."
"SELECT apt_number FROM Apartments WHERE apt_type_code = ""Flat""","Renvoyez les numéros d'appartement des appartements avec le code de type ""Appartement""."
"SELECT apt_number FROM Apartments WHERE apt_type_code = ""Flat""","Quels appartements ont le code de type ""Flat"" ? Donnez-moi leurs numéros d'appartement."
"SELECT guest_first_name , guest_last_name FROM Guests",Renvoyer les prénoms et noms de tous les invités
"SELECT guest_first_name , guest_last_name FROM Guests",Quels sont les prénoms et noms de famille de tous les invités ?
"SELECT date_of_birth FROM Guests WHERE gender_code = ""Male""","Renvoyez la date de naissance de tous les invités avec le code de sexe ""Homme""."
"SELECT date_of_birth FROM Guests WHERE gender_code = ""Male""","Quelles sont les dates de naissance de tous les invités dont le sexe est ""Homme"" ?"
"SELECT T2.apt_number , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id","Affichez les numéros d'appartement, les dates de début et les dates de fin de toutes les réservations d'appartement."
"SELECT T2.apt_number , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id","Quels sont le numéro d'appartement, la date de début et la date de fin de chaque réservation d'appartement ?"
"SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = ""Duplex""","Quelles sont les dates de début et de fin de réservation des appartements avec le code de type ""Duplex"" ?"
"SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = ""Duplex""","Renvoyez la date de début et la date de fin de réservation pour les appartements qui ont le code de type ""Duplex""."
"SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2",Quelles sont les dates de début et de fin de réservation des appartements de plus de 2 chambres ?
"SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2",Trouvez la date de début et la date de fin de réservation pour les appartements de plus de deux chambres.
"SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = ""Suite 634""","Quel est le code de statut de réservation de l'appartement avec le numéro d'appartement ""Suite 634"" ?"
"SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = ""Suite 634""","Dites-moi le code de statut de réservation pour l'appartement avec le numéro ""Suite 634""."
"SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Confirmed""","Afficher les numéros d'appartement distincts des appartements qui ont des réservations avec le code de statut ""Confirmé""."
"SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Confirmed""","Quels appartements ont des réservations avec le code de statut ""Confirmé"" ? Renvoyez leurs numéros d'appartement."
"SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Provisional""","Afficher le nombre moyen de chambres des appartements qui ont le code de statut de réservation ""Provisoire""."
"SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Provisional""","Quel est le nombre moyen de chambres des appartements dont le code de statut de réservation est ""Provisoire"" ?"
"SELECT T2.guest_first_name , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id","Affichez les prénoms des clients, les dates de début et les dates de fin de toutes les réservations d'appartements."
"SELECT T2.guest_first_name , T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id","Quels sont le prénom du client, la date de début et la date de fin de chaque réservation d'appartement ?"
"SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""","Afficher les dates de début et de fin de toutes les réservations d'appartements effectuées par les clients avec le code de genre ""Femme""."
"SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = ""Female""","Quelles sont la date de début et la date de fin des réservations d'appartements effectuées par les femmes (code de sexe ""Femme"") ?"
"SELECT T2.guest_first_name , T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = ""Confirmed""","Afficher les prénoms et noms de tous les clients qui ont des réservations d'appartement avec le code de statut ""Confirmé""."
"SELECT T2.guest_first_name , T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = ""Confirmed""","Quels clients ont des réservations d'appartement avec le code de statut ""Confirmé"" ? Renvoyez leurs prénoms et noms de famille."
SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4,Afficher les codes des installations des appartements de plus de 4 chambres.
SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4,Quels sont les codes d'installation des appartements de plus de quatre chambres ?
"SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = ""Gym""","Indiquez le nombre total de chambres de tous les appartements avec le code d'établissement ""Gym""."
"SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = ""Gym""","Trouvez le nombre total de chambres dans les appartements qui ont le code d'installation ""Gym""."
"SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = ""Columbus Square""","Afficher le nombre total de pièces des appartements dans le bâtiment avec le nom abrégé ""Columbus Square""."
"SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = ""Columbus Square""","Combien de chambres au total y a-t-il dans les appartements du bâtiment portant le nom abrégé ""Columbus Square"" ?"
SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2,Afficher les adresses des immeubles qui ont des appartements avec plus de 2 salles de bain.
SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2,Quels immeubles ont des appartements qui ont plus de deux salles de bain ? Donnez-moi les adresses des immeubles.
"SELECT T2.apt_type_code , T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = ""Kyle""","Afficher les codes de type d'appartement et les numéros d'appartement dans les immeubles gérés par ""Kyle""."
"SELECT T2.apt_type_code , T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = ""Kyle""","Quels sont les codes de type d'appartement et les numéros d'appartement des immeubles gérés par ""Kyle"" ?"
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",Afficher le code de statut de réservation et le nombre de réservations correspondant.
"SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",Combien de réservations chaque statut de réservation a-t-il ? Indiquez le code de statut de la réservation et le nombre de réservations correspondantes.
SELECT apt_number FROM Apartments ORDER BY room_count ASC,Renvoie tous les numéros d'appartements triés par nombre de pièces dans l'ordre croissant.
SELECT apt_number FROM Apartments ORDER BY room_count ASC,Triez les numéros d'appartements dans l'ordre croissant du nombre de pièces.
SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1,Renvoie le numéro de l'appartement avec le plus grand nombre de chambres.
SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1,Quel est le numéro d'appartement de l'appartement avec le plus de lits ?
"SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC",Afficher les codes de type d'appartement et le nombre d'appartements correspondant triés par nombre d'appartements dans l'ordre croissant.
"SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC","Renvoie chaque code de type d'appartement avec le nombre d'appartements ayant ce type d'appartement, dans l'ordre croissant du nombre d'appartements."
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3,Afficher les 3 principaux codes de type d'appartement triés par le nombre moyen de pièces par ordre décroissant.
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3,Quels sont les trois principaux types d'appartements en termes de nombre moyen de chambres ? Donne moi le
"SELECT apt_type_code , bathroom_count , bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1","Indiquez le code du type d'appartement qui compte le plus grand nombre de pièces au total, ainsi que le nombre de salles de bains et le nombre de chambres."
"SELECT apt_type_code , bathroom_count , bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1","Quel type d'appartement compte le plus grand nombre de chambres au total ? Renvoyez le code du type d'appartement, son nombre de salles de bain et son nombre de chambres."
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1,Afficher le code de type d'appartement le plus courant.
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1,Quel code de type d'appartement apparaît le plus souvent ?
SELECT apt_type_code FROM Apartments WHERE bathroom_count > 1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1,Afficher le code de type d'appartement le plus courant parmi les appartements avec plus d'une salle de bain.
SELECT apt_type_code FROM Apartments WHERE bathroom_count > 1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1,Quel code de type d'appartement est le plus courant parmi les appartements avec plus d'une salle de bain ?
"SELECT apt_type_code , max(room_count) , min(room_count) FROM Apartments GROUP BY apt_type_code",Indiquez chaque code de type d'appartement et le nombre maximum et minimum de chambres pour chaque type.
"SELECT apt_type_code , max(room_count) , min(room_count) FROM Apartments GROUP BY apt_type_code",Renvoyez chaque code de type d'appartement ainsi que le nombre maximum et minimum de pièces pour chaque type.
"SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",Affichez chaque code de genre et le nombre correspondant d'invités triés par nombre dans l'ordre décroissant.
"SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",Triez les codes de sexe par ordre décroissant du nombre d'invités correspondant. Renvoie à la fois les codes de sexe et les nombres.
SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities),Combien d'appartements ne disposent d'aucune installation ?
SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities),Trouver le nombre d'appartements sans installations.
"SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Confirmed"" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Provisional""","Afficher les numéros d'appartement des appartements avec des réservations qui ont le code de statut à la fois ""Provisoire"" et ""Confirmé"""
"SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Confirmed"" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = ""Provisional""","Quels appartements ont des réservations avec les codes de statut ""Provisoire"" et ""Confirmé"" ? Donnez-moi les numéros d'appartement."
SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1,Afficher les numéros d'appartement des appartements avec une disponibilité de statut d'unité de 0 et 1.
SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1,Quels appartements ont une disponibilité de statut d'unité de 0 et 1 ? Renvoyez leurs numéros d'appartement.
SELECT count(*) FROM game WHERE season > 2007,Combien de matchs ont lieu après la saison 2007 ?
SELECT Date FROM game ORDER BY home_team DESC,Dressez la liste des dates des jeux par le nom de l'équipe à domicile dans l'ordre décroissant.
"SELECT season , home_team , away_team FROM game","Listez la saison, l'équipe à domicile, l'équipe à l'extérieur de tous les matchs."
"SELECT max(home_games) , min(home_games) , avg(home_games) FROM stadium","Quels sont les matchs à domicile maximum, minimum et moyens organisés par chaque stade ?"
SELECT average_attendance FROM stadium WHERE capacity_percentage > 100,Quelle est la fréquentation moyenne des stades dont le pourcentage de capacité est supérieur à 100 % ?
"SELECT player , number_of_matches , SOURCE FROM injury_accident WHERE injury != 'Knee problem'","Quels sont le nom du joueur, le nombre de matchs et la source d'information pour les joueurs qui ne souffrent pas d'une blessure ou d'un ""problème de genou"" ?"
SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T2.player = 'Walter Samuel',Quelle est la saison du jeu qui a causé la blessure du joueur 'Walter Samuel' ?
"SELECT T1.id , T1.score , T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id = T1.id GROUP BY T1.id HAVING count(*) >= 2","Quels sont les identifiants, les scores et les dates des matchs qui ont causé au moins deux accidents corporels ?"
"SELECT T1.id , T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Quels sont l'identifiant et le nom du stade où le plus d'accidents corporels se sont produits ?
"SELECT T1.id , T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Trouvez l'identifiant et le nom du stade où le plus grand nombre d'accidents corporels s'est produit.
"SELECT T1.season , T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'","Au cours de quelle saison et dans quel stade un joueur a-t-il subi une blessure de type ""Blessure au pied"" ou ""Problème au genou"" ?"
SELECT count(DISTINCT SOURCE) FROM injury_accident,Combien de types différents de sources d'information existe-t-il pour les accidents corporels ?
SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident ),Combien de jeux sont exempts d'accidents corporels ?
SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id = T2.id WHERE T2.season > 2010,Combien de types de blessures distincts se sont produits après la saison 2010 ?
SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Thiago Motta',Indiquez le nom du stade où le joueur 'Walter Samuel' et le joueur 'Thiago Motta' se sont blessés.
"SELECT name , average_attendance , total_attendance FROM stadium EXCEPT SELECT T2.name , T2.average_attendance , T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id","Afficher le nom, la fréquentation moyenne, la fréquentation totale des stades où aucun accident ne s'est produit."
"SELECT name FROM stadium WHERE name LIKE ""%Bank%""","Quel nom de stade contient la sous-chaîne ""Bank"" ?"
"SELECT T1.id , count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id",Combien de matchs chaque stade a-t-il organisé ?
"SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id ORDER BY T1.season DESC","Pour chaque accident corporel, trouvez la date du match et le nom du joueur blessé dans le match, et triez les résultats par ordre décroissant de la saison de match."
"SELECT T1.name , T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id",Énumérez tous les noms de pays et de ligues.
"SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = ""England""",Combien y a-t-il de ligues en Angleterre ?
SELECT avg(weight) FROM Player,Quel est le poids moyen de tous les joueurs ?
"SELECT max(weight) , min(weight) FROM Player",Quelle est la taille maximale et minimale de tous les joueurs ?
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > ( SELECT avg(overall_rating) FROM Player_Attributes ),Listez tous les noms de joueurs qui ont une note globale supérieure à la moyenne.
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling = ( SELECT max(overall_rating) FROM Player_Attributes),Quels sont les noms des joueurs qui ont le meilleur dribble ?
"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing > 90 AND T2.preferred_foot = ""right""",Énumérez les noms de tous les joueurs qui ont un score de croisement supérieur à 90 et qui préfèrent leur pied droit.
"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = ""left"" AND T2.overall_rating >= 85 AND T2.overall_rating <= 90",Énumérez les noms de tous les joueurs du pied gauche qui ont une note globale entre 85 et 90.
"SELECT preferred_foot , avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot",Quelle est la note moyenne des joueurs droitiers et des joueurs gauchers ?
"SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot","De tous les joueurs avec une note globale supérieure à 80, combien sont droitiers et gauchers ?"
SELECT player_api_id FROM Player WHERE height >= 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85,Listez tous les identifiants de joueurs avec une hauteur d'au moins 180 cm et une note globale supérieure à 85.
"SELECT player_api_id FROM Player WHERE height >= 180 AND height <= 190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = ""left""",Répertoriez tous les identifiants pour les joueurs gauchers d'une taille comprise entre 180 cm et 190 cm.
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY overall_rating DESC LIMIT 3,Qui sont les 3 meilleurs joueurs en termes de note globale ?
"SELECT DISTINCT T1.player_name , T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY potential DESC LIMIT 5",Énumérez les noms et les anniversaires des cinq meilleurs joueurs en termes de potentiel.
SELECT count(*) FROM performance,Combien y a-t-il de représentations ?
SELECT HOST FROM performance ORDER BY Attendance ASC,Dressez la liste des hôtes des spectacles par ordre croissant de fréquentation.
"SELECT Date , LOCATION FROM performance",Quels sont les dates et lieux des représentations ?
"SELECT Attendance FROM performance WHERE LOCATION = ""TD Garden"" OR LOCATION = ""Bell Centre""","Afficher les présences des représentations au lieu ""TD Garden"" ou ""Bell Centre"""
SELECT avg(Attendance) FROM performance,Quel est le nombre moyen de spectateurs pour les représentations ?
SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1,Quelle est la date de la représentation avec le plus grand nombre de spectateurs ?
"SELECT LOCATION , COUNT(*) FROM performance GROUP BY LOCATION",Montrez différents endroits et le nombre de représentations à chaque endroit.
SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1,Afficher le lieu de représentation le plus courant.
SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*) >= 2,Montrez les lieux qui ont au moins deux représentations.
SELECT LOCATION FROM performance WHERE Attendance > 2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance < 1000,Affichez les lieux qui ont à la fois des spectacles avec plus de 2 000 participants et des spectacles avec moins de 1 000 participants.
"SELECT T2.Name , T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID",Indiquez les noms des membres et le lieu des représentations auxquelles ils ont assisté.
"SELECT T2.Name , T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T2.Name ASC",Indiquez les noms des membres et le lieu des spectacles auxquels ils ont assisté dans l'ordre alphabétique croissant de leurs noms.
"SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = ""Violin""","Afficher les dates des représentations avec les membres présents dont les rôles sont ""Violon""."
"SELECT T2.Name , T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T3.Attendance DESC",Indiquez les noms des membres et les dates des représentations auxquelles ils ont assisté par ordre décroissant de fréquentation des représentations.
SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance),Énumérez les noms des membres qui n'ont assisté à aucune représentation.
SELECT DISTINCT building FROM classroom WHERE capacity > 50,Trouvez les bâtiments qui ont des chambres d'une capacité supérieure à 50.
SELECT DISTINCT building FROM classroom WHERE capacity > 50,Quels sont les bâtiments distincts avec des capacités supérieures à 50 ?
SELECT count(*) FROM classroom WHERE building != 'Lamberton',Comptez le nombre de chambres qui ne sont pas dans le bâtiment Lamberton.
SELECT count(*) FROM classroom WHERE building != 'Lamberton',Combien de salles de classe ne sont pas à Lamberton ?
"SELECT dept_name , building FROM department WHERE budget > (SELECT avg(budget) FROM department)",Quel est le nom et le bâtiment des départements dont le budget est supérieur au budget moyen ?
"SELECT dept_name , building FROM department WHERE budget > (SELECT avg(budget) FROM department)",Donnez le nom et le bâtiment des départements avec un budget supérieur à la moyenne.
"SELECT building , room_number FROM classroom WHERE capacity BETWEEN 50 AND 100",Trouver le numéro de chambre des salles pouvant accueillir 50 à 100 étudiants et leurs locaux.
"SELECT building , room_number FROM classroom WHERE capacity BETWEEN 50 AND 100",Quels sont les numéros de salle et les bâtiments correspondants pour les salles de classe pouvant accueillir entre 50 et 100 élèves ?
"SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",Trouvez le nom et le bâtiment du département avec le budget le plus élevé.
"SELECT dept_name , building FROM department ORDER BY budget DESC LIMIT 1",Quel est le nom du département et le bâtiment correspondant pour le département avec le plus gros budget ?
SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1,Quel est le nom de l'étudiant qui a le total de crédits le plus élevé dans le département d'histoire.
SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1,Donnez le nom de l'étudiant du département d'histoire avec le plus de crédits.
SELECT count(*) FROM classroom WHERE building = 'Lamberton',Combien de chambres compte le bâtiment Lamberton ?
SELECT count(*) FROM classroom WHERE building = 'Lamberton',Comptez le nombre de salles de classe à Lamberton.
SELECT count(DISTINCT s_id) FROM advisor,Combien d'étudiants ont des conseillers?
SELECT count(DISTINCT s_id) FROM advisor,Comptez le nombre d'étudiants qui ont des conseillers.
SELECT count(DISTINCT dept_name) FROM course,Combien de départements proposent des cours ?
SELECT count(DISTINCT dept_name) FROM course,Comptez le nombre de départements qui offrent des cours.
SELECT count(DISTINCT course_id) FROM course WHERE dept_name = 'Physics',Combien de cours différents proposés par le département de Physique ?
SELECT count(DISTINCT course_id) FROM course WHERE dept_name = 'Physics',Comptez le nombre de cours dans le département de physique.
SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count(*) = 2,Trouver le titre des cours qui ont deux prérequis ?
SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count(*) = 2,Quels sont les titres des cours à deux prérequis ?
"SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count(*) > 1","Trouver le titre, le crédit et le nom du département des cours qui ont plus d'un prérequis ?"
"SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count(*) > 1","Quels sont le titre, la valeur des crédits et le nom du département pour les cours avec plus d'un prérequis ?"
SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),Combien de cours qui n'ont pas de prérequis ?
SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),Comptez le nombre de cours sans prérequis.
SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),Trouver le nom des cours qui n'ont pas de prérequis ?
SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),Quels sont les titres des cours sans prérequis ?
SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),Trouver le nom des cours qui n'ont pas de prérequis ?
SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),Comment s'appellent les cours sans prérequis ?
SELECT COUNT (DISTINCT id) FROM teaches,Combien d'instructeurs différents ont enseigné un cours?
SELECT COUNT (DISTINCT id) FROM teaches,Comptez le nombre d'instructeurs distincts qui ont enseigné un cours.
SELECT sum(budget) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance',Trouver les budgets totaux du département Marketing ou Finance.
SELECT sum(budget) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance',Quelle est la somme des budgets des départements Marketing et Finance ?
SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%',Trouver le nom du département de l'instructeur dont le nom contient 'Soisalon'.
SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%',Comment s'appelle le département avec une structure qui s'appelle 'Soisalon' ?
SELECT count(*) FROM classroom WHERE building = 'Lamberton' AND capacity < 50,Combien de chambres dont la capacité est inférieure à 50 le bâtiment Lamberton compte-t-il ?
SELECT count(*) FROM classroom WHERE building = 'Lamberton' AND capacity < 50,Comptez le nombre de chambres à Lamberton avec une capacité inférieure à 50.
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)",Trouvez le nom et le budget des départements dont les budgets sont supérieurs au budget moyen.
"SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department)",Quels sont les noms et les budgets des services dont les budgets sont supérieurs à la moyenne ?
SELECT name FROM instructor WHERE dept_name = 'Statistics' ORDER BY salary LIMIT 1,quel est le nom de l'instructeur qui est au département des statistiques et qui gagne le salaire le plus bas ?
SELECT name FROM instructor WHERE dept_name = 'Statistics' ORDER BY salary LIMIT 1,Donnez le nom de l'instructeur qui gagne le moins dans le département des statistiques.
SELECT title FROM course WHERE dept_name = 'Statistics' INTERSECT SELECT title FROM course WHERE dept_name = 'Psychology',Trouvez le titre du cours fourni par les départements de statistique et de psychologie.
SELECT title FROM course WHERE dept_name = 'Statistics' INTERSECT SELECT title FROM course WHERE dept_name = 'Psychology',Quel est le titre d'un cours répertorié à la fois dans les départements de statistique et de psychologie ?
SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology',Trouvez le titre du cours qui est fourni par les départements de statistique mais pas de psychologie.
SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology',Quels sont les titres des cours qui se trouvent dans le département Statistiques mais pas dans le département Psychologie ?
SELECT id FROM teaches WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT id FROM teaches WHERE semester = 'Spring' AND YEAR = 2010,Trouvez l'identifiant des instructeurs qui ont enseigné un cours à l'automne 2009 mais pas au printemps 2010.
SELECT id FROM teaches WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT id FROM teaches WHERE semester = 'Spring' AND YEAR = 2010,Quels sont les identifiants des instructeurs qui ont enseigné à l'automne 2009 mais pas au printemps 2010 ?
SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE YEAR = 2009 OR YEAR = 2010,Trouvez le nom des étudiants qui ont suivi n'importe quel cours dans les années 2009 et 2010.
SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE YEAR = 2009 OR YEAR = 2010,Comment s'appellent les élèves qui ont suivi les cours en 2009 ou 2010 ?
SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3,Trouver les noms des 3 meilleurs départements qui offrent le plus grand nombre de cours ?
SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3,Quels sont les noms des 3 départements avec le plus de cours ?
SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1,Trouver le nom du département qui offre le total de crédits le plus élevé ?
SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1,Quel est le nom du département avec le plus de crédits ?
"SELECT title FROM course ORDER BY title , credits",Énumérez les noms de tous les cours classés par leurs titres et leurs crédits.
"SELECT title FROM course ORDER BY title , credits","Étant donné les titres de tous les cours, dans l'ordre des titres et des crédits."
SELECT dept_name FROM department ORDER BY budget LIMIT 1,Quel département a le budget le plus bas ?
SELECT dept_name FROM department ORDER BY budget LIMIT 1,Donnez le nom du département avec le budget le plus bas.
"SELECT dept_name , building FROM department ORDER BY budget DESC","Dressez la liste des noms et des bâtiments de tous les départements triés par budget, du plus grand au plus petit."
"SELECT dept_name , building FROM department ORDER BY budget DESC","Quels sont les noms et bâtiments des départements, classés par budget décroissant ?"
SELECT name FROM instructor ORDER BY salary DESC LIMIT 1,Quel est le moniteur avec le salaire le plus élevé ?
SELECT name FROM instructor ORDER BY salary DESC LIMIT 1,Donnez le nom de l'instructeur le mieux payé.
SELECT * FROM instructor ORDER BY salary,Dressez la liste des informations de tous les instructeurs classés par leur salaire en ordre croissant.
SELECT * FROM instructor ORDER BY salary,"Donnez toutes les informations concernant les instructeurs, par ordre de salaire du moins au plus élevé."
"SELECT name , dept_name FROM student ORDER BY tot_cred",Trouvez le nom des étudiants et leurs noms de département triés par leur total de crédits par ordre croissant.
"SELECT name , dept_name FROM student ORDER BY tot_cred","Quels sont les noms des étudiants et de leurs départements respectifs, classés par nombre de crédits du moins au plus grand ?"
"SELECT T1.title , T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 ORDER BY T1.title",listez par ordre alphabétique tous les noms de cours et les noms de leurs instructeurs pour l'année 2008.
"SELECT T1.title , T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 ORDER BY T1.title","Afficher tous les titres et les noms de leurs instructeurs pour les cours en 2008, en ordre alphabétique par titre."
SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count(*) > 1,Trouvez le nom des instructeurs qui conseillent plus d'un étudiant.
SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count(*) > 1,Quels sont les noms des instructeurs qui conseillent plus d'un étudiant ?
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count(*) > 1,Trouver le nom des étudiants qui ont plus d'un conseiller ?
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count(*) > 1,Quels sont les noms des étudiants qui ont plus d'un conseiller ?
"SELECT count(*) , building FROM classroom WHERE capacity > 50 GROUP BY building",Trouvez le nombre de chambres avec une capacité supérieure à 50 pour chaque bâtiment.
"SELECT count(*) , building FROM classroom WHERE capacity > 50 GROUP BY building",Combien de chambres dans chaque bâtiment ont une capacité de plus de 50 ?
"SELECT max(capacity) , avg(capacity) , building FROM classroom GROUP BY building",Trouvez la capacité maximale et moyenne des chambres de chaque bâtiment.
"SELECT max(capacity) , avg(capacity) , building FROM classroom GROUP BY building",Quelle est la capacité maximale et moyenne de chambres dans chaque bâtiment ?
SELECT title FROM course GROUP BY title HAVING count(*) > 1,Trouvez le titre du cours qui est offert par plus d'un département.
SELECT title FROM course GROUP BY title HAVING count(*) > 1,Quels sont les titres des cours offerts dans plus d'un département?
"SELECT sum(credits) , dept_name FROM course GROUP BY dept_name",Trouvez le total des crédits des cours dispensés par les différents départements.
"SELECT sum(credits) , dept_name FROM course GROUP BY dept_name",Combien de crédits au total sont offerts par chaque département ?
"SELECT min(salary) , dept_name FROM instructor GROUP BY dept_name HAVING avg(salary) > (SELECT avg(salary) FROM instructor)",Trouvez le salaire minimum pour les départements dont le salaire moyen est supérieur au paiement moyen de tous les instructeurs.
"SELECT min(salary) , dept_name FROM instructor GROUP BY dept_name HAVING avg(salary) > (SELECT avg(salary) FROM instructor)",Quel est le salaire le plus bas dans les départements dont le salaire moyen est supérieur à la moyenne générale.
"SELECT count(*) , semester , YEAR FROM SECTION GROUP BY semester , YEAR",Trouvez le nombre de cours dispensés par semestre et par année.
"SELECT count(*) , semester , YEAR FROM SECTION GROUP BY semester , YEAR",Combien de cours sont dispensés par semestre et par année ?
SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,Trouvez l'année qui offre le plus grand nombre de cours.
SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,Quelle année a eu le plus grand nombre de cours?
"SELECT semester , YEAR FROM SECTION GROUP BY semester , YEAR ORDER BY count(*) DESC LIMIT 1",Trouvez l'année et le semestre où le plus grand nombre de cours est proposé.
"SELECT semester , YEAR FROM SECTION GROUP BY semester , YEAR ORDER BY count(*) DESC LIMIT 1",Quelle est l'année et le semestre avec le plus de cours ?
SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1,Trouver le nom du département qui compte le plus grand nombre d'étudiants ?
SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom du département avec le plus grand nombre d'inscriptions ?
"SELECT count(*) , dept_name FROM student GROUP BY dept_name",Trouver le nombre total d'étudiants dans chaque département.
"SELECT count(*) , dept_name FROM student GROUP BY dept_name",Combien y a-t-il d'étudiants dans chaque département ?
"SELECT semester , YEAR FROM takes GROUP BY semester , YEAR ORDER BY count(*) LIMIT 1",Trouvez le semestre et l'année qui ont le moins d'étudiants prenant n'importe quelle classe.
"SELECT semester , YEAR FROM takes GROUP BY semester , YEAR ORDER BY count(*) LIMIT 1",Quel semestre et quelle année ont eu le moins d'étudiants ?
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History',Quel est l'identifiant de l'instructeur qui conseille tous les étudiants du département d'histoire ?
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History',Donner l'identité de l'enseignant qui conseille les étudiants du département d'histoire.
"SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",Trouver le nom et le salaire des instructeurs qui conseillent n'importe quel étudiant du département d'histoire ?
"SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",Quels sont les noms et les salaires des instructeurs qui conseillent les étudiants du département d'histoire ?
"SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",Trouvez le nom et le salaire des instructeurs qui sont les conseillers des étudiants du département de mathématiques.
"SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",Quels sont les noms et les salaires des instructeurs qui conseillent les étudiants du département de mathématiques ?
SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq,Trouver l'identifiant des cours qui n'ont pas de prérequis ?
SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq,Quels sont les identifiants des cours sans prérequis ?
SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance'),Quel est le titre de la classe préalable du cours de finance internationale ?
SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance'),Donner le titre du prérequis au cours Finance Internationale.
SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance'),Quel est le titre du cours préalable du cours Mobile Computing ?
SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance'),Quel est le titre du cours qui est un prérequis pour l'informatique mobile ?
SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id = T2.course_id WHERE T2.title = 'Differential Geometry'),Trouvez le titre du cours dont le prérequis est le cours Géométrie différentielle.
SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id = T2.course_id WHERE T2.title = 'Differential Geometry'),Quel est le titre du cours avec la géométrie différentielle comme prérequis ?
SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester = 'Fall' AND YEAR = 2003),Trouvez les noms des étudiants qui ont suivi n'importe quel cours au semestre d'automne de l'année 2003.
SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester = 'Fall' AND YEAR = 2003),Comment s'appellent les étudiants qui ont suivi un cours à l'automne 2003?
SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE building = 'Chandler' AND semester = 'Fall' AND YEAR = 2010,Quel est le titre du cours qui a été offert au bâtiment Chandler pendant le semestre d'automne de l'année 2010 ?
SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE building = 'Chandler' AND semester = 'Fall' AND YEAR = 2010,Donnez le titre du cours offert à Chandler à l'automne 2010.
SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming',Trouvez le nom des instructeurs qui ont enseigné le cours de programmation C auparavant.
SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming',Quels sont les noms des instructeurs qui ont enseigné des cours de programmation C ?
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred,Trouvez le nom des instructeurs qui conseillent les étudiants du département de mathématiques et triez les résultats par crédit total des étudiants.
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred,Quels sont les noms de tous les instructeurs qui conseillent les étudiants dans le département de mathématiques triés par le nombre total de crédits de l'étudiant.
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id ORDER BY T3.tot_cred DESC LIMIT 1,Trouvez le nom de l'instructeur qui est le conseiller de l'étudiant qui a le plus grand nombre de crédits totaux.
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id ORDER BY T3.tot_cred DESC LIMIT 1,Quel est le nom de l'instructeur qui conseille l'étudiant avec le plus grand nombre total de crédits ?
SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches),Trouver le nom des instructeurs qui n'ont donné aucun cours ?
SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches),Quels sont les noms des instructeurs qui n'ont pas enseigné?
SELECT id FROM instructor EXCEPT SELECT id FROM teaches,Trouver l'identifiant des instructeurs qui n'ont enseigné aucun cours ?
SELECT id FROM instructor EXCEPT SELECT id FROM teaches,Quels sont les identifiants des instructeurs qui n'ont pas enseigné ?
SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester = 'Spring'),Trouvez les noms des instructeurs qui n'ont suivi aucun cours au cours d'un semestre de printemps.
SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester = 'Spring'),Comment s'appellent les instructeurs qui n'ont pas donné de cours au printemps ?
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1,Trouvez le nom du département qui a le salaire moyen le plus élevé des professeurs.
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1,Quel département a le salaire moyen d'instructeur le plus élevé ?
"SELECT avg(T1.salary) , count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name ORDER BY T2.budget DESC LIMIT 1",Trouvez le nombre et le salaire moyen de tous les instructeurs qui sont dans le département avec le budget le plus élevé.
"SELECT avg(T1.salary) , count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name ORDER BY T2.budget DESC LIMIT 1",Combien y a-t-il d'instructeurs dans le département avec le budget le plus élevé et quel est leur salaire moyen ?
"SELECT T3.title , T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building = T2.building AND T1.room_number = T2.room_number JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.capacity = (SELECT max(capacity) FROM classroom)",Quel est le titre et les crédits du cours enseigné dans la plus grande salle de classe (avec la plus grande capacité) ?
"SELECT T3.title , T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building = T2.building AND T1.room_number = T2.room_number JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.capacity = (SELECT max(capacity) FROM classroom)",Donnez le titre et les crédits du cours qui est enseigné dans la classe ayant la plus grande capacité.
SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'Biology'),Trouvez le nom des étudiants qui n'ont suivi aucun cours du département de biologie.
SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'Biology'),Comment s'appellent les étudiants qui n'ont suivi aucun cours de biologie ?
"SELECT count(DISTINCT T2.id) , count(DISTINCT T3.id) , T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name GROUP BY T3.dept_name",Trouver le nombre total d'étudiants et le nombre total d'instructeurs pour chaque département.
"SELECT count(DISTINCT T2.id) , count(DISTINCT T3.id) , T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name GROUP BY T3.dept_name",Combien y a-t-il d'étudiants et d'enseignants dans chaque département ?
SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id = T4.course_id WHERE T3.title = 'International Finance'),Trouver le nom des étudiants qui ont suivi le cours préalable du cours intitulé Finance internationale.
SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id = T4.course_id WHERE T3.title = 'International Finance'),Comment s'appellent les étudiants qui ont suivi le prérequis du cours Finance Internationale ?
"SELECT name , salary FROM instructor WHERE salary < (SELECT avg(salary) FROM instructor WHERE dept_name = 'Physics')",Trouvez le nom et le salaire des instructeurs dont le salaire est inférieur au salaire moyen des instructeurs du département de physique.
"SELECT name , salary FROM instructor WHERE salary < (SELECT avg(salary) FROM instructor WHERE dept_name = 'Physics')",Quels sont les noms et les salaires des instructeurs qui gagnent moins que le salaire moyen des instructeurs du département de physique ?
SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics',Trouvez le nom des étudiants qui ont suivi un cours offert par le département de statistique.
SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics',Comment s'appellent les étudiants qui ont suivi des cours de statistique ?
"SELECT T2.building , T2.room_number , T2.semester , T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' ORDER BY T1.title","Trouvez le bâtiment, le numéro de chambre, le semestre et l'année de tous les cours offerts par le département de psychologie triés par titres de cours."
"SELECT T2.building , T2.room_number , T2.semester , T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' ORDER BY T1.title","Quels sont le bâtiment, le numéro de chambre, le semestre et l'année des cours du département de psychologie, triés par titre de cours ?"
SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.',Trouver les noms de tous les instructeurs du département d'informatique
SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.',Quels sont les noms de tous les instructeurs de la Comp. Sci. département?
SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.' AND salary > 80000,Trouvez les noms de tous les instructeurs dans Comp. Sci. département avec salaire> 80000.
SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.' AND salary > 80000,Quels sont les noms des instructeurs de la Comp. Sci. département qui gagnent plus de 80000 ?
"SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID",Trouvez les noms de tous les instructeurs qui ont enseigné un cours et le course_id.
"SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID","Quels sont les noms de tous les instructeurs qui ont enseigné un cours, ainsi que l'identifiant du cours correspondant ?"
"SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T1.dept_name = 'Art'",Trouvez les noms de tous les instructeurs du département d'art qui ont enseigné un cours et le course_id.
"SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T1.dept_name = 'Art'",Quels sont les noms des professeurs d'art qui ont enseigné un cours et l'identifiant du cours correspondant ?
SELECT name FROM instructor WHERE name LIKE '%dar%',"Trouvez les noms de tous les instructeurs dont le nom inclut la sous-chaîne "" dar ""."
SELECT name FROM instructor WHERE name LIKE '%dar%',"Quels sont les noms de tous les instructeurs dont les noms incluent ""dar"" ?"
SELECT DISTINCT name FROM instructor ORDER BY name,Énumérez par ordre alphabétique les noms de tous les instructeurs distincts.
SELECT DISTINCT name FROM instructor ORDER BY name,"Dressez la liste des noms distincts des instructeurs, classés par nom."
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 UNION SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010,Trouvez les cours qui se sont déroulés à l'automne 2009 ou au printemps 2010.
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 UNION SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010,Quels sont les identifiants des cours à l'automne 2009 ou au printemps 2010 ?
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 INTERSECT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010,Trouvez les cours qui se sont déroulés à l'automne 2009 et au printemps 2010.
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 INTERSECT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010,Quels sont les identifiants des cours proposés à la fois à l'automne 2009 et au printemps 2010 ?
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010,Trouvez des cours qui se sont déroulés à l'automne 2009 mais pas au printemps 2010.
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010,Quels sont les identifiants des cours offerts à l'automne 2009 mais pas au printemps 2010 ?
SELECT DISTINCT salary FROM instructor WHERE salary < (SELECT max(salary) FROM instructor),Trouvez les salaires de tous les instructeurs distincts qui sont inférieurs au salaire le plus élevé.
SELECT DISTINCT salary FROM instructor WHERE salary < (SELECT max(salary) FROM instructor),Quels sont les salaires distincts de tous les instructeurs qui ont gagné moins que le salaire maximum ?
SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester = 'Spring' AND YEAR = 2010,Trouvez le nombre total d'instructeurs qui enseignent un cours au cours du semestre de printemps 2010.
SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester = 'Spring' AND YEAR = 2010,Combien d'instructeurs enseignent un cours au printemps 2010?
"SELECT dept_name , AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary) > 42000",Trouvez les noms et les salaires moyens de tous les départements dont le salaire moyen est supérieur à 42000.
"SELECT dept_name , AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary) > 42000",Quels sont les noms et les salaires moyens des départements dont le salaire moyen est supérieur à 42 000 ?
SELECT name FROM instructor WHERE salary > (SELECT min(salary) FROM instructor WHERE dept_name = 'Biology'),Trouvez des noms d'instructeurs dont le salaire est supérieur à celui de certains (au moins un) instructeur du département de biologie.
SELECT name FROM instructor WHERE salary > (SELECT min(salary) FROM instructor WHERE dept_name = 'Biology'),Quels sont les noms des instructeurs qui gagnent plus d'au moins un instructeur du département de biologie ?
SELECT name FROM instructor WHERE salary > (SELECT max(salary) FROM instructor WHERE dept_name = 'Biology'),Trouvez les noms de tous les instructeurs dont le salaire est supérieur au salaire de tous les instructeurs du département de biologie.
SELECT name FROM instructor WHERE salary > (SELECT max(salary) FROM instructor WHERE dept_name = 'Biology'),Quels sont les noms de tous les instructeurs ayant un salaire plus élevé que n'importe lequel des instructeurs du département de biologie ?
SELECT count(*) FROM debate,Combien y a-t-il de débats ?
SELECT Venue FROM debate ORDER BY Num_of_Audience ASC,Dressez la liste des lieux de débats par ordre croissant du nombre de spectateurs.
"SELECT Date , Venue FROM debate",Quels sont la date et le lieu de chaque débat ?
SELECT Date FROM debate WHERE Num_of_Audience > 150,Lister les dates des débats avec un nombre d'audience supérieur à 150
SELECT Name FROM people WHERE Age = 35 OR Age = 36,Affichez les noms des personnes âgées de 35 ou 36 ans.
SELECT Party FROM people ORDER BY Age ASC LIMIT 1,Quelle est la fête des plus jeunes ?
"SELECT Party , COUNT(*) FROM people GROUP BY Party",Montrez différents groupes de personnes ainsi que le nombre de personnes dans chaque groupe.
SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1,Montrez la fête qui compte le plus de monde.
SELECT DISTINCT Venue FROM debate,Montrer les lieux distincts des débats
"SELECT T3.Name , T2.Date , T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID","Indiquez les noms des personnes, les dates et les lieux des débats où elles sont du côté affirmatif."
"SELECT T3.Name , T2.Date , T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID ORDER BY T3.Name ASC","Indiquez les noms des personnes, ainsi que les dates et les lieux des débats auxquels ils se trouvent du côté négatif, classés par ordre alphabétique croissant des noms."
SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200,Montrez les noms des personnes qui sont du côté affirmatif des débats avec un nombre d'audience supérieur à 200.
"SELECT T2.Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",Montrez les noms des personnes et le nombre de fois où elles ont été du côté affirmatif des débats.
SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.People_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,Montrez les noms des personnes qui ont été du côté négatif des débats au moins deux fois.
SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people),Énumérez les noms des personnes qui n'ont pas été du côté affirmatif des débats.
SELECT customer_details FROM customers ORDER BY customer_details,Dressez la liste des noms de tous les clients par ordre alphabétique.
SELECT customer_details FROM customers ORDER BY customer_details,Triez les noms des clients par ordre alphabétique.
"SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = ""Dayana Robel""","Retrouver tous les codes type de police associés au client ""Dayana Robel"""
"SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = ""Dayana Robel""","Quels sont les codes types des polices utilisées par le client ""Dayana Robel"" ?"
SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1,Quel type de politique est le plus fréquemment utilisé ? Donnez-moi le code du type de police.
SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1,Recherchez le code de type de la stratégie la plus fréquemment utilisée.
SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*) > 2,Trouvez tous les types de polices utilisés par plus de 2 clients.
SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*) > 2,Quels types de polices sont choisis par plus de 2 clients ? Donnez-moi les codes de type de politique.
"SELECT sum(amount_piad) , avg(amount_piad) FROM claim_headers",Trouvez le montant total et moyen payé dans les en-têtes de réclamation.
"SELECT sum(amount_piad) , avg(amount_piad) FROM claim_headers",Quels sont le montant total et le montant moyen payé dans les en-têtes de réclamation ?
SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.created_date = (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1),Trouvez le montant total réclamé dans le dernier document créé.
SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.created_date = (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1),Quel montant total a été réclamé dans le dernier document créé ?
SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_claimed = (SELECT max(amount_claimed) FROM claim_headers),Quel est le nom du client qui a fait le plus grand montant de réclamation en une seule réclamation ?
SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_claimed = (SELECT max(amount_claimed) FROM claim_headers),Quel client a fait le plus grand montant de réclamation en une seule réclamation ? Renvoyer les coordonnées du client.
SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad = (SELECT min(amount_piad) FROM claim_headers),Quel est le nom du client qui a effectué le paiement minimum d'une réclamation ?
SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad = (SELECT min(amount_piad) FROM claim_headers),Quel client a fait le plus petit montant de réclamation dans une réclamation ? Renvoyer les coordonnées du client.
SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id,Recherchez les noms des clients qui n'ont aucune politique associée.
SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id,Comment s'appellent les clients qui n'ont pas de police ?
SELECT count(*) FROM claims_processing_stages,Combien y a-t-il d'étapes de traitement des réclamations au total ?
SELECT count(*) FROM claims_processing_stages,Trouvez le nombre d'étapes distinctes dans le traitement des réclamations.
SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'étape de traitement des réclamations sur laquelle se situent la plupart des réclamations ?
SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1,Quelle étape de traitement des réclamations a le plus de réclamations ? Afficher le nom de l'état de la réclamation.
"SELECT customer_details FROM customers WHERE customer_details LIKE ""%Diana%""","Trouvez les noms des clients dont le nom contient ""Diana""."
"SELECT customer_details FROM customers WHERE customer_details LIKE ""%Diana%""","Quels clients ont la sous-chaîne ""Diana"" dans leur nom ? Renvoyer les coordonnées du client."
"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = ""Deputy""",Trouvez les noms des clients qui ont une politique de remplacement.
"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = ""Deputy""","Quels clients ont une police d'assurance avec le code de type ""Deputy"" ? Donnez-moi les coordonnées du client."
"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = ""Deputy"" OR t1.policy_type_code = ""Uniform""","Trouvez les noms des clients qui ont soit une police adjointe, soit une police en uniforme."
"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = ""Deputy"" OR t1.policy_type_code = ""Uniform""","Quels clients ont une police d'assurance avec le code de type ""Deputy"" ou ""Uniform"" ? Renvoyer les coordonnées du client."
SELECT customer_details FROM customers UNION SELECT staff_details FROM staff,Trouvez les noms de tous les clients et membres du personnel.
SELECT customer_details FROM customers UNION SELECT staff_details FROM staff,Quels sont les noms des clients et des membres du personnel ?
"SELECT policy_type_code , count(*) FROM policies GROUP BY policy_type_code",Recherchez le nombre d'enregistrements de chaque type de stratégie et son code de type.
"SELECT policy_type_code , count(*) FROM policies GROUP BY policy_type_code","Pour chaque type de politique, renvoyez son code de type et son nombre dans l'enregistrement."
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1,Trouvez le nom du client qui a été impliqué dans le plus de polices.
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1,Quel client a le plus de polices ? Donnez-moi les coordonnées du client.
"SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = ""Open""","Quelle est la description de l'état de la réclamation ""Ouverte"" ?"
"SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = ""Open""","Recherchez la description du statut de réclamation ""Ouvert""."
SELECT count(DISTINCT claim_outcome_code) FROM claims_processing,Combien y a-t-il de codes de résultat de réclamation distincts ?
SELECT count(DISTINCT claim_outcome_code) FROM claims_processing,Comptez le nombre de codes de résultat de réclamation distincts.
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.start_date = (SELECT max(start_date) FROM policies),Quel client est associé à la dernière politique ?
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.start_date = (SELECT max(start_date) FROM policies),Recherchez le client qui a souscrit une police le plus récemment.
"SELECT account_id , date_account_opened , account_name , other_account_details FROM Accounts","Affichez l'identifiant, la date d'ouverture du compte, le nom du compte et d'autres détails du compte pour tous les comptes."
"SELECT account_id , date_account_opened , account_name , other_account_details FROM Accounts","Quels sont les identifiants, la date d'ouverture, le nom et d'autres détails pour tous les comptes ?"
"SELECT T1.account_id , T1.date_account_opened , T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'","Affichez l'identifiant, le nom du compte et d'autres détails de compte pour tous les comptes du client dont le prénom est ""Meaghan""."
"SELECT T1.account_id , T1.date_account_opened , T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'","Quels sont les identifiants, noms, dates d'ouverture et autres détails des comptes correspondant au client dont le prénom est ""Meaghan"" ?"
"SELECT T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Meaghan"" AND T2.customer_last_name = ""Keeling""",Afficher le nom du compte et d'autres détails de compte pour tous les comptes du client avec le prénom Meaghan et le nom de famille Keeling.
"SELECT T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = ""Meaghan"" AND T2.customer_last_name = ""Keeling""",Quels sont les noms et autres détails des comptes correspondant au client nommé Meaghan Keeling ?
"SELECT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = ""900""",Afficher le prénom et le nom du client avec le nom de compte 900.
"SELECT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = ""900""",Quels sont les noms complets des clients avec le nom de compte 900 ?
"SELECT DISTINCT T1.customer_first_name , T1.customer_last_name , T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id","Affichez les prénoms, noms et numéros de téléphone uniques de tous les clients avec n'importe quel compte."
"SELECT DISTINCT T1.customer_first_name , T1.customer_last_name , T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id","Quels sont les prénoms, noms et numéros de téléphone distincts pour les clients disposant de comptes ?"
SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts,Afficher les identifiants des clients qui n'ont pas de compte.
SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts,Quels sont les identifiants client pour les clients qui n'ont pas de compte ?
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","Quel est l'identifiant du client, le prénom et le nom avec le plus grand nombre de comptes."
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",Renvoie l'identifiant et le nom complet du client avec le plus de comptes.
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id","Afficher l'identifiant, le prénom et le nom de tous les clients et le nombre de comptes."
"SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id","Quels sont les noms complets et les identifiants de tous les clients, et combien de comptes chacun possède-t-il ?"
"SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2",Afficher le prénom et l'identifiant de tous les clients ayant au moins 2 comptes.
"SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2",Quels sont les prénoms et les identifiants des clients qui ont deux comptes ou plus ?
"SELECT gender , count(*) FROM Customers GROUP BY gender",Afficher le nombre de clients pour chaque sexe.
"SELECT gender , count(*) FROM Customers GROUP BY gender",Combien y a-t-il de clients de chaque sexe ?
SELECT count(*) FROM Financial_transactions,Combien de transactions avons-nous ?
SELECT count(*) FROM Financial_transactions,Comptez le nombre de transactions.
"SELECT count(*) , account_id FROM Financial_transactions",Combien de transactions chaque compte a-t-il ? Afficher le numéro et l'identifiant du compte.
"SELECT count(*) , account_id FROM Financial_transactions",Comptez le nombre de transactions financières correspondant à chaque identifiant de compte.
"SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = ""337""",Combien de transactions le compte avec le nom 337 a-t-il ?
"SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = ""337""",Comptez le nombre de transactions financières que le compte avec le nom 337 a.
"SELECT avg(transaction_amount) , min(transaction_amount) , max(transaction_amount) , sum(transaction_amount) FROM Financial_transactions","Quel est le montant moyen, minimum, maximum et total de la transaction ?"
"SELECT avg(transaction_amount) , min(transaction_amount) , max(transaction_amount) , sum(transaction_amount) FROM Financial_transactions","Renvoie les montants moyen, minimum, maximum et total des transactions."
SELECT transaction_id FROM Financial_transactions WHERE transaction_amount > (SELECT avg(transaction_amount) FROM Financial_transactions),Afficher les identifiants pour toutes les transactions dont les montants sont supérieurs à la moyenne.
SELECT transaction_id FROM Financial_transactions WHERE transaction_amount > (SELECT avg(transaction_amount) FROM Financial_transactions),Quels sont les identifiants des transactions dont le montant est supérieur au montant moyen d'une transaction ?
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Afficher les types de transactions et le montant total des transactions.
"SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",Quels sont les montants totaux des transactions pour chaque type de transaction ?
"SELECT T2.account_name , T1.account_id , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id","Afficher le nom du compte, l'identifiant et le nombre de transactions pour chaque compte."
"SELECT T2.account_name , T1.account_id , count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id","Renvoie les noms et identifiants de chaque compte, ainsi que le nombre de transactions."
SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1,Afficher l'identifiant du compte avec le plus grand nombre de transactions.
SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1,Quel est l'identifiant du compte avec le plus de transactions ?
"SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count(*) >= 4",Afficher l'identifiant et le nom du compte avec au moins 4 transactions.
"SELECT T1.account_id , T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING count(*) >= 4",Quels sont les identifiants et les noms des comptes avec 4 transactions ou plus ?
SELECT DISTINCT product_size FROM Products,Afficher toutes les tailles de produits.
SELECT DISTINCT product_size FROM Products,Quelles sont les différentes tailles de produits ?
SELECT DISTINCT product_color FROM Products,Afficher toutes les couleurs du produit.
SELECT DISTINCT product_color FROM Products,Quelles sont les différentes couleurs de produits ?
"SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number",Afficher le numéro de facture et le nombre de transactions pour chaque facture.
"SELECT invoice_number , count(*) FROM Financial_transactions GROUP BY invoice_number",Combien de transactions correspondent à chaque numéro de facture ?
"SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1",Quels sont le numéro de facture et la date de facturation de la facture avec le plus grand nombre de transactions ?
"SELECT T2.invoice_number , T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1",Quel est le numéro de facture et la date de facture correspondant à la facture avec le plus grand nombre de transactions ?
SELECT count(*) FROM Invoices,Combien de factures avons-nous ?
SELECT count(*) FROM Invoices,Comptez le nombre de factures.
"SELECT T1.invoice_date , T1.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id",Afficher les dates de facturation et l'ID de commande et les détails de toutes les factures.
"SELECT T1.invoice_date , T1.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id","Quelles sont les dates de facturation, les identifiants de commande et les détails de la commande pour toutes les factures ?"
"SELECT order_id , count(*) FROM Invoices GROUP BY order_id",Afficher les identifiants de commande et le nombre de factures pour chaque commande.
"SELECT order_id , count(*) FROM Invoices GROUP BY order_id",Combien de factures correspondent à chaque identifiant de commande ?
"SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count(*) > 2",Quel est l'identifiant de la commande et les détails de la commande pour la commande de plus de deux factures.
"SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count(*) > 2",Renvoyez les identifiants et les détails de la commande pour les commandes avec deux factures ou plus.
"SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","Quels sont le nom de famille, l'identifiant et le numéro de téléphone du client avec le plus grand nombre de commandes ?"
"SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","Renvoyez le nom, l'identifiant et le numéro de téléphone du client qui a effectué le plus grand nombre de commandes."
SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id,Afficher tous les noms de produits sans commande.
SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id,Comment s'appellent les produits qui n'ont jamais été commandés ?
"SELECT T2.product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",Afficher tous les noms de produits et la quantité totale commandée pour chaque nom de produit.
"SELECT T2.product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",Quels sont les différents noms de produits et quelle est la somme des quantités commandées pour chaque produit ?
"SELECT order_id , count(*) FROM Order_items GROUP BY order_id",Afficher les identifiants de commande et le nombre d'articles dans chaque commande.
"SELECT order_id , count(*) FROM Order_items GROUP BY order_id",Combien d'articles de commande correspondent à chaque identifiant de commande ?
"SELECT product_id , count(DISTINCT order_id) FROM Order_items GROUP BY product_id",Affichez les identifiants des produits et le nombre de commandes uniques contenant chaque produit.
"SELECT product_id , count(DISTINCT order_id) FROM Order_items GROUP BY product_id",Combien d'identifiants de commande distincts correspondent à chaque produit ?
"SELECT T2.product_name , count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name",Afficher tous les noms de produits et le nombre de clients ayant une commande sur chaque produit.
"SELECT T2.product_name , count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name","Quels sont les noms des différents produits, ainsi que le nombre de clients qui ont commandé chaque produit."
"SELECT order_id , count(DISTINCT product_id) FROM Order_items GROUP BY order_id",Afficher les identifiants de commande et le nombre de produits dans chaque commande.
"SELECT order_id , count(DISTINCT product_id) FROM Order_items GROUP BY order_id",Combien de produits différents correspondent à chaque identifiant de commande ?
"SELECT order_id , sum(product_quantity) FROM Order_items GROUP BY order_id",Afficher les identifiants de commande et la quantité totale dans chaque commande.
"SELECT order_id , sum(product_quantity) FROM Order_items GROUP BY order_id","Donnez les identifiants de commande pour toutes les commandes, ainsi que la quantité totale de produits dans chacune."
SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items ),Combien de produits n'ont été inclus dans aucune commande ?
SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items ),Comptez le nombre de produits qui n'ont jamais été commandés.
SELECT count(*) FROM Church WHERE Open_Date < 1850,Combien y a-t-il d'églises ouvertes avant 1850 ?
"SELECT name , open_date , organized_by FROM Church","Afficher le nom, la date d'ouverture et l'organisateur de toutes les églises."
SELECT name FROM church ORDER BY open_date DESC,Énumérez tous les noms d'églises par ordre décroissant de date d'ouverture.
SELECT open_date FROM church GROUP BY open_date HAVING count(*) >= 2,Indiquez l'année d'ouverture au cours de laquelle au moins deux églises ont ouvert.
"SELECT organized_by , name FROM church WHERE open_date BETWEEN 1830 AND 1840",Afficher l'organisateur et le nom des églises ouvertes entre 1830 et 1840.
"SELECT open_date , count(*) FROM church GROUP BY open_date",Afficher toutes les années d'ouverture et le nombre d'églises ouvertes cette année-là.
"SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3",Affichez le nom et l'année d'ouverture des trois églises qui ont ouvert le plus récemment.
SELECT count(*) FROM people WHERE is_male = 'F' AND age > 30,Combien de femmes ont plus de 30 ans dans notre liste ?
SELECT country FROM people WHERE age < 25 INTERSECT SELECT country FROM people WHERE age > 30,Montrez le pays d'où viennent les personnes de plus de 30 ans et de moins de 25 ans.
"SELECT min(age) , max(age) , avg(age) FROM people","Afficher l'âge minimum, maximum et moyen de toutes les personnes."
"SELECT name , country FROM people WHERE age < (SELECT avg(age) FROM people)",Afficher le nom et le pays de toutes les personnes dont l'âge est inférieur à la moyenne.
"SELECT T2.name , T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id WHERE T1.year > 2014",Afficher la paire de noms masculins et féminins dans tous les mariages après l'année 2014
"SELECT name , age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)",Montrez le nom et l'âge de tous les hommes qui n'ont pas de mariage.
SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id WHERE T2.year = 2015,Afficher tous les noms d'églises à l'exception de ceux qui se sont mariés en 2015.
SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id GROUP BY T1.church_id HAVING count(*) >= 2,Afficher tous les noms d'églises qui ont accueilli au moins deux mariages.
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id WHERE T1.year = 2016 AND T2.is_male = 'F' AND T2.country = 'Canada',Afficher les noms de toutes les femmes du Canada qui se sont mariées en 2016.
SELECT count(*) FROM wedding WHERE YEAR = 2016,Combien y a-t-il de mariages en 2016 ?
SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id JOIN church AS T4 ON T4.church_id = T1.church_id WHERE T2.age > 30 OR T3.age > 30,Montrez les noms des églises pour les mariages de toutes les personnes de plus de 30 ans.
"SELECT country , count(*) FROM people GROUP BY country",Afficher tous les pays et le nombre de personnes de chaque pays.
SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR = 2016,Combien d'églises organisent un mariage en 2016 ?
SELECT count(*) FROM artist,Combien d'artistes avons-nous ?
SELECT count(*) FROM artist,Comptez le nombre d'artistes.
SELECT count(*) FROM artist,Combien y a-t-il d'artistes ?
SELECT count(*) FROM artist,Comptez le nombre d'artistes.
"SELECT name , age , country FROM artist ORDER BY Year_Join","Afficher le nom, l'âge et le pays de tous les artistes classés par année d'adhésion."
"SELECT name , age , country FROM artist ORDER BY Year_Join","Quels sont les noms, âges et pays des artistes, triés par année d'arrivée ?"
SELECT DISTINCT country FROM artist,Quels sont tous les pays distincts pour les artistes?
SELECT DISTINCT country FROM artist,Retour des différents pays pour les artistes.
"SELECT name , year_join FROM artist WHERE country != 'United States'",Afficher tous les noms d'artistes et l'année d'adhésion qui ne sont pas des États-Unis.
"SELECT name , year_join FROM artist WHERE country != 'United States'","Quels sont les noms et l'année d'adhésion pour les artistes qui n'ont pas le pays ""États-Unis"" ?"
SELECT count(*) FROM artist WHERE age > 46 AND year_join > 1990,Combien d'artistes ont plus de 46 ans et sont entrés après 1990 ?
SELECT count(*) FROM artist WHERE age > 46 AND year_join > 1990,Comptez le nombre d'artistes âgés de plus de 46 ans et arrivés après 1990.
"SELECT avg(age) , min(age) FROM artist WHERE country = 'United States'",Quel est l'âge moyen et minimum de tous les artistes des États-Unis.
"SELECT avg(age) , min(age) FROM artist WHERE country = 'United States'",Renvoie les âges moyen et minimum des artistes des États-Unis.
SELECT name FROM artist ORDER BY year_join DESC LIMIT 1,Quel est le nom de l'artiste qui a rejoint le dernier?
SELECT name FROM artist ORDER BY year_join DESC LIMIT 1,Renvoie le nom de l'artiste qui a la dernière année d'adhésion.
SELECT count(*) FROM exhibition WHERE YEAR >= 2005,Combien y a-t-il d'expositions en 2005 ou après ?
SELECT count(*) FROM exhibition WHERE YEAR >= 2005,Comptez le nombre d'expositions qui ont eu lieu en 2005 ou après.
"SELECT theme , YEAR FROM exhibition WHERE ticket_price < 15",Thème et année du spectacle pour toutes les expositions dont le prix des billets est inférieur à 15.
"SELECT theme , YEAR FROM exhibition WHERE ticket_price < 15",Quels sont le thème et l'année pour toutes les expositions dont le prix d'entrée est inférieur à 15 ans ?
"SELECT T2.name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Afficher tous les noms d'artistes et le nombre d'expositions pour chaque artiste.
"SELECT T2.name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",Combien d'expositions chaque artiste a-t-il eu ?
"SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1",Quel est le nom et le pays de l'artiste avec le plus grand nombre d'expositions ?
"SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1",Renvoyez le nom et le pays correspondant à l'artiste qui a eu le plus d'expositions.
SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition),Afficher les noms des artistes sans aucune exposition.
SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition),Quels sont les noms des artistes qui n'ont pas eu d'expositions ?
"SELECT T1.theme , T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.ticket_price > (SELECT avg(ticket_price) FROM exhibition)",Quel est le thème et le nom de l'artiste pour l'exposition avec un prix du billet plus élevé que la moyenne ?
"SELECT T1.theme , T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.ticket_price > (SELECT avg(ticket_price) FROM exhibition)",Retournez les noms d'artistes et les thèmes de leurs expositions qui avaient un prix d'entrée supérieur à la moyenne.
"SELECT avg(ticket_price) , min(ticket_price) , max(ticket_price) FROM exhibition WHERE YEAR < 2009","Afficher les prix moyen, minimum et maximum des billets pour les expositions pour toutes les années avant 2009."
"SELECT avg(ticket_price) , min(ticket_price) , max(ticket_price) FROM exhibition WHERE YEAR < 2009","Quels sont les prix moyen, minimum et maximum des billets pour les expositions qui ont eu lieu avant 2009 ?"
"SELECT theme , YEAR FROM exhibition ORDER BY ticket_price DESC",Thème et année du spectacle pour toutes les expositions dans l'ordre décroissant du prix du billet.
"SELECT theme , YEAR FROM exhibition ORDER BY ticket_price DESC","Quels sont les thèmes et les années d'expositions, classés par prix d'entrée décroissant ?"
"SELECT T2.theme , T1.date , T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004","Quel est le thème, la date et la fréquentation de l'exposition en 2004 ?"
"SELECT T2.theme , T1.date , T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004","Renvoyez les thèmes, les dates et la fréquentation des expositions qui ont eu lieu en 2004."
SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.year = 2004,Afficher tous les noms d'artistes qui n'ont pas eu d'exposition en 2004.
SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.year = 2004,Quels sont les noms des artistes qui n'ont pas eu d'exposition en 2004 ?
SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500,Affichez le thème des expositions avec des records de fréquentation inférieurs à 100 et supérieurs à 500.
SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500,Quels thèmes ont eu des expositions correspondantes qui ont eu une fréquentation inférieure à 100 et supérieure à 500 ?
SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 100 OR T2.ticket_price < 10,Combien d'expositions ont une fréquentation supérieure à 100 ou ont un prix du billet inférieur à 10 ?
SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 100 OR T2.ticket_price < 10,Comptez le nombre d'expositions qui ont eu une fréquentation supérieure à 100 ou un prix des billets inférieur à 10.
SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id JOIN artist AS T3 ON T3.artist_id = T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance) > 200,Afficher tous les noms d'artistes avec une fréquentation moyenne des expositions supérieure à 200.
SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id JOIN artist AS T3 ON T3.artist_id = T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance) > 200,Comment s'appellent les artistes dont les expositions attirent en moyenne plus de 200 visiteurs ?
"SELECT i_id FROM item WHERE title = ""orange""","Trouvez l'identifiant de l'élément dont le titre est ""orange""."
SELECT * FROM item,Répertorier toutes les informations dans le tableau des éléments.
SELECT count(*) FROM review,Trouver le nombre d'avis.
SELECT count(*) FROM useracct,Combien y a-t-il d'utilisateurs ?
"SELECT avg(rating) , max(rating) FROM review",Trouvez la note moyenne et maximale de tous les avis.
SELECT min(rank) FROM review,Trouvez le classement le plus élevé de tous les avis.
SELECT count(DISTINCT u_id) FROM review,Combien d'utilisateurs différents ont écrit des avis ?
SELECT count(DISTINCT i_id) FROM review,Combien d'éléments différents ont été examinés par certains utilisateurs ?
SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review),Trouvez le nombre d'articles qui n'ont reçu aucune révision.
SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review),Trouver le nombre d'articles sans aucun examen.
SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review),Retrouvez les noms des utilisateurs qui n'ont laissé aucun avis.
SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review),Retrouvez les noms des utilisateurs qui n'ont laissé aucun avis.
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating = 10,Trouvez les noms des biens qui reçoivent une note de 10.
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > (SELECT avg(rating) FROM review),Trouvez les titres des éléments dont la note est supérieure à la note moyenne des avis de tous les éléments.
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating < 5,Trouvez les titres des éléments qui ont reçu une note inférieure à 5.
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > 8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating < 5,Trouvez les titres des articles qui ont reçu à la fois une note supérieure à 8 et une note inférieure à 5.
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rank > 3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating) > 5,Trouvez les noms des éléments dont le rang est supérieur à 3 et dont la note moyenne est supérieure à 5.
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1,Trouvez le nom de l'élément avec la note moyenne la plus basse.
SELECT title FROM item ORDER BY title,Dressez la liste des titres de tous les éléments par ordre alphabétique.
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de l'utilisateur qui donne le plus d'avis.
"SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1",Trouvez le nom et l'identifiant de l'élément avec la note moyenne la plus élevée.
"SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1",Trouvez le nom et l'identifiant du bien avec le classement moyen le plus élevé.
"SELECT T1.name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id","Pour chaque utilisateur, renvoyez le nom et la note moyenne des avis qu'il a donnés."
"SELECT T1.name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id","Pour chaque utilisateur, retrouvez son nom et le nombre d'avis écrits par lui."
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id ORDER BY T2.rating DESC LIMIT 1,Trouvez le nom de l'utilisateur qui a donné la meilleure note.
SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg(trust) DESC LIMIT 1,Trouvez le nom de l'utilisateur source avec le score de confiance moyen le plus élevé.
"SELECT T1.name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",Trouvez le nom de chaque utilisateur cible et le score de confiance moyen.
SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id ORDER BY trust LIMIT 1,Trouvez le nom de l'utilisateur cible avec le score de confiance le plus bas.
SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review),Trouvez les noms des éléments qui n'ont reçu aucune révision.
SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review),Trouvez le nombre d'utilisateurs qui n'ont pas écrit d'avis.
SELECT count(*) FROM player,Combien y a-t-il de joueurs ?
SELECT Player_name FROM player ORDER BY Votes ASC,Listez les noms des joueurs dans l'ordre croissant des votes.
"SELECT Gender , Occupation FROM player",Quels sont le sexe et la profession des joueurs ?
"SELECT Player_name , residence FROM player WHERE Occupation != ""Researcher""","Indiquez le nom et la résidence des joueurs dont la profession n'est pas ""Chercheur""."
"SELECT Sponsor_name FROM player WHERE Residence = ""Brandon"" OR Residence = ""Birtle""","Afficher les noms des sponsors des joueurs dont la résidence est soit ""Brandon"" ou ""Birtle""."
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1,Quel est le nom du joueur avec le plus grand nombre de votes ?
"SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation",Montrez différentes professions ainsi que le nombre de joueurs dans chaque profession.
SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer la profession la plus courante des joueurs.
SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*) >= 2,Montrez les résidences qui ont au moins deux joueurs.
"SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID",Afficher les noms des joueurs et les noms de leurs entraîneurs.
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T2.Rank = 1,Afficher les noms des joueurs entraînés par l'entraîneur de rang 1.
"SELECT T3.Player_name , T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T1.Starting_year > 2011",Afficher les noms et les sexes des joueurs avec un entraîneur commençant après 2011.
"SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC",Afficher les noms des joueurs et les noms de leurs entraîneurs dans l'ordre décroissant des votes des joueurs.
SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach),Énumérez les noms des joueurs qui n'ont pas d'entraîneurs.
"SELECT Residence FROM player WHERE gender = ""M"" INTERSECT SELECT Residence FROM player WHERE gender = ""F""","Afficher les résidences qui ont à la fois un joueur de sexe ""M"" et un joueur de sexe ""F""."
"SELECT T1.club_id , T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id","Combien d'entraîneurs compte chaque club ? Indiquez l'identifiant du club, le nom et le nombre d'entraîneurs."
"SELECT T1.club_id , T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1",Combien de médailles d'or le club avec le plus d'entraîneurs a-t-il remportées ?
SELECT count(*) FROM gymnast,Combien y a-t-il de gymnastes ?
SELECT count(*) FROM gymnast,Comptez le nombre de gymnastes.
SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC,Dressez la liste des points totaux des gymnastes par ordre décroissant.
SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC,"Quel est le total des points pour tous les gymnastes, classé par total de points décroissant ?"
SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC,Dressez la liste des points totaux des gymnastes dans l'ordre décroissant des points d'exercice au sol.
SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC,"Quel est le total des points des gymnastes, classé par ordre décroissant de leurs points d'exercice au sol ?"
SELECT avg(Horizontal_Bar_Points) FROM gymnast,Quelle est la moyenne des points à la barre horizontale pour tous les gymnastes ?
SELECT avg(Horizontal_Bar_Points) FROM gymnast,Renvoie la moyenne des points de la barre horizontale pour tous les gymnastes.
SELECT Name FROM People ORDER BY Name ASC,Comment s'appellent les personnes par ordre alphabétique croissant ?
SELECT Name FROM People ORDER BY Name ASC,"Renvoie les noms des personnes, classés par ordre alphabétique."
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID,Comment s'appellent les gymnastes ?
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID,Renvoyez les noms des gymnastes.
"SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != ""Santo Domingo""","Comment s'appellent les gymnastes dont la ville natale n'est pas ""Saint-Domingue"" ?"
"SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Hometown != ""Santo Domingo""",Renvoyez les noms de gymnastes qui n'ont pas grandi à Saint-Domingue.
SELECT Age FROM people ORDER BY Height DESC LIMIT 1,Quel est l'âge de la personne la plus grande ?
SELECT Age FROM people ORDER BY Height DESC LIMIT 1,Renvoie l'âge de la personne la plus grande.
SELECT Name FROM People ORDER BY Age DESC LIMIT 5,Énumérez les noms des 5 personnes les plus âgées.
SELECT Name FROM People ORDER BY Age DESC LIMIT 5,Comment s'appellent les cinq personnes les plus âgées ?
SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Age ASC LIMIT 1,Quel est le nombre total de points du plus jeune gymnaste ?
SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Age ASC LIMIT 1,Rendre le total des points de la gymnaste avec l'âge le plus bas.
SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID,Quel est l'âge moyen de tous les gymnastes ?
SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID,Renvoie l'âge moyen de tous les gymnastes.
SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Total_Points > 57.5,"Quelles sont les villes natales distinctes des gymnastes avec un total de points supérieur à 57,5 ?"
SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Total_Points > 57.5,"Donnez les différentes villes natales des gymnastes qui ont un score total supérieur à 57,5."
"SELECT T2.Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Quelles sont les villes natales des gymnastes et le nombre de gymnastes correspondant ?
"SELECT T2.Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",Combien y a-t-il de gymnastes dans chaque ville natale ?
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1,Quelle est la ville natale la plus commune des gymnastes ?
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1,Renvoyez la ville natale la plus fréquente chez les gymnastes.
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*) >= 2,Quelles sont les villes natales partagées par au moins deux gymnastes ?
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*) >= 2,Donnez les villes d'origine de deux gymnastes ou plus.
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height ASC,Énumérez les noms des gymnastes par ordre croissant de taille.
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height ASC,"Quels sont les noms des gymnastes, classés par leur taille ascendante ?"
SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID,Énumérez les villes natales distinctes qui ne sont associées à aucun gymnaste.
SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID,De quelles villes natales aucun gymnaste ne venait-il ?
SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20,Afficher les villes natales partagées par les personnes âgées de plus de 23 ans et de moins de 20 ans.
SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20,De quelles villes natales les personnes de plus de 23 ans et de moins de 20 ans sont-elles originaires ?
SELECT count(DISTINCT Hometown) FROM people,Combien de villes natales distinctes ces personnes avaient-elles ?
SELECT count(DISTINCT Hometown) FROM people,Comptez le nombre de villes natales différentes de ces personnes.
SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Total_Points DESC,Indiquez l'âge des gymnastes par ordre décroissant du nombre total de points.
SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Total_Points DESC,"Quels sont les âges des gymnastes, classés par ordre décroissant de leur total de points ?"
SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown',"Trouvez le solde d'épargne total de tous les comptes, à l'exception du compte portant le nom « Brown »."
SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown',Quel est le solde total des comptes d'épargne n'appartenant pas à quelqu'un du nom de Brown ?
SELECT sum(balance) FROM checking,Quel est le solde de contrôle total de tous les comptes ?
SELECT sum(balance) FROM checking,Trouvez le solde total des comptes chèques.
SELECT avg(balance) FROM checking,Trouvez le solde de contrôle moyen.
SELECT avg(balance) FROM checking,Quel est le solde moyen des comptes chèques ?
SELECT count(*) FROM savings WHERE balance > (SELECT avg(balance) FROM savings),Combien de comptes ont un solde d'épargne supérieur au solde d'épargne moyen ?
SELECT count(*) FROM savings WHERE balance > (SELECT avg(balance) FROM savings),Trouvez le nombre de comptes dont le solde d'épargne est supérieur au solde d'épargne moyen.
"SELECT T1.custid , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT max(balance) FROM checking)",Recherchez le nom et l'identifiant des comptes dont le solde de contrôle est inférieur au solde de contrôle maximum.
"SELECT T1.custid , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT max(balance) FROM checking)",Quels sont l'identifiant et le nom du client correspondant aux comptes dont le solde de contrôle est inférieur au solde de contrôle le plus élevé ?
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name LIKE '%ee%',Quel est le solde de contrôle du compte dont le nom du propriétaire contient la sous-chaîne « ee » ?
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name LIKE '%ee%',Trouver le solde du compte courant appartenant à un propriétaire dont le nom contient 'ee'.
"SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",Trouvez le solde de contrôle et le solde d'épargne dans le compte de Brown.
"SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",Quels sont les soldes de contrôle et d'épargne des comptes appartenant à Brown ?
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT avg(balance) FROM savings),"Trouvez les noms des comptes dont le solde de contrôle est supérieur au solde de contrôle moyen, mais le solde d'épargne est inférieur au solde d'épargne moyen."
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT avg(balance) FROM savings),Quels sont les noms des comptes dont les soldes de contrôle sont supérieurs au solde de contrôle moyen et les soldes d'épargne inférieurs au solde d'épargne moyen ?
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT avg(balance) FROM savings)),Trouvez le solde de contrôle des comptes dont le solde d'épargne est supérieur au solde d'épargne moyen.
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT avg(balance) FROM savings)),Quels sont les soldes des comptes chèques appartenant à des personnes dont le solde d'épargne est supérieur au solde d'épargne moyen ?
SELECT name FROM accounts ORDER BY name,Listez tous les noms de clients dans l'ordre alphabétique.
SELECT name FROM accounts ORDER BY name,Quels sont les noms de tous les clients par ordre alphabétique ?
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance LIMIT 1,Trouvez le nom du compte qui a le solde total de vérification et d'épargne le plus bas.
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance LIMIT 1,Quel est le nom correspondant au compte dont la somme des soldes de contrôle et d'épargne est la plus faible ?
"SELECT T1.name , T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > (SELECT avg(balance) FROM savings)",Trouvez les noms et les soldes de contrôle et d'épargne totaux des comptes dont le solde d'épargne est supérieur au solde d'épargne moyen.
"SELECT T1.name , T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > (SELECT avg(balance) FROM savings)",Quels sont les noms et la somme des soldes de contrôle et d'épargne pour les comptes dont les soldes d'épargne sont supérieurs au solde d'épargne moyen ?
"SELECT T1.name , T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1",Trouvez le nom et le solde de contrôle du compte avec le solde d'épargne le plus bas.
"SELECT T1.name , T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1",Quels sont les noms et les soldes des comptes chèques appartenant au client avec le solde d'épargne le plus bas ?
"SELECT T1.name , T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1",Trouvez le nom et le solde de contrôle du compte avec le solde d'épargne le plus bas.
"SELECT T1.name , T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1",Quel est le nom et le solde de contrôle du compte qui a le solde d'épargne le plus bas ?
"SELECT count(*) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name",Trouvez le nombre de comptes chèques pour chaque nom de compte.
"SELECT count(*) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name","Quels sont les noms des clients avec des comptes, et combien de comptes courants chacun d'eux possède-t-il ?"
"SELECT sum(T2.balance) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name",Trouvez le solde d'épargne total pour chaque nom de compte.
"SELECT sum(T2.balance) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name","Quels sont les noms des clients avec des comptes, et quel est le solde d'épargne total pour chacun ?"
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT avg(balance) FROM checking),Trouvez le nom des comptes dont le solde de contrôle est inférieur au solde de contrôle moyen.
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT avg(balance) FROM checking),Quels sont les noms des clients dont les soldes de contrôle sont inférieurs au solde de contrôle moyen ?
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1,Trouvez le solde d'épargne du compte avec le solde de contrôle le plus élevé.
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1,Quel est le solde d'épargne du compte du client avec le solde de contrôle le plus élevé ?
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance,Trouvez le solde total de contrôle et d'épargne de tous les comptes triés par le solde total dans l'ordre croissant.
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance,"Quelle est la somme des soldes de contrôle et d'épargne pour tous les clients, classés par le solde total ?"
"SELECT T2.balance , T3.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid","Trouvez le nom, le solde de vérification et le solde d'épargne de tous les comptes de la banque."
"SELECT T2.balance , T3.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid","Quels sont les noms, les soldes de contrôle et les soldes d'épargne de tous les clients ?"
"SELECT T2.balance , T3.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance DESC","Trouvez le nom, le solde de contrôle et le solde d'épargne de tous les comptes de la banque triés par leur solde total de contrôle et d'épargne dans l'ordre décroissant."
"SELECT T2.balance , T3.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance DESC","Quels sont les noms, les soldes de contrôle et les soldes d'épargne des clients, classés par le total des soldes de contrôle et d'épargne décroissant ?"
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance,Trouvez le nom des comptes dont le solde de contrôle est supérieur au solde d'épargne correspondant.
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance,Comment s'appellent les clients dont le solde de contrôle est supérieur au solde d'épargne ?
"SELECT T1.name , T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance < T2.balance",Trouvez le nom et le solde total de contrôle et d'épargne des comptes dont le solde d'épargne est inférieur au solde de contrôle correspondant.
"SELECT T1.name , T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance < T2.balance","Quels sont les noms des clients qui ont un solde d'épargne inférieur à leur solde de contrôle, et quel est le total de leurs soldes de contrôle et d'épargne ?"
"SELECT T1.name , T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance DESC LIMIT 3",Trouvez le nom et le solde d'épargne des 3 premiers comptes avec le solde d'épargne le plus élevé trié par solde d'épargne dans l'ordre décroissant.
"SELECT T1.name , T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance DESC LIMIT 3",Quels sont les noms et les soldes d'épargne des trois comptes avec les soldes d'épargne les plus élevés ?
SELECT count(*) FROM browser WHERE market_share >= 5,Combien de navigateurs principaux dont la part de marché est d'au moins 5 existent ?
SELECT name FROM browser ORDER BY market_share DESC,Listez le nom des navigateurs par ordre décroissant de part de marché.
"SELECT id , name , market_share FROM browser","Répertoriez les identifiants, les noms et les parts de marché de tous les navigateurs."
"SELECT max(market_share) , min(market_share) , avg(market_share) FROM browser","Quelle est la part de marché maximale, minimale et moyenne des navigateurs répertoriés ?"
"SELECT id , market_share FROM browser WHERE name = 'Safari'",Quel est l'identifiant et la part de marché du navigateur Safari ?
"SELECT name , operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'","Quels sont le nom et le système d'exploitation des accélérateurs de clients Web qui ne fonctionnent pas uniquement avec une connexion de type ""Broadband"" ?"
SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' AND T2.compatible_since_year > 1998,Quel est le nom du navigateur qui est devenu compatible avec l'accélérateur 'CProxy' après l'année 1998 ?
"SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count(*) >= 2",Quels sont les identifiants et les noms des accélérateurs Web compatibles avec deux navigateurs ou plus ?
"SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom du navigateur compatible avec la plupart des accélérateurs Web ?
SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id WHERE T3.name = 'CACHEbox' AND T2.name = 'Internet Explorer',Depuis quand l'accélérateur web 'CACHEbox' et le navigateur 'Internet Explorer' sont-ils devenus compatibles ?
SELECT count(DISTINCT client) FROM web_client_accelerator,Combien de types de clients différents sont pris en charge par les accélérateurs de clients Web ?
SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );,Combien d'accélérateurs ne sont pas compatibles avec les navigateurs listés ?
SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share > 15;,Quels noms d'accélérateurs distincts sont compatibles avec les navigateurs dont la part de marché est supérieure à 15 ?
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox',Listez les noms de navigateurs compatibles avec 'CACHEbox' et 'Fasterfox'.
"SELECT name , operating_system FROM web_client_accelerator EXCEPT SELECT T1.name , T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.name = 'Opera'","Affichez les noms des accélérateurs et les systèmes d'exploitation pris en charge qui ne sont pas compatibles avec le navigateur nommé ""Opera""."
"SELECT name FROM web_client_accelerator WHERE name LIKE ""%Opera%""","Quel nom d'accélérateur contient la sous-chaîne ""Opera"" ?"
"SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system",Trouvez le nombre d'accélérateurs Web utilisés pour chaque système d'exploitation.
"SELECT T2.name , T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id ORDER BY T1.compatible_since_year DESC",donnez-moi les noms de tous les navigateurs et accélérateurs compatibles dans l'ordre décroissant de l'année compatible
SELECT count(*) FROM wrestler,Combien y a-t-il de lutteurs ?
SELECT count(*) FROM wrestler,Comptez le nombre de lutteurs.
SELECT Name FROM wrestler ORDER BY Days_held DESC,Énumérez les noms des lutteurs par ordre décroissant des jours détenus.
SELECT Name FROM wrestler ORDER BY Days_held DESC,"Quels sont les noms des lutteurs, classés par ordre décroissant de jours tenus ?"
SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1,Comment s'appelle le lutteur avec le moins de jours détenus ?
SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1,Renvoie le nom du lutteur qui a eu le moins de jours détenus.
"SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""","Quels sont les règnes distincts des lutteurs dont le lieu n'est pas ""Tokyo, Japon"" ?"
"SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""","Donnez les différents règnes des lutteurs qui ne se trouvent pas à Tokyo, au Japon."
"SELECT Name , LOCATION FROM wrestler",Quels sont les noms et l'emplacement des lutteurs?
"SELECT Name , LOCATION FROM wrestler",Donnez les noms et lieux de tous les lutteurs.
"SELECT Elimination_Move FROM Elimination WHERE Team = ""Team Orton""","Quels sont les mouvements d'élimination des lutteurs dont l'équipe est ""Team Orton"" ?"
"SELECT Elimination_Move FROM Elimination WHERE Team = ""Team Orton""",Restituez les films d'élimination des catcheurs de la Team Orton.
"SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",Quels sont les noms des lutteurs et les mouvements d'élimination ?
"SELECT T2.Name , T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",Donnez les noms des lutteurs et leurs mouvements d'élimination.
"SELECT T2.Name , T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC",Dressez la liste des noms des lutteurs et des équipes en élimination par ordre décroissant de jours tenus.
"SELECT T2.Name , T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC","Quels sont les noms des lutteurs et de leurs équipes en élimination, classés par ordre décroissant de jours détenus ?"
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1,Indiquez le temps d'élimination des lutteurs avec les plus grandes journées tenues.
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1,Quel est le temps d'élimination du lutteur avec le plus de journées tenues ?
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50,Afficher les temps d'élimination des lutteurs avec des journées tenues de plus de 50.
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50,Quels sont les délais d'élimination pour les lutteurs ayant plus de 50 jours de détention ?
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team",Montrez différentes équipes en éliminations et le nombre d'éliminations de chaque équipe.
"SELECT Team , COUNT(*) FROM elimination GROUP BY Team",Combien d'éliminations chaque équipe a-t-elle eu ?
SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*) > 3,Afficher les équipes qui ont subi plus de trois éliminations.
SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*) > 3,Quelles équipes ont eu plus de 3 éliminations ?
"SELECT Reign , Days_held FROM wrestler",Montrez le règne et les jours tenus des lutteurs.
"SELECT Reign , Days_held FROM wrestler",Quels sont les règnes et les jours de tous les lutteurs ?
SELECT Name FROM wrestler WHERE Days_held < 100,Comment s'appellent les lutteurs qui ont moins de 100 jours ?
SELECT Name FROM wrestler WHERE Days_held < 100,Renvoie les noms des lutteurs avec moins de 100 jours de détention.
SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1,Veuillez montrer les règnes les plus courants des lutteurs.
SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1,Quel règne est le plus courant chez les lutteurs ?
SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*) > 2,Énumérez les lieux partagés par plus de deux lutteurs.
SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*) > 2,Quels lieux sont partagés par plus de deux lutteurs ?
SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination),Énumérez les noms des lutteurs qui n'ont pas été éliminés.
SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination),Comment s'appellent les lutteurs qui n'ont jamais été éliminés ?
"SELECT Team FROM Elimination WHERE Eliminated_By = ""Orton"" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By = ""Benjamin""","Montrez les équipes qui ont à la fois des lutteurs éliminés par ""Orton"" et des lutteurs éliminés par ""Benjamin""."
"SELECT Team FROM Elimination WHERE Eliminated_By = ""Orton"" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By = ""Benjamin""",Quelles sont les équipes qui ont à la fois des lutteurs éliminés par Orton et des lutteurs éliminés par Benjamin ?
SELECT COUNT (DISTINCT team) FROM elimination,Quel est le nombre d'équipes distinctes qui subissent l'élimination ?
SELECT COUNT (DISTINCT team) FROM elimination,Combien d'équipes différentes ont eu des lutteurs éliminés ?
"SELECT TIME FROM elimination WHERE Eliminated_By = ""Punk"" OR Eliminated_By = ""Orton""","Afficher les temps d'élimination par ""Punk"" ou ""Orton""."
"SELECT TIME FROM elimination WHERE Eliminated_By = ""Punk"" OR Eliminated_By = ""Orton""",Quels sont les temps d'élimination pour les cas où l'élimination a été effectuée par Punk ou Orton ?
SELECT count(*) FROM school,Combien y a-t-il d'écoles ?
SELECT count(*) FROM school,Compter le nombre d'écoles.
SELECT count(*) FROM school,Combien y a-t-il d'écoles ?
SELECT count(*) FROM school,Compter le nombre d'écoles.
SELECT school_name FROM school ORDER BY school_name,Afficher tous les noms d'écoles par ordre alphabétique.
"SELECT school_name , LOCATION , mascot FROM school","Indiquez le nom, l'emplacement, la mascotte de toutes les écoles."
"SELECT sum(enrollment) , avg(enrollment) FROM school",Quels sont les effectifs totaux et moyens de toutes les écoles ?
SELECT mascot FROM school WHERE enrollment > (SELECT avg(enrollment) FROM school),Quelles sont les mascottes des écoles dont les effectifs sont supérieurs à la moyenne ?
SELECT school_name FROM school ORDER BY enrollment LIMIT 1,Indiquez le nom de l'école avec le plus petit nombre d'inscriptions.
"SELECT avg(enrollment) , max(enrollment) , min(enrollment) FROM school","Affichez les inscriptions moyennes, maximales et minimales de toutes les écoles."
"SELECT county , count(*) , sum(enrollment) FROM school GROUP BY county",Indiquez chaque comté avec le nombre d'écoles et le nombre total d'inscriptions dans chaque comté.
"SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = ""Glenn""","Combien de donateurs ont une dotation pour l'école nommée ""Glenn"" ?"
"SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",Indiquez le nom de chaque donateur et le montant de la dotation par ordre décroissant du montant de la dotation.
SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment),Énumérez les noms des écoles sans aucune dotation.
SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount) <= 10,Énumérez tous les noms d'écoles dont le montant de la dotation est inférieur ou égal à 10.
SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Triton',"Montrez les noms des donateurs qui ont fait un don à la fois à l'école ""Glenn"" et ""Triton""."
SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount < 9,Indiquez les noms de tous les donateurs sauf ceux dont le montant du don est inférieur à 9.
"SELECT amount , donator_name FROM endowment ORDER BY amount DESC LIMIT 1",Indiquez le montant et le nom du donateur pour le montant le plus élevé du don.
SELECT count(*) FROM budget WHERE budgeted > 3000 AND YEAR <= 2001,Combien de budgets sont supérieurs à 3000 en 2001 ou avant ?
SELECT count(*) FROM budget WHERE budgeted > 3000 AND YEAR <= 2001,Compter le nombre de budgets de l'année 2001 ou avant dont le montant budgétisé est supérieur à 3000
"SELECT T2.school_name , T1.budgeted , T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.year >= 2002","Indiquez le nom de chaque école, son montant budgété et le montant investi en 2002 ou après."
SELECT DISTINCT donator_name FROM endowment,Afficher tous les noms de donateurs.
SELECT count(*) FROM budget WHERE budgeted < invested,Combien d'enregistrements budgétaires ont un montant budgétaire inférieur au montant investi ?
SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn',"Quel est le montant total du budget de l'école ""Glenn"" pour toutes les années ?"
SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN endowment AS T3 ON T2.school_id = T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted) > 100 OR sum(T3.amount) > 10,Afficher les noms des écoles avec un budget total supérieur à 100 ou une dotation totale supérieure à 10.
SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.amount > 8.5 GROUP BY T1.school_id HAVING count(*) > 1,"Trouvez les noms des écoles qui ont plus d'un donateur avec un montant de don supérieur à 8,5."
SELECT count(*) FROM (SELECT * FROM endowment WHERE amount > 8.5 GROUP BY school_id HAVING count(*) > 1),"Trouvez le nombre d'écoles qui ont plus d'un donateur dont le montant du don est inférieur à 8,5."
"SELECT T1.School_name , T1.Mascot , T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id = T2.school_id WHERE Budgeted > 6000 OR YEAR < 2003 ORDER BY T2.total_budget_percent_invested , T2.total_budget_percent_budgeted","Indiquez le nom, la classe de football IHSAA et la mascotte des écoles qui ont plus de 6000 du montant budgété ou ont été fondées avant 2003, dans l'ordre du pourcentage du budget total investi et du budget total budgétisé."
SELECT count(*) FROM building,Combien y a-t-il de bâtiments ?
"SELECT name , street_address , floors FROM building ORDER BY floors","Affichez le nom, l'adresse et le nombre d'étages de tous les bâtiments classés par nombre d'étages."
SELECT name FROM building ORDER BY height_feet DESC LIMIT 1,Comment s'appelle le bâtiment le plus haut ?
"SELECT avg(floors) , max(floors) , min(floors) FROM building","Quel est le nombre moyen, maximum et minimum d'étages pour tous les bâtiments ?"
SELECT count(*) FROM building WHERE height_feet > (SELECT avg(height_feet) FROM building) OR floors > (SELECT avg(floors) FROM building),Indiquez le nombre de bâtiments avec une hauteur au-dessus de la moyenne ou un nombre d'étages au-dessus de la moyenne.
SELECT name FROM building WHERE height_feet >= 200 AND floors >= 20,Énumérez les noms des bâtiments d'au moins 200 pieds de hauteur et d'au moins 20 étages.
"SELECT institution , LOCATION FROM institution WHERE founded > 1990 AND TYPE = 'Private'","Afficher les noms et les emplacements des institutions fondées après 1990 et ayant le type ""Privé""."
"SELECT TYPE , count(*) , sum(enrollment) FROM institution GROUP BY TYPE","Afficher les types d'établissements, ainsi que le nombre d'établissements et le nombre total d'inscriptions pour chaque type."
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1,Afficher le type d'établissement avec le plus grand nombre d'établissements.
SELECT TYPE FROM institution WHERE founded > 1990 AND enrollment >= 1000,Indiquez le type d'établissement avec un établissement fondé après 1990 et un établissement avec au moins 1000 inscriptions.
SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution),Afficher le nom des bâtiments qui n'ont pas d'institution.
SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded = 2003,Indiquez les noms des bâtiments sauf ceux ayant une institution fondée en 2003.
"SELECT T1.name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id","Pour chaque bâtiment, indiquez le nom du bâtiment et le nombre d'établissements qui s'y trouvent."
"SELECT T1.name , T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 GROUP BY T1.building_id HAVING count(*) >= 2",Indiquez les noms et les hauteurs des bâtiments avec au moins deux institutions fondées après 1880.
SELECT DISTINCT TYPE FROM institution,Afficher tous les types d'établissement distincts.
"SELECT T1.institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",Afficher les noms des institutions ainsi que le nombre de protéines pour chaque institution.
SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id WHERE T1.founded > 1880 OR T1.type = 'Private',"Combien de protéines sont associées à une institution fondée après 1880 ou à une institution de type ""Privé"" ?"
"SELECT T2.protein_name , T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id",Montrez le nom de la protéine et le nom de l'institution.
SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id JOIN building AS T3 ON T3.building_id = T1.building_id WHERE T3.floors >= 20,Combien de protéines sont associées à une institution dans un bâtiment d'au moins 20 étages ?
SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein),Combien d'institutions n'ont pas de protéine associée dans notre dossier ?
SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity > 800,Afficher tous les lieux où aucun cinéma n'a une capacité supérieure à 800.
SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011,Afficher tous les emplacements où certains cinémas ont été ouverts en 2010 et en 2011.
SELECT count(*) FROM cinema,Combien de cinéma avons-nous ?
SELECT count(*) FROM cinema,Comptez le nombre de cinémas.
"SELECT name , openning_year , capacity FROM cinema","Afficher le nom, l'année d'ouverture et la capacité de chaque cinéma."
"SELECT name , LOCATION FROM cinema WHERE capacity > (SELECT avg(capacity) FROM cinema)",Afficher le nom et l'emplacement du cinéma pour les cinémas dont la capacité est supérieure à la moyenne.
SELECT DISTINCT LOCATION FROM cinema,Quels sont tous les emplacements avec un cinéma ?
SELECT DISTINCT LOCATION FROM cinema,Trouvez les emplacements distincts qui ont un cinéma.
"SELECT name , openning_year FROM cinema ORDER BY openning_year DESC",Afficher tous les noms de cinéma et les années d'ouverture dans l'ordre décroissant de l'année d'ouverture.
"SELECT name , LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",Quels sont le nom et l'emplacement du cinéma avec la plus grande capacité ?
"SELECT avg(capacity) , min(capacity) , max(capacity) FROM cinema WHERE openning_year >= 2011","Affichez la capacité moyenne, minimale et maximale de tous les cinémas ouverts en 2011 ou après."
"SELECT LOCATION , count(*) FROM cinema GROUP BY LOCATION",Indiquez chaque emplacement et le nombre de cinémas qui s'y trouvent.
SELECT LOCATION FROM cinema WHERE openning_year >= 2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1,Quel est l'endroit avec le plus de cinémas ouverts en 2010 ou plus tard ?
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count(*) >= 2,Afficher tous les emplacements avec au moins deux cinémas d'une capacité supérieure à 300.
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count(*) >= 2,Quels emplacements ont 2 cinémas ou plus avec une capacité supérieure à 300 ?
"SELECT title , directed_by FROM film",Afficher le titre et le réalisateur de tous les films.
"SELECT title , directed_by FROM film",Quels sont le titre et le réalisateur de chaque film ?
SELECT DISTINCT directed_by FROM film,Afficher tous les réalisateurs.
SELECT DISTINCT directed_by FROM film,Qui sont tous les réalisateurs ?
"SELECT directed_by , count(*) FROM film GROUP BY directed_by",Énumérez tous les réalisateurs ainsi que le nombre de films réalisés par chaque réalisateur.
"SELECT T2.name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",Quel est le nombre total de séances par jour pour chaque cinéma ?
"SELECT T2.title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",Quels sont le titre et le prix maximum de chaque film ?
"SELECT T2.title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",Donnez-moi le titre et le prix le plus élevé pour chaque film.
"SELECT T3.name , T2.title , T1.date , T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id","Afficher le nom du cinéma, le titre du film, la date et le prix de chaque enregistrement dans le calendrier."
"SELECT title , directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)",Quels sont le titre et le réalisateur des films sans calendrier ?
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1,Directeur de spectacle avec le plus grand nombre d'heures de spectacle au total.
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count(*) > 1,Trouvez les emplacements qui ont plus d'une salle de cinéma avec une capacité supérieure à 300.
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count(*) > 1,Dans quels endroits y a-t-il plus d'un cinéma avec une capacité supérieure à 300 ?
"SELECT count(*) FROM film WHERE title LIKE ""%Dummy%""","Combien de films ont le mot ""Dummy"" dans leurs titres ?"
"SELECT count(*) FROM film WHERE title LIKE ""%Dummy%""",Comptez le nombre de films dont le titre contient le mot 'Dummy'.
SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500,Les clients détiennent-ils des coupons d'un montant de 500 bons ou mauvais ?
"SELECT T1.customer_id , T1.first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id","Combien de réservations chaque client a-t-il effectuées ? Indiquez l'identifiant du client, le prénom et le nombre."
"SELECT customer_id , sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1",Quel est le montant total maximum payé par un client ? Indiquez l'identifiant client et le montant.
"SELECT T1.booking_id , T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1",Quels sont l'identifiant et le montant du remboursement de la réservation qui a entraîné le plus de paiements ?
SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*) = 3,Quel est l'identifiant du produit réservé 3 fois ?
SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.booked_amount = 102.76,"Quelle est la description du produit réservé avec un montant de 102,76 ?"
"SELECT T3.booking_start_date , T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id = T2.product_id JOIN bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.product_name = 'Book collection A'","Quelles sont la date de début et la date de fin de la réservation qui a réservé le produit nommé ""Collection de livres A"" ?"
SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.available_yn = 1,Quels sont les noms des produits dont la disponibilité est égale à 1 ?
SELECT count(DISTINCT product_type_code) FROM products_for_hire,Combien y a-t-il de types de produits différents ?
"SELECT first_name , last_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY last_name","Quels sont le prénom, le nom et le sexe de tous les bons clients ? Commandez par leur nom de famille."
SELECT avg(amount_due) FROM payments,Quel est le montant moyen dû pour tous les paiements ?
"SELECT max(booked_count) , min(booked_count) , avg(booked_count) FROM products_booked","Quels sont le nombre maximum, minimum et moyen réservé pour les produits réservés ?"
SELECT DISTINCT payment_type_code FROM payments,Quels sont tous les types de paiement distincts ?
SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%',"Quels sont les frais de location journaliers pour les produits dont le nom contient la sous-chaîne ""Book"" ?"
SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount > 200 ),Combien de produits ne sont jamais réservés avec un montant supérieur à 200 ?
SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad',Quel est le montant des coupons détenus par les bons et les mauvais clients ?
SELECT payment_date FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check',Quelle est la date de paiement du paiement dont le montant est supérieur à 300 ou dont le type de paiement est 'Chèque'
"SELECT product_name , product_description FROM products_for_hire WHERE product_type_code = 'Cutlery' AND daily_hire_cost < 20",Quels sont les noms et descriptions des produits de type 'Couverts' et dont le coût journalier de location est inférieur à 20 ?
SELECT count(*) FROM phone,Combien y a-t-il de téléphones ?
SELECT Name FROM phone ORDER BY Price ASC,Listez les noms des téléphones par ordre croissant de prix.
"SELECT Memory_in_G , Carrier FROM phone",Quels sont les souvenirs et les porteurs de téléphones ?
SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G > 32,Énumérez les différents opérateurs de téléphones avec des mémoires supérieures à 32.
"SELECT Name FROM phone WHERE Carrier = ""Sprint"" OR Carrier = ""TMobile""","Affichez les noms des téléphones avec l'opérateur ""Sprint"" ou ""TMobile""."
SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1,Quel est l'opérateur du téléphone le plus cher ?
"SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier",Affichez les différents opérateurs de téléphones avec le nombre de téléphones avec chaque opérateur.
SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1,Afficher le transporteur le plus fréquemment utilisé des téléphones.
SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64,Affichez les opérateurs qui ont à la fois des téléphones avec une mémoire inférieure à 32 et des téléphones avec une mémoire supérieure à 64.
"SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID",Montrez les noms des téléphones et les quartiers des marchés où ils se trouvent.
"SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID ORDER BY T2.Ranking","Afficher les noms des téléphones et les quartiers des marchés sur lesquels ils se trouvent, par ordre croissant du classement du marché."
SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID WHERE T2.Num_of_shops > 50,Afficher les noms des téléphones qui sont sur le marché avec un nombre de magasins supérieur à 50.
"SELECT T2.Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name","Pour chaque téléphone, indiquez ses noms et le nombre total de stocks."
SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock) >= 2000 ORDER BY sum(T1.Num_of_stock) DESC,"Affichez les noms des téléphones dont le nombre total de stocks est supérieur à 2 000, par ordre décroissant du nombre total de stocks."
SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market),Dressez la liste des noms de téléphones qui ne sont sur aucun marché.
SELECT count(*) FROM company,Combien y a-t-il de compagnies gazières ?
SELECT count(*) FROM company,Quel est le nombre total d'entreprises ?
"SELECT company , rank FROM company ORDER BY Sales_billion DESC",Indiquez le nom et le rang de l'entreprise pour toutes les entreprises dans l'ordre décroissant de leurs ventes.
"SELECT company , rank FROM company ORDER BY Sales_billion DESC",Quel est le nom et le rang de chaque entreprise classée par nombre décroissant de ventes ?
"SELECT company , main_industry FROM company WHERE headquarters != 'USA'",Affichez le nom de l'entreprise et l'industrie principale pour toutes les entreprises dont le siège social n'est pas aux États-Unis.
"SELECT company , main_industry FROM company WHERE headquarters != 'USA'",Quelles sont les entreprises et les principales industries de toutes les entreprises qui n'ont pas leur siège social aux États-Unis ?
"SELECT company , headquarters FROM company ORDER BY market_value DESC",Afficher tous les noms et sièges sociaux de l'entreprise dans l'ordre décroissant de la valeur marchande.
"SELECT company , headquarters FROM company ORDER BY market_value DESC",Quels sont les noms et les sièges sociaux de toutes les entreprises classées par valeur marchande décroissante ?
"SELECT min(market_value) , max(market_value) , avg(market_value) FROM company","Afficher la valeur marchande minimale, maximale et moyenne pour toutes les entreprises."
"SELECT min(market_value) , max(market_value) , avg(market_value) FROM company","Quelle est la valeur marchande minimale, maximale et moyenne de chaque entreprise ?"
SELECT DISTINCT main_industry FROM company,Afficher toutes les principales industries pour toutes les entreprises.
SELECT DISTINCT main_industry FROM company,Quelles sont les différentes industries principales pour toutes les entreprises ?
"SELECT headquarters , count(*) FROM company GROUP BY headquarters",Énumérez tous les sièges sociaux et le nombre d'entreprises dans chaque siège social.
"SELECT headquarters , count(*) FROM company GROUP BY headquarters","Pour chaque siège social, quel est le siège social et combien d'entreprises y sont implantées ?"
"SELECT headquarters , count(*) FROM company GROUP BY headquarters",Indiquez les différents sièges sociaux et le nombre d'entreprises à chaque siège social.
"SELECT main_industry , sum(market_value) FROM company GROUP BY main_industry",Afficher toutes les principales industries et la valeur marchande totale dans chaque industrie.
"SELECT main_industry , sum(market_value) FROM company GROUP BY main_industry",Quelles sont les principales industries et la valeur marchande totale de chaque industrie ?
"SELECT main_industry , count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",Énumérez la principale industrie ayant la valeur marchande totale la plus élevée et son nombre d'entreprises.
"SELECT main_industry , count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1","Pour chaque industrie principale, quel est le nombre total d'entreprises pour l'industrie ayant la valeur marchande totale la plus élevée ?"
SELECT headquarters FROM company WHERE main_industry = 'Banking' GROUP BY headquarters HAVING count(*) >= 2,Montrer le siège social d'au moins deux entreprises du secteur bancaire.
SELECT headquarters FROM company WHERE main_industry = 'Banking' GROUP BY headquarters HAVING count(*) >= 2,Quels sont les sièges sociaux d'au moins deux sociétés du secteur bancaire ?
"SELECT station_id , LOCATION , manager_name FROM gas_station ORDER BY open_year","Afficher l'identifiant, l'emplacement et le nom du gestionnaire de la station-service pour toutes les stations-service classées par année d'ouverture."
"SELECT station_id , LOCATION , manager_name FROM gas_station ORDER BY open_year","Quels sont les identifiants des stations-service, les emplacements et les noms des gestionnaires des stations-service commandées par année d'ouverture ?"
SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005,Combien de stations service ont été ouvertes entre 2000 et 2005 ?
SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005,Quel est le nombre total de stations-service ouvertes entre 2000 et 2005 ?
"SELECT LOCATION , count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)",Afficher tous les emplacements et le nombre de stations-service dans chaque emplacement classés par le nombre.
"SELECT LOCATION , count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)","Pour chaque emplacement, combien de stations-service y a-t-il dans l'ordre ?"
SELECT headquarters FROM company WHERE main_industry = 'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry = 'Oil and gas',Afficher tous les sièges sociaux avec à la fois une entreprise dans le secteur bancaire et une entreprise dans le secteur pétrolier et gazier.
SELECT headquarters FROM company WHERE main_industry = 'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry = 'Oil and gas',Quels sont les sièges sociaux qui ont à la fois une entreprise dans les secteurs bancaire et « pétrolier et gazier » ?
SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry = 'Banking',Afficher tous les sièges sociaux sans entreprise dans le secteur bancaire.
SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry = 'Banking',Quels sont les sièges sociaux sans les entreprises qui sont dans le secteur bancaire?
"SELECT T2.company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",Afficher le nom de l'entreprise avec le numéro de la station-service.
"SELECT T2.company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id","Pour chaque identifiant d'entreprise, quelles sont les entreprises et combien de stations-service chacune exploite-t-elle ?"
"SELECT company , main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",Afficher le nom de l'entreprise et l'industrie principale sans station-service.
"SELECT company , main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",Quelles sont les principales industries des entreprises sans stations-service et quelles sont les entreprises ?
SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil',Afficher le nom du gestionnaire des stations-service appartenant à la société ExxonMobil.
SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil',Comment s'appellent les gérants des stations-service exploitées par la société ExxonMobil ?
SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100,Afficher tous les emplacements où se trouve une station-service pour une entreprise dont la valeur marchande est supérieure à 100.
SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100,Quels sont les emplacements qui ont des stations-service appartenant à une entreprise dont la valeur marchande est supérieure à 100 ?
SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1,Afficher le nom du gestionnaire avec le plus grand nombre de stations-service ouvertes après 2000.
SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1,Comment s'appelle le gestionnaire qui a ouvert le plus de stations-service après 2000 ?
SELECT LOCATION FROM gas_station ORDER BY open_year,commander tous les emplacements des stations-service d'ici l'année d'ouverture.
SELECT LOCATION FROM gas_station ORDER BY open_year,Quels sont les emplacements de toutes les stations-service classées par année d'ouverture ?
"SELECT rank , company , market_value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion","trouver le rang, les noms des entreprises, les valeurs marchandes des entreprises du secteur bancaire par ordre de chiffre d'affaires et de bénéfices en milliards."
"SELECT rank , company , market_value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion","Quel est le rang, l'entreprise et la valeur marchande de chaque entreprise du secteur bancaire classés par les ventes et les bénéfices ?"
"SELECT T3.location , T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",trouver l'emplacement et le nom du représentant des stations-service appartenant aux entreprises avec les 3 principaux montants d'actifs.
"SELECT T3.location , T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",Quels sont les emplacements et les noms des représentants des stations-service détenues par les sociétés ayant les 3 plus grands actifs ?
SELECT count(*) FROM region,Combien de régions avons-nous?
SELECT count(*) FROM region,Comptez le nombre de régions.
SELECT count(*) FROM region,Combien de régions avons-nous?
SELECT count(*) FROM region,Comptez le nombre de régions.
SELECT DISTINCT region_name FROM region ORDER BY Label,Afficher tous les noms de régions distincts classés par leurs étiquettes.
SELECT DISTINCT region_name FROM region ORDER BY Label,"Quels sont les différents noms de régions, classés par étiquettes ?"
SELECT count(DISTINCT party_name) FROM party,Combien de fêtes avons-nous?
SELECT count(DISTINCT party_name) FROM party,Comptez le nombre de parties différentes.
"SELECT minister , took_office , left_office FROM party ORDER BY left_office","Montrez les ministres et l'heure à laquelle ils ont pris et quitté leurs fonctions, répertoriés selon l'heure à laquelle ils ont quitté leurs fonctions."
"SELECT minister , took_office , left_office FROM party ORDER BY left_office","Qui sont les ministres, quand sont-ils entrés en fonction et quand ont-ils quitté leurs fonctions, classés par date de départ ?"
SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959,Indiquez le ministre qui est entré en fonction après 1961 ou avant 1959.
SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959,Quels sont les ministres qui sont entrés en fonction après 1961 ou avant 1959 ?
SELECT minister FROM party WHERE party_name != 'Progress Party',Afficher tous les ministres qui n'appartiennent pas au Parti du progrès.
SELECT minister FROM party WHERE party_name != 'Progress Party',Quels ministres ne font pas partie du Parti du progrès ?
"SELECT minister , party_name FROM party ORDER BY took_office DESC",Affichez tous les ministres et les partis auxquels ils appartiennent par ordre décroissant du moment où ils ont pris leurs fonctions.
"SELECT minister , party_name FROM party ORDER BY took_office DESC","Qui sont les ministres et à quels partis appartiennent-ils, classés par ordre décroissant d'heure à laquelle ils ont pris leurs fonctions ?"
SELECT minister FROM party ORDER BY left_office DESC LIMIT 1,Renvoyer le ministre qui a quitté ses fonctions au plus tard.
SELECT minister FROM party ORDER BY left_office DESC LIMIT 1,Quel ministre a quitté ses fonctions en dernier ?
"SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",Énumérez les noms des membres et leurs noms de parti.
"SELECT T1.member_name , T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id",Quels sont les noms des membres et leurs partis correspondants ?
"SELECT T2.party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Afficher tous les noms de parti et le nombre de membres dans chaque parti.
"SELECT T2.party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Combien y a-t-il de membres dans chaque parti ?
SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom du parti avec le plus grand nombre de membres ?
SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1,Renvoie le nom du groupe avec le plus de membres.
"SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",Afficher tous les noms de parti et leurs noms de région.
"SELECT T1.party_name , T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id",Quels sont les noms des partis et leurs régions respectives ?
SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member),Afficher les noms des partis qui n'ont pas de membres.
SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member),Comment s'appellent les partis qui n'ont pas de membres ?
SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1,Afficher les noms des membres qui se trouvent à la fois dans le groupe avec l'identifiant 3 et dans le groupe avec l'identifiant 1.
SELECT member_name FROM member WHERE party_id = 3 INTERSECT SELECT member_name FROM member WHERE party_id = 1,Quels noms de membres sont partagés entre les membres du groupe avec l'identifiant 3 et le groupe avec l'identifiant 1 ?
"SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != ""Progress Party""",Afficher les noms des membres qui ne sont pas dans la Progress Party.
"SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name != ""Progress Party""",Quels noms de membres correspondant aux membres qui ne sont pas dans le Parti du progrès ?
SELECT count(*) FROM party_events,Combien d'événements de fête avons-nous ?
SELECT count(*) FROM party_events,Comptez le nombre d'événements de fête.
"SELECT T2.party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Afficher les noms des parties et le nombre d'événements pour chaque partie.
"SELECT T2.party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",Combien d'événements y a-t-il pour chaque fête ?
SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id,Afficher tous les noms de membres qui ne sont responsables d'aucun événement.
SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id,Quels sont les noms des membres qui ne sont en charge d'aucun événement ?
SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count(*) >= 2,Comment s'appellent les soirées avec au moins 2 événements ?
SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count(*) >= 2,Renvoie les noms des parties qui ont deux événements ou plus.
SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom du membre en charge du plus grand nombre d'événements ?
SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1,Renvoie le nom du membre qui est en charge du plus d'événements.
SELECT event_name FROM party_events GROUP BY event_name HAVING count(*) > 2,trouver les noms d'événements qui ont plus de 2 enregistrements.
SELECT event_name FROM party_events GROUP BY event_name HAVING count(*) > 2,Quels noms d'événement ont été utilisés plus de deux fois pour des événements de fête ?
"SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id = t2.region_id JOIN party_events AS t3 ON t2.party_id = t3.party_id WHERE t1.region_name = ""United Kingdom"" AND t3.Event_Name = ""Annaual Meeting""",Combien d'événements de réunion annuelle ont eu lieu dans la région du Royaume-Uni ?
"SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id = t2.region_id JOIN party_events AS t3 ON t2.party_id = t3.party_id WHERE t1.region_name = ""United Kingdom"" AND t3.Event_Name = ""Annaual Meeting""",Comptez le nombre d'événements de réunion annuelle qui ont eu lieu dans la région du Royaume-Uni.
SELECT count(*) FROM pilot,Combien y a-t-il de pilotes ?
SELECT Pilot_name FROM pilot ORDER BY Rank ASC,Énumérez les noms des pilotes par ordre croissant de rang.
"SELECT POSITION , Team FROM pilot",Quels sont les postes et les équipes de pilotes ?
SELECT DISTINCT POSITION FROM pilot WHERE Age > 30,Dressez la liste des postes distincts des pilotes de plus de 30 ans.
"SELECT Pilot_name FROM pilot WHERE Team = ""Bradley"" OR Team = ""Fordham""","Afficher les noms des pilotes de l'équipe ""Bradley"" ou ""Fordham""."
SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1,Quelle est l'année d'adhésion du pilote le plus haut gradé ?
"SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality",Quelles sont les différentes nationalités des pilotes ? Indiquez chaque nationalité et le nombre de pilotes de chaque nationalité.
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,Afficher la nationalité la plus courante des pilotes.
SELECT POSITION FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year > 2005,Montrez les postes de pilotes qui ont à la fois des pilotes qui ont rejoint après l'année 2005 et des pilotes qui ont rejoint avant 2000.
"SELECT T3.Pilot_name , T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID",Montrez les noms des pilotes et les modèles d'avions avec lesquels ils ont volé.
"SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank",Indiquez les noms des pilotes et les séries de flotte des aéronefs avec lesquels ils ont volé dans l'ordre croissant du rang du pilote.
SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34,Afficher la série de la flotte des avions pilotés par des pilotes de moins de 34 ans
"SELECT T2.Pilot_name , COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",Montrez les noms des pilotes et le nombre d'enregistrements qu'ils ont.
"SELECT T2.Pilot_name , COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*) > 1",Afficher les noms des pilotes qui ont plus d'un enregistrement.
SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record),Énumérez les noms des pilotes qui n'ont aucun dossier.
SELECT document_status_code FROM Ref_Document_Status;,Quels codes de statut de document avons-nous ?
"SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = ""working"";","Quelle est la description du code d'état du document ""travail"" ?"
SELECT document_type_code FROM Ref_Document_Types;,Quels codes de type de document avons-nous ?
"SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = ""Paper"";","Quelle est la description du type de document ""Papier"" ?"
SELECT shipping_agent_name FROM Ref_Shipping_Agents;,Quels sont les noms des agents maritimes ?
"SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = ""UPS"";",Quel est le code de l'agent maritime de l'agent maritime UPS ?
SELECT role_code FROM ROLES;,Quels sont tous les codes de rôle ?
"SELECT role_description FROM ROLES WHERE role_code = ""ED"";",Quelle est la description du code de rôle ED ?
SELECT count(*) FROM Employees;,Combien d'employés avons-nous?
SELECT count(*) FROM Employees;,Combien d'employés avons-nous?
SELECT count(*) FROM Employees;,Trouvez le nombre d'employés que nous avons.
"SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = ""Koby"";",Quel est le rôle de l'employé nommé Koby ?
"SELECT document_id , receipt_date FROM Documents;",Répertorier tous les identifiants de documents et les dates de réception des documents.
"SELECT T1.role_description , T2.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;","Combien d'employés chaque rôle compte-t-il ? Indiquez la description du rôle, l'identifiant et le nombre d'employés."
"SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id) > 1;",Répertorier les rôles qui ont plus d'un employé. Indiquez la description du rôle et le nombre d'employés.
SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;,Quelle est la description de l'état du document avec l'ID 1 ?
"SELECT count(*) FROM Documents WHERE document_status_code = ""done"";",Combien de documents le code d'état a-t-il fait ?
SELECT document_type_code FROM Documents WHERE document_id = 2;,Indiquez le code de type de document pour le document avec l'identifiant 2.
"SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"";",Répertoriez les identifiants de document pour tous les documents avec le code d'état terminé et le code de type papier.
SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;,Quel est le nom de l'agent d'expédition du document avec l'identifiant 2 ?
"SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS"";",Combien de documents ont été expédiés par USPS ?
"SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;",Quel agent maritime a expédié le plus de documents ? Indiquez le nom de l'agent maritime et le nombre de documents.
SELECT receipt_date FROM Documents WHERE document_id = 3;,Quelle est la date de réception du document avec l'identifiant 3 ?
SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;,À quelle adresse le document portant l'identifiant 4 a-t-il été envoyé ?
SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;,Quelle est la date d'envoi du document avec l'identifiant 7 ?
"SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS"";","Répertoriez les ID de document des documents avec le statut terminé et tapez Papier, qui n'ont pas été expédiés par l'agent d'expédition nommé USPS."
"SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS"";",L'ID de document de liste du statut des documents est terminé et le type de document est Papier et le document est expédié par un agent d'expédition nommé USPS.
SELECT draft_details FROM Document_Drafts WHERE document_id = 7;,Quel est le détail du brouillon du document avec l'id 7 ?
SELECT count(*) FROM Draft_Copies WHERE document_id = 2;,Combien de brouillons le document avec l'ID 2 a-t-il ?
"SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;",Quel document contient le plus de brouillons ? Indiquez son identifiant de document et le nombre de brouillons.
"SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*) > 1;",Quels documents ont plus d'un brouillon ? Indiquez l'ID du document et le nombre de brouillons.
SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;,Répertorier tous les employés dans l'historique de circulation du document avec l'identifiant 1. Répertorier le nom de l'employé.
SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id,Dressez la liste des employés qui ne se sont présentés dans aucun historique de circulation des documents. Indiquez le nom de l'employé.
"SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;",Quel employé est apparu dans la plupart des documents d'historique de diffusion. Indiquez le nom de l'employé et le nombre de brouillons et de copies.
"SELECT document_id , count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;","Pour chaque document, indiquez le nombre d'employés qui se sont présentés dans l'historique de circulation de ce document. Indiquez les identifiants des documents et le nombre d'employés."
SELECT dname FROM department ORDER BY mgr_start_date,Énumérez tous les noms de département classés par date de début.
SELECT Dependent_name FROM dependent WHERE relationship = 'Spouse',trouver tous les noms dépendants qui ont une relation de conjoint avec un employé.
SELECT count(*) FROM dependent WHERE sex = 'F',combien y a-t-il de femmes à charge ?
SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber = t2.dnumber WHERE t2.dlocation = 'Houston',Trouvez les noms des départements situés à Houston.
"SELECT fname , lname FROM employee WHERE salary > 30000",Renvoie les noms et prénoms des employés qui gagnent plus de 30000 de salaire.
"SELECT count(*) , sex FROM employee WHERE salary < 50000 GROUP BY sex",Trouvez le nombre d'employés de chaque sexe dont le salaire est inférieur à 50000.
"SELECT fname , lname , address FROM employee ORDER BY Bdate","indiquez les noms, prénoms et adresses de tous les employés dans l'ordre croissant de leur date de naissance."
SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage',Quels sont les détails de l'événement des services qui ont le code de type « Mariage » ?
"SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count(*) > 1",Quels sont les identifiants et les détails des événements qui ont plus d'un participant ?
"SELECT T1.Participant_ID , T1.Participant_Type_Code , count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_ID","À combien d'événements chaque participant a-t-il assisté ? Indiquez l'identifiant du participant, le type et le numéro."
"SELECT Participant_ID , Participant_Type_Code , Participant_Details FROM Participants","Quels sont tous les identifiants des participants, le code de type et les détails ?"
SELECT count(*) FROM participants WHERE participant_type_code = 'Organizer',Combien de participants appartiennent au type 'Organisateur' ?
SELECT service_type_code FROM services ORDER BY service_type_code,Dressez la liste des types de services par ordre alphabétique.
"SELECT service_id , event_details FROM EVENTS",Répertoriez l'ID de service et les détails des événements.
SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%',Combien d'événements ont eu des participants dont les détails avaient la sous-chaîne 'Dr.'
SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1,Quel est le type de participant le plus courant ?
"SELECT T3.service_id , T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID = T3.Event_ID JOIN services AS T4 ON T3.service_id = T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1",Quel ID et type de service compte le moins de participants ?
SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1,Quel est l'identifiant de l'événement avec le plus de participants ?
SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Kenyatta Kuhn',Quel identifiant d'événement n'a pas de participant avec le détail 'Kenyatta Kuhn' ?
SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail',Quel type de service comportait à la fois des détails sur les événements de réussite et d'échec ?
SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events),Combien d'événements n'ont eu aucun participant ?
SELECT count(DISTINCT participant_id) FROM participants_in_Events,Quels sont tous les identifiants distincts des participants qui ont assisté à des événements ?
SELECT name FROM races ORDER BY date DESC LIMIT 1,Comment s'appelle la dernière course organisée ?
SELECT name FROM races ORDER BY date DESC LIMIT 1,Quel est le nom de la course qui s'est produite le plus récemment ?
"SELECT name , date FROM races ORDER BY date DESC LIMIT 1",Quel est le nom et la date de la course la plus récente ?
"SELECT name , date FROM races ORDER BY date DESC LIMIT 1",Quels sont le nom et la date de la course qui s'est déroulée le plus récemment ?
SELECT name FROM races WHERE YEAR = 2017,Retrouvez les noms de toutes les courses organisées en 2017.
SELECT name FROM races WHERE YEAR = 2017,Quels sont les noms de toutes les courses qui ont eu lieu en 2017 ?
SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017,Trouver les noms distincts de toutes les courses organisées entre 2014 et 2017 ?
SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017,Quels sont les noms uniques de toutes les courses organisées entre 2014 et 2017 ?
"SELECT DISTINCT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000",Indiquez le prénom et le nom de tous les pilotes distincts qui ont déjà eu un temps au tour inférieur à 93 000 millisecondes ?
"SELECT DISTINCT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000",Quels sont les prénoms et noms de tous les pilotes uniques qui ont réalisé un temps au tour inférieur à 93 000 millisecondes ?
"SELECT DISTINCT T1.driverid , T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds > 100000",Trouver tous les identifiants distincts et la nationalité des pilotes qui ont eu un temps au tour supérieur à 100 000 millisecondes ?
"SELECT DISTINCT T1.driverid , T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds > 100000",Quels sont les différents identifiants de pilote et nationalités de tous les pilotes qui ont eu un temps au tour de plus de 100 000 millisecondes ?
"SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1",Quels sont le prénom et le nom du pilote qui a le plus petit temps au tour ?
"SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1",Quels sont le prénom et le nom du pilote avec le temps le plus court ?
"SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",Quel est l'identifiant et le nom de famille du pilote qui a le temps au tour le plus long ?
"SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",Quel est l'identifiant et le nom du pilote avec le temps au tour le plus long ?
"SELECT T1.driverid , T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION = '1' GROUP BY T1.driverid HAVING count(*) >= 2","Quel est l'id, le prénom et le nom du pilote qui a eu la première position en termes de temps au tour au moins deux fois ?"
"SELECT T1.driverid , T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION = '1' GROUP BY T1.driverid HAVING count(*) >= 2","Quels sont l'identifiant, le prénom et le nom du pilote qui a été en première position pour le temps au tour au moins deux fois ?"
"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = ""Australian Grand Prix"" AND YEAR = 2009",Combien de pilotes ont participé à la course du Grand Prix d'Australie organisée en 2009 ?
"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = ""Australian Grand Prix"" AND YEAR = 2009",Combien de pilotes étaient présents au Grand Prix d'Australie organisé en 2009 ?
SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 ),Combien de pilotes n'ont pas participé aux courses disputées en 2009 ?
SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 ),Combien de pilotes n'ont pas couru en 2009 ?
"SELECT T2.name , T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""",Donnez-moi une liste de noms et d'années de courses qui ont eu un pilote dont le prénom est Lewis ?
"SELECT T2.name , T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""",Quels sont les noms et les années de toutes les courses qui ont eu un pilote avec le nom de famille Lewis ?
"SELECT forename , surname FROM drivers WHERE nationality = ""German""",Trouver le prénom et le nom des chauffeurs de nationalité allemande ?
"SELECT forename , surname FROM drivers WHERE nationality = ""German""",Quel est le prénom et le nom de tous les pilotes allemands ?
"SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Australian Grand Prix"" INTERSECT SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Chinese Grand Prix""",Trouver les identifiants et prénoms des pilotes ayant participé à la fois aux courses portant le nom de Grand Prix d'Australie et aux courses portant le nom de Grand Prix de Chine ?
"SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Australian Grand Prix"" INTERSECT SELECT T2.driverid , T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Chinese Grand Prix""",Quel est l'identifiant et le prénom de tous les pilotes qui ont participé au Grand Prix d'Australie et au Grand Prix de Chine ?
"SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Australian Grand Prix"" EXCEPT SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Chinese Grand Prix""",Quels sont les prénoms et noms des pilotes ayant participé aux courses dites Grand Prix d'Australie mais pas aux courses dites Grand Prix de Chine ?
"SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Australian Grand Prix"" EXCEPT SELECT T3.forename , T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Chinese Grand Prix""",Quels sont les noms et prénoms de tous les pilotes qui ont participé au Grand Prix d'Australie mais pas au Grand Prix de Chine ?
SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1,Retrouver tous les prénoms des pilotes distincts qui étaient en position 1 comme debout et qui ont gagné ?
SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1,Quels sont tous les différents prénoms des pilotes qui sont en position debout et qui ont gagné ?
SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20,Retrouver tous les prénoms des pilotes distincts ayant gagné en position 1 en tant que pilote debout et ayant plus de 20 points ?
SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20,Quels sont les prénoms des différents pilotes qui se sont imposés en position 1 en tant que pilote debout et qui avaient plus de 20 points ?
"SELECT count(*) , nationality FROM constructors GROUP BY nationality",Quels sont les nombres de constructeurs pour les différentes nationalités ?
"SELECT count(*) , nationality FROM constructors GROUP BY nationality","Pour chaque nationalité, combien y a-t-il de constructeurs différents ?"
"SELECT count(*) , constructorid FROM constructorStandings GROUP BY constructorid",Quel est le nombre de courses pour chaque identifiant de constructeur ?
"SELECT count(*) , constructorid FROM constructorStandings GROUP BY constructorid","Pour chaque identifiant de constructeur, combien y a-t-il de courses ?"
"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2017",Quels sont les noms des courses qui ont eu lieu après 2017 et les circuits étaient dans le pays d'Espagne ?
"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2017",Quels sont les noms des courses organisées après 2017 en Espagne ?
"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2000",Quels sont les noms uniques des courses qui ont eu lieu après 2000 et les circuits étaient en Espagne ?
"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2000",Quels sont les noms de toutes les courses organisées après 2000 en Espagne ?
"SELECT DISTINCT driverid , STOP FROM pitstops WHERE duration < (SELECT max(duration) FROM pitstops WHERE raceid = 841)",Trouvez l'identifiant distinct du pilote et le numéro d'arrêt de tous les pilotes qui ont une durée d'arrêt au stand plus courte que certains pilotes de la course avec l'identifiant 841.
"SELECT DISTINCT driverid , STOP FROM pitstops WHERE duration < (SELECT max(duration) FROM pitstops WHERE raceid = 841)",Quel est l'identifiant et le numéro d'arrêt pour chaque pilote qui a un arrêt au stand plus court que le pilote de la course avec l'identifiant 841 ?
"SELECT DISTINCT driverid , STOP FROM pitstops WHERE duration > (SELECT min(duration) FROM pitstops WHERE raceid = 841)",Trouver l'identifiant de pilote distinct de tous les pilotes qui ont une durée d'arrêt plus longue que certains pilotes de la course dont l'identifiant est 841 ?
"SELECT DISTINCT driverid , STOP FROM pitstops WHERE duration > (SELECT min(duration) FROM pitstops WHERE raceid = 841)",Quels sont les différents identifiants et durées d'arrêt de tous les pilotes dont l'arrêt a duré plus longtemps que le pilote en course avec l'identifiant 841 ?
SELECT DISTINCT forename FROM drivers ORDER BY forename ASC,Lister les prénoms de tous les conducteurs distincts par ordre alphabétique ?
SELECT DISTINCT forename FROM drivers ORDER BY forename ASC,Quels sont les prénoms de tous les différents pilotes par ordre alphabétique ?
SELECT DISTINCT name FROM races ORDER BY name DESC,Lister les noms de toutes les races distinctes dans l'ordre lexicographique inversé ?
SELECT DISTINCT name FROM races ORDER BY name DESC,Quels sont les différents noms de toutes les races dans l'ordre alphabétique inverse ?
SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011,Quels sont les noms des courses organisées entre 2009 et 2011 ?
SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011,Quels sont les noms de toutes les courses organisées entre 2009 et 2011 ?
"SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""",Quels sont les noms des courses organisées après 12:00:00 ou avant 09:00:00 ?
"SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""",Quels sont les noms de toutes les courses qui ont eu lieu après 12:00:00 ou avant 09:00:00 ?
"SELECT T1.forename , T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 8 UNION SELECT T1.forename , T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5","Quels sont les noms, prénoms et identifiants des pilotes qui ont effectué plus de 8 arrêts aux stands ou participé à plus de 5 résultats de course ?"
"SELECT T1.forename , T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 8 UNION SELECT T1.forename , T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5","Quels sont les prénoms, noms et identifiants des pilotes pour tous ceux qui ont fait plus de 8 arrêts ou participé à plus de 5 courses ?"
"SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) = 11 INTERSECT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5",Quels sont les noms de famille et les identifiants des pilotes qui ont effectué 11 arrêts aux stands et participé à plus de 5 résultats de course ?
"SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) = 11 INTERSECT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5",Quels sont les noms de famille et identifiants de tous les pilotes qui ont effectué 11 arrêts aux stands et participé à plus de 5 courses ?
"SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom du pilote qui a participé au plus de courses après 2010 ?
"SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom du pilote qui a participé au plus de courses après 2010 ?
"SELECT name FROM circuits WHERE country = ""UK"" OR country = ""Malaysia""",Quels sont les noms des circuits qui appartiennent au Royaume-Uni ou à la Malaisie ?
"SELECT name FROM circuits WHERE country = ""UK"" OR country = ""Malaysia""",Quels sont les noms de tous les circuits qui se trouvent au Royaume-Uni ou en Malaisie ?
"SELECT circuitid , LOCATION FROM circuits WHERE country = ""France"" OR country = ""Belgium""",Trouver l'identifiant et la localisation des circuits qui appartiennent à la France ou à la Belgique ?
"SELECT circuitid , LOCATION FROM circuits WHERE country = ""France"" OR country = ""Belgium""",Quels sont les identifiants et emplacements de tous les circuits en France ou en Belgique ?
"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5",Trouver les noms des constructeurs japonais qui ont une fois gagné plus de 5 points ?
"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5",Quels sont les noms de tous les constructeurs japonais qui ont gagné plus de 5 points ?
"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""",Quelle est la vitesse moyenne au tour la plus rapide dans la course nommée 'Monaco Grand Prix' en 2008 ?
"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""",Quelle est la vitesse moyenne du tour le plus rapide pour le Grand Prix de Monaco en 2008 ?
"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""",Quelle est la vitesse maximale au tour la plus rapide dans la course nommée 'Monaco Grand Prix' en 2008 ?
"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""",Quelle est la vitesse maximale du tour le plus rapide du Grand Prix de Monaco en 2008 ?
"SELECT max(T2.fastestlapspeed) , T1.name , T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","Quelle est la vitesse maximale au tour la plus rapide dans les courses organisées après 2004, regroupées par nom de course et classées par année ?"
"SELECT max(T2.fastestlapspeed) , T1.name , T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","Pour chaque nom de course, quelle est la vitesse maximale du tour le plus rapide pour les courses après 2004 classées par année ?"
"SELECT avg(T2.fastestlapspeed) , T1.name , T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","Quelle est la vitesse moyenne au tour la plus rapide dans les courses organisées après 2004, regroupées par nom de course et classées par année ?"
"SELECT avg(T2.fastestlapspeed) , T1.name , T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","Quelle est la vitesse moyenne au tour la plus rapide pour les courses organisées après 2004, pour chaque course, classée par année ?"
"SELECT T1.driverid , T1.forename , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*) >= 2","Retrouver les identifiant, prénom et nombre de courses de tous les pilotes ayant participé au moins à deux courses ?"
"SELECT T1.driverid , T1.forename , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*) >= 2","Quel est l'identifiant, le prénom et le nombre de courses de tous les pilotes ayant participé à au moins 2 courses ?"
"SELECT T1.driverid , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*) <= 30",Trouver l'identifiant du pilote et le nombre de courses de tous les pilotes qui ont participé au maximum à 30 courses ?
"SELECT T1.driverid , count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*) <= 30","Pour chaque identifiant d'un pilote ayant participé à 30 courses maximum, à combien de courses a-t-il participé ?"
"SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",Trouver l'identifiant et le prénom du pilote qui a participé au plus grand nombre de courses ?
"SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",Quels sont les identifiants et noms de tous les pilotes qui ont participé au plus de courses ?
SELECT count(*) FROM technician,Combien y a-t-il de techniciens ?
SELECT count(*) FROM technician,Quel est le nombre de techniciens ?
SELECT Name FROM technician ORDER BY Age ASC,Énumérez les noms des techniciens par ordre croissant d'âge.
SELECT Name FROM technician ORDER BY Age ASC,Comment s'appellent les techniciens par ordre croissant d'âge ?
"SELECT Team , Starting_Year FROM technician",Quelle est l'équipe et l'année de départ des techniciens ?
"SELECT Team , Starting_Year FROM technician",Quelle est l'équipe et l'année de départ de chaque technicien ?
"SELECT Name FROM technician WHERE Team != ""NYY""","Indiquez le nom des techniciens dont l'équipe n'est pas ""NYY""."
"SELECT Name FROM technician WHERE Team != ""NYY""",Comment s'appelle le technicien dont l'équipe n'est pas 'NYY' ?
SELECT Name FROM technician WHERE Age = 36 OR Age = 37,Afficher le nom des techniciens âgés de 36 ou 37 ans
SELECT Name FROM technician WHERE Age = 36 OR Age = 37,Comment s'appellent les techniciens âgés de 36 ou 37 ans ?
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1,Quelle est l'année de départ des techniciens les plus âgés ?
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1,Quelle est l'année de départ du technicien le plus âgé ?
"SELECT Team , COUNT(*) FROM technician GROUP BY Team",Montrez différentes équipes de techniciens et le nombre de techniciens dans chaque équipe.
"SELECT Team , COUNT(*) FROM technician GROUP BY Team","Pour chaque équipe, combien y a-t-il de techniciens ?"
SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer l'équipe qui compte le plus de techniciens.
SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1,Quelles sont les équipes avec le plus de techniciens ?
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2,Montrez l'équipe qui a au moins deux techniciens.
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2,Quelle est l'équipe avec au moins 2 techniciens ?
"SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",Indiquez les noms des techniciens et les séries de machines qu'ils sont chargés de réparer.
"SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",Quels sont les noms des techniciens et les séries de machines qu'ils réparent ?
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank,Afficher les noms des techniciens par ordre croissant du rang de qualité de la machine à laquelle ils sont affectés.
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank,Quels sont les noms des techniciens par ordre croissant de rang de qualité pour la machine qui leur est affectée ?
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70,Afficher les noms des techniciens affectés à la réparation des machines avec un point de valeur supérieur à 70.
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70,Quels sont les noms des techniciens affectés à la réparation des machines avec plus de points que 70 ?
"SELECT T2.Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",Indiquez les noms des techniciens et le nombre de machines qu'ils sont chargés de réparer.
"SELECT T2.Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",Quels sont les noms des techniciens et combien de machines sont-ils chargés de réparer ?
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment),Énumérez les noms des techniciens qui n'ont pas été affectés à la réparation des machines.
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment),Quels sont les noms des techniciens qui n'ont pas été affectés à la réparation des machines ?
"SELECT Starting_Year FROM technician WHERE Team = ""CLE"" INTERSECT SELECT Starting_Year FROM technician WHERE Team = ""CWS""","Afficher les années de départ partagées par les techniciens de l'équipe ""CLE"" et ""CWS""."
"SELECT Starting_Year FROM technician WHERE Team = ""CLE"" INTERSECT SELECT Starting_Year FROM technician WHERE Team = ""CWS""","Quelles sont les années de départ partagées par les techniciens de l'équipe ""CLE"" ou ""CWS"" ?"
SELECT count(*) FROM entrepreneur,Combien y a-t-il d'entrepreneurs ?
SELECT count(*) FROM entrepreneur,Comptez le nombre d'entrepreneurs.
SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC,Énumérez les entreprises des entrepreneurs par ordre décroissant d'argent demandé.
SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC,"Quelles sont les sociétés d'entrepreneurs, classées par ordre décroissant par montant d'argent demandé ?"
"SELECT Company , Investor FROM entrepreneur",Lister les entreprises et les investisseurs des entrepreneurs.
"SELECT Company , Investor FROM entrepreneur",Quelles sont les entreprises et les investisseurs qui correspondent à chaque entrepreneur ?
SELECT avg(Money_Requested) FROM entrepreneur,Quelle est la somme moyenne demandée par tous les entrepreneurs ?
SELECT avg(Money_Requested) FROM entrepreneur,Rendre l'argent moyen demandé à tous les entrepreneurs.
SELECT Name FROM People ORDER BY Weight ASC,Comment s'appellent les personnes par ordre croissant de poids ?
SELECT Name FROM People ORDER BY Weight ASC,"Renvoie les noms des personnes, classés par poids croissant."
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID,Comment s'appellent les entrepreneurs ?
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID,Renvoyez les noms des entrepreneurs.
"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""","Quels sont les noms des entrepreneurs dont l'investisseur n'est pas ""Rachel Elnaugh"" ?"
"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""",Retourner les noms d'entrepreneurs n'ont pas l'investisseur Rachel Elnaugh.
SELECT Weight FROM people ORDER BY Height ASC LIMIT 1,Quel est le poids de la personne la plus petite ?
SELECT Weight FROM people ORDER BY Height ASC LIMIT 1,Renvoie le poids de la personne la plus petite.
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1,Comment s'appelle l'entrepreneur qui a le plus de poids ?
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1,Renvoie le nom de l'entrepreneur le plus lourd.
SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85,"Quel est le montant total demandé par les entrepreneurs de taille supérieure à 1,85 ?"
SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 1.85,"Donnez le montant total demandé par les entrepreneurs qui mesurent plus de 1,85."
"SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""","Quelles sont les dates de naissance des entrepreneurs avec l'investisseur ""Simon Woodroffe"" ou ""Peter Jones"" ?"
"SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = ""Simon Woodroffe"" OR T1.Investor = ""Peter Jones""","Retournez les dates de naissance des entrepreneurs qui ont soit l'investisseur Simon Woodroffe, soit Peter Jones."
SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Requested DESC,Quels sont les poids des entrepreneurs par ordre décroissant d'argent demandé ?
SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Requested DESC,"Renvoie les poids des entrepreneurs, classés par ordre décroissant du montant d'argent demandé."
"SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor",Quels sont les investisseurs des entrepreneurs et le nombre correspondant d'entrepreneurs investis par chaque investisseur ?
"SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor",Combien d'entrepreneurs correspondent à chaque investisseur ?
SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1,Quel est l'investisseur qui a investi dans le plus grand nombre d'entrepreneurs ?
SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1,Renvoyez l'investisseur qui a investi dans le plus grand nombre d'entrepreneurs.
SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*) >= 2,Quels sont les investisseurs qui ont investi dans au moins deux entrepreneurs ?
SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*) >= 2,Renvoie les investisseurs qui ont investi dans deux entrepreneurs ou plus.
"SELECT T2.Name , T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Requested",Énumérez les noms des entrepreneurs et de leurs entreprises par ordre décroissant d'argent demandé ?
"SELECT T2.Name , T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Requested","Quels sont les noms des entrepreneurs et de leurs investisseurs correspondants, classés par ordre décroissant du montant d'argent demandé ?"
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur),Dressez la liste des noms de personnes qui ne sont pas des entrepreneurs.
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur),Comment s'appellent les personnes qui ne sont pas des entrepreneurs ?
SELECT Investor FROM entrepreneur WHERE Money_Requested > 140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested < 120000,Afficher les investisseurs partagés par les entrepreneurs qui ont demandé plus de 140 000 et les entrepreneurs qui ont demandé moins de 120 000.
SELECT Investor FROM entrepreneur WHERE Money_Requested > 140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested < 120000,Quels sont les investisseurs qui ont investi à la fois dans les entrepreneurs qui ont demandé plus de 140 000 et dans les entrepreneurs qui ont demandé moins de 120 000 ?
SELECT count(DISTINCT Company) FROM entrepreneur,Combien y a-t-il d'entreprises distinctes ?
SELECT count(DISTINCT Company) FROM entrepreneur,Comptez le nombre d'entreprises différentes.
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1,Montrez l'entreprise du plus grand entrepreneur.
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1,Quelle entreprise a été créée par l'entrepreneur le plus grand ?
SELECT count(*) FROM perpetrator,Combien y a-t-il d'agresseurs ?
SELECT Date FROM perpetrator ORDER BY Killed DESC,Indiquez la date des auteurs par ordre décroissant du nombre de personnes tuées.
SELECT Injured FROM perpetrator ORDER BY Injured ASC,Énumérez le nombre de personnes blessées par les agresseurs par ordre croissant.
SELECT avg(Injured) FROM perpetrator,Quel est le nombre moyen de personnes blessées par tous les auteurs ?
SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1,Quel est l'emplacement de l'agresseur avec le plus grand nombre de victimes.
SELECT Name FROM People ORDER BY Height ASC,Comment s'appellent les personnes par ordre croissant de taille ?
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID,Quels sont les noms des auteurs ?
"SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country != ""China""","Quels sont les noms des auteurs dont le pays n'est pas la ""Chine"" ?"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Weight DESC LIMIT 1,Quel est le nom de l'agresseur avec le plus grand poids.
SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84,"Quel est le nombre total de victimes des auteurs ayant une taille supérieure à 1,84."
"SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = ""China"" OR T2.Country = ""Japan""",Quels sont les noms des auteurs dans le pays « Chine » ou « Japon » ?
SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Injured DESC,Quelle est la taille des auteurs par ordre décroissant du nombre de personnes qu'ils ont blessées ?
"SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country",Quels sont les pays des auteurs ? Indiquez chaque pays et le nombre correspondant d'auteurs.
"SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",Quel est le pays qui compte le plus d'agresseurs ?
"SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*) >= 2",Quels sont les pays qui comptent au moins deux auteurs ?
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Year DESC,Énumérez les noms des auteurs par ordre décroissant de l'année.
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator),Énumérez les noms des personnes qui ne sont pas les auteurs.
SELECT Country FROM perpetrator WHERE Injured > 50 INTERSECT SELECT Country FROM perpetrator WHERE Injured < 20,Montrez les pays qui ont à la fois des auteurs avec des blessures de plus de 50 et des auteurs avec des blessures de moins de 20.
SELECT count(DISTINCT LOCATION) FROM perpetrator,Combien y a-t-il d'emplacements distincts d'agresseurs ?
SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,Montrez la date de l'agresseur le plus grand.
SELECT max(YEAR) FROM perpetrator;,En quelle année le crime le plus récent a-t-il été commis ?
"SELECT campus FROM campuses WHERE county = ""Los Angeles""",Indiquez le nom de tous les campus du comté de Los Angeles.
"SELECT campus FROM campuses WHERE county = ""Los Angeles""",Quels campus sont situés dans le comté de Los Angeles ?
"SELECT campus FROM campuses WHERE county = ""Los Angeles""",Dressez la liste des campus du comté de Los Angeles.
"SELECT campus FROM campuses WHERE county = ""Los Angeles""",Quels campus se trouvent dans le comté de Los Angeles ?
"SELECT campus FROM campuses WHERE LOCATION = ""Chico""",Quels sont les noms de tous les campus situés à Chico ?
"SELECT campus FROM campuses WHERE LOCATION = ""Chico""",Quels campus sont situés à Chico?
SELECT campus FROM campuses WHERE YEAR = 1958,Retrouvez tous les campus ouverts en 1958.
SELECT campus FROM campuses WHERE YEAR = 1958,Quels sont les campus qui ont ouvert en 1958 ?
SELECT campus FROM campuses WHERE YEAR < 1800,Trouver le nom des campus ouverts avant 1800.
SELECT campus FROM campuses WHERE YEAR < 1800,Quels campus ont ouvert avant 1800 ?
SELECT campus FROM campuses WHERE YEAR >= 1935 AND YEAR <= 1939,Quel campus a été ouvert entre 1935 et 1939 ?
SELECT campus FROM campuses WHERE YEAR >= 1935 AND YEAR <= 1939,Quels campus ont ouvert entre 1935 et 1939 ?
"SELECT campus FROM campuses WHERE LOCATION = ""Northridge"" AND county = ""Los Angeles"" UNION SELECT campus FROM campuses WHERE LOCATION = ""San Francisco"" AND county = ""San Francisco""","Trouvez le nom des campus qui se trouvent à Northridge, Los Angeles ou à San Francisco, San Francisco."
"SELECT campus FROM campuses WHERE LOCATION = ""Northridge"" AND county = ""Los Angeles"" UNION SELECT campus FROM campuses WHERE LOCATION = ""San Francisco"" AND county = ""San Francisco""","Quels campus sont situés à Northridge, Los Angeles ou à San Francisco, San Francisco ?"
"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND T2.year = 1996","Quels sont les frais de campus de ""l'Université d'État de San Jose"" en 1996 ?"
"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND T2.year = 1996",Quels sont les frais de campus pour l'Université d'État de San Jose en 1996 ?
"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND T2.year = 1996","Quels sont les frais de campus de ""l'Université d'État de San Francisco"" en 1996 ?"
"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND T2.year = 1996",Quels sont les frais de campus pour l'Université d'État de San Francisco en 1996 ?
SELECT count(*) FROM csu_fees WHERE campusfee > (SELECT avg(campusfee) FROM csu_fees),Trouvez le nombre d'universités dont les frais de campus sont supérieurs aux frais de campus moyens.
SELECT count(*) FROM csu_fees WHERE campusfee > (SELECT avg(campusfee) FROM csu_fees),Combien d'universités ont des frais de campus supérieurs à la moyenne ?
SELECT count(*) FROM csu_fees WHERE campusfee > (SELECT avg(campusfee) FROM csu_fees),Trouvez le nombre d'universités dont les frais de campus sont supérieurs aux frais de campus moyens.
SELECT count(*) FROM csu_fees WHERE campusfee > (SELECT avg(campusfee) FROM csu_fees),Combien d'universités ont des frais de campus supérieurs à la moyenne ?
"SELECT campus FROM campuses WHERE county = ""Los Angeles"" AND YEAR > 1950",Quelle université se trouve dans le comté de Los Angeles et a ouvert ses portes après 1950 ?
"SELECT campus FROM campuses WHERE county = ""Los Angeles"" AND YEAR > 1950",Quels campus sont situés dans le comté de Los Angeles et ouverts après 1950 ?
SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1,Quelle année a le plus de diplômes décernés ?
SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1,En quelle année le plus de diplômes a-t-il été décerné ?
SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1,Quel campus a le plus de diplômes conférés de tous les temps ?
SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1,Quel campus a le plus de diplômes conférés tout au long de son existence ?
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty DESC LIMIT 1,Quel campus compte le plus de facultés en 2003 ?
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty DESC LIMIT 1,Quel campus a le plus de facultés en 2003 ?
SELECT avg(campusfee) FROM csu_fees WHERE YEAR = 1996,Trouvez les frais moyens sur un campus CSU en 1996
SELECT avg(campusfee) FROM csu_fees WHERE YEAR = 1996,Quel est le prix moyen d'un campus CSU en 1996 ?
SELECT avg(campusfee) FROM csu_fees WHERE YEAR = 1996,Quel est le tarif moyen sur un campus CSU en 2005 ?
SELECT avg(campusfee) FROM csu_fees WHERE YEAR = 1996,Quel est le prix moyen d'un campus CSU en 2005 ?
"SELECT T1.campus , sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T2.year >= 1998 AND T2.year <= 2002 GROUP BY T1.campus",déclarer le nombre total de diplômes délivrés entre 1998 et 2002.
"SELECT T1.campus , sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T2.year >= 1998 AND T2.year <= 2002 GROUP BY T1.campus",combien de diplômes ont été délivrés entre 1998 et 2002 ?
"SELECT T1.campus , sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = ""Orange"" AND T2.year >= 2000 GROUP BY T1.campus","Pour chaque campus du comté d'Orange, indiquez le nombre de diplômes délivrés après 2000."
"SELECT T1.campus , sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = ""Orange"" AND T2.year >= 2000 GROUP BY T1.campus",Quel est le nombre total de diplômes délivrés après 2000 pour chaque campus du comté d'Orange ?
"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND faculty > (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND T1.county = ""Orange"")",Trouvez les noms du campus qui a plus de facultés en 2002 que tous les campus du comté d'Orange.
"SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND faculty > (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND T1.county = ""Orange"")",Quels sont les noms des campus qui ont plus de facultés en 2002 que le nombre maximum dans le comté d'Orange ?
SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus WHERE t2.year = 1956 AND totalenrollment_ay > 400 AND FTE_AY > 200,Quel campus avait plus de 400 inscriptions au total mais plus de 200 inscriptions à temps plein en 1956 ?
SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus WHERE t2.year = 1956 AND totalenrollment_ay > 400 AND FTE_AY > 200,"Quel campus a commencé en 1956, compte plus de 200 étudiants à temps plein et plus de 400 étudiants inscrits ?"
"SELECT count(*) FROM campuses WHERE county = ""Los Angeles""",Combien y a-t-il de campus dans le comté de Los Angeles ?
"SELECT count(*) FROM campuses WHERE county = ""Los Angeles""",Combien de campus existent dans le comté de LA ?
"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND t2.year = 2000","Combien de diplômes ont été décernés à la ""San Jose State University"" en 2000 ?"
"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND t2.year = 2000",Combien de diplômes ont été décernés à l'Université d'État de San Jose en 2000 ?
"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND t2.year = 2000","Quels sont les diplômes conférés à ""San Francisco State University"" en 2001."
"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = ""San Jose State University"" AND t2.year = 2000",Quels diplômes ont été décernés à l'Université d'État de San Francisco en 2001 ?
SELECT sum(faculty) FROM faculty WHERE YEAR = 2002,Combien y a-t-il de professeurs au total en 2002 ?
SELECT sum(faculty) FROM faculty WHERE YEAR = 2002,"Combien de professeurs, au total, y a-t-il en 2002?"
"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2002 AND T2.campus = ""Long Beach State University""","Quel est le nombre de lignes de professeurs sur le campus ""Long Beach State University"" en 2002 ?"
"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2002 AND T2.campus = ""Long Beach State University""",Quel est le nombre de professeurs à l'Université d'État de Long Beach en 2002 ?
"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2002 AND T2.campus = ""Long Beach State University""","Combien de lignes de professeurs y a-t-il à ""l'Université d'État de San Francisco"" en 2004 ?"
"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus = T2.id WHERE T1.year = 2002 AND T2.campus = ""Long Beach State University""",Combien de lignes de professeurs y a-t-il à l'Université d'État de San Francisco en 2004 ?
SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id = t2.campus WHERE t2.faculty >= 600 AND t2.faculty <= 1000 AND T1.year = 2004,Énumérez les campus qui ont entre 600 et 1000 lignes de professeurs en 2004.
SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id = t2.campus WHERE t2.faculty >= 600 AND t2.faculty <= 1000 AND T1.year = 2004,Quels sont les campus qui comptaient entre 600 et 1000 professeurs en 2004 ?
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2002 ORDER BY t3.degrees DESC LIMIT 1,Combien de lignes de faculté y a-t-il dans l'université qui a conféré le plus grand nombre de diplômes en 2002 ?
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2002 ORDER BY t3.degrees DESC LIMIT 1,Combien de professeurs l'université qui a décerné le plus de diplômes en 2002 comptait-elle ?
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2001 ORDER BY t3.degrees LIMIT 1,Combien de lignes de faculté y a-t-il dans l'université qui a conféré le moins de diplômes en 2001 ?
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2001 ORDER BY t3.degrees LIMIT 1,Combien y a-t-il de professeurs dans l'université qui a délivré le moins de diplômes en 2001 ?
"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = ""San Jose State University""","Combien y a-t-il d'étudiants de premier cycle à ""l'Université d'État de San Jose"" en 2004 ?"
"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = ""San Jose State University""",Combien y a-t-il d'étudiants de premier cycle à l'État de San Jose
"SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = ""San Francisco State University""","Quel est le nombre de diplômés de ""l'Université d'État de San Francisco"" en 2004 ?"
"SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = ""San Francisco State University""",Combien de personnes ont été diplômées de l'Université d'État de San Francisco en 2004 ?
"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = ""San Francisco State University"" AND t1.year = 2000","Quels sont les frais de campus de ""l'Université d'État de San Francisco"" en 2000 ?"
"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = ""San Francisco State University"" AND t1.year = 2000","En l'an 2000, quels sont les frais de campus de l'Université d'État de San Francisco ?"
"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = ""San Francisco State University"" AND t1.year = 2000","Trouvez les frais de campus de ""San Jose State University"" en 2000."
"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = ""San Francisco State University"" AND t1.year = 2000",Quels sont les frais de campus en l'an 2000 pour l'Université d'État de San Jose ?
SELECT count(*) FROM campuses,Combien y a-t-il de campus CSU ?
SELECT count(*) FROM campuses,Quel est le nombre total de campus ?
SELECT count(*) FROM candidate,Combien y a-t-il de candidats ?
SELECT count(*) FROM candidate,Comptez le nombre de candidats.
SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1,Quelle ressource de sondage a fourni le plus grand nombre d'informations sur les candidats ?
SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1,Renvoie la ressource de sondage associée au plus grand nombre de candidats.
SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3,quels sont les 3 taux de support les plus élevés ?
SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3,Renvoyez les 3 meilleurs taux de support.
SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1,Trouvez l'identifiant du candidat qui a obtenu le taux d'opposition le plus bas.
SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1,Quel est l'identifiant du candidat avec le taux d'opposition le plus bas ?
"SELECT Support_rate , Consider_rate , Oppose_rate FROM candidate ORDER BY unsure_rate","Veuillez énumérer les taux de soutien, de considération et d'opposition pour chaque candidat par ordre croissant de taux incertain."
"SELECT Support_rate , Consider_rate , Oppose_rate FROM candidate ORDER BY unsure_rate","Quels sont les taux de soutien, de considération et d'opposition de chaque candidat, classés par ordre croissant de leur taux incertain ?"
SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1,de quelle source de sondage provient le taux d'opposition le plus élevé ?
SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1,Renvoie la source du sondage correspondant au candidat qui a le taux d'opposition.
SELECT name FROM people ORDER BY date_of_birth,"Énumérez tous les noms de personnes dans l'ordre de leur date de naissance, du plus vieux au plus jeune."
SELECT name FROM people ORDER BY date_of_birth,"Quels sont les noms de toutes les personnes, classés par date de naissance ?"
"SELECT avg(height) , avg(weight) FROM people WHERE sex = 'M'",Trouvez la taille et le poids moyens de tous les hommes (le sexe est M).
"SELECT avg(height) , avg(weight) FROM people WHERE sex = 'M'",Quels sont la taille et le poids moyens des hommes (le sexe est M) ?
SELECT name FROM people WHERE height > 200 OR height < 190,trouver les noms des personnes qui mesurent plus de 200 ou moins de 190.
SELECT name FROM people WHERE height > 200 OR height < 190,Quels sont les noms des personnes qui ont une taille supérieure à 200 ou inférieure à 190 ?
"SELECT avg(weight) , min(weight) , sex FROM people GROUP BY sex",Trouvez le poids moyen et minimum pour chaque sexe.
"SELECT avg(weight) , min(weight) , sex FROM people GROUP BY sex",Quels sont les poids moyen et minimum des personnes de chaque sexe ?
"SELECT t1.name , t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id ORDER BY t2.support_rate DESC LIMIT 1",Trouvez le nom et le sexe du candidat qui a obtenu le taux de soutien le plus élevé.
"SELECT t1.name , t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id ORDER BY t2.support_rate DESC LIMIT 1",Quel est le nom et le sexe du candidat avec le taux de soutien le plus élevé ?
"SELECT t1.name , t1.sex , min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex",Trouvez le nom des candidats dont le pourcentage d'opposition est le plus bas pour chaque sexe.
"SELECT t1.name , t1.sex , min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex","Pour chaque sexe, quel est le nom et le sexe du candidat avec le taux d'opposition pour son sexe ?"
SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1,quel sexe a obtenu le taux d'incertitude moyen le plus élevé.
SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1,Quel est le sexe du candidat qui a eu le taux d'incertitude le plus élevé ?
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate),quels sont les noms des personnes qui n'ont pas participé à l'élection des candidats.
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate),Donnez les noms des personnes qui n'ont pas participé à l'élection des candidats.
SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id WHERE t2.support_rate < t2.oppose_rate,Trouvez les noms des candidats dont le pourcentage de soutien est inférieur à leur taux d'opposition.
SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id WHERE t2.support_rate < t2.oppose_rate,Quels sont les noms des candidats qui ont un taux de soutien inférieur au taux d'opposition ?
"SELECT count(*) , sex FROM people WHERE weight > 85 GROUP BY sex",combien y a-t-il de personnes dont le poids est supérieur à 85 pour chaque sexe ?
"SELECT count(*) , sex FROM people WHERE weight > 85 GROUP BY sex",Comptez le nombre de personnes de chaque sexe qui ont un poids supérieur à 85.
"SELECT max(support_rate) , min(consider_rate) , min(oppose_rate) FROM candidate","trouver le pourcentage de soutien le plus élevé, le taux de considération le plus bas et le taux d'opposition de tous les candidats."
"SELECT max(support_rate) , min(consider_rate) , min(oppose_rate) FROM candidate","Renvoyer le taux de soutien maximal, le taux de considération minimal et le taux d'opposition minimal pour tous les candidats ?"
SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id WHERE t1.sex = 'F' ORDER BY t1.name,énumérez tous les noms de candidats féminins (le sexe est F) dans l'ordre alphabétique.
SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id WHERE t1.sex = 'F' ORDER BY t1.name,Quels sont les noms de toutes les candidates par ordre alphabétique (le sexe est F) ?
SELECT name FROM people WHERE height < (SELECT avg(height) FROM people),trouver le nom des personnes dont la taille est inférieure à la moyenne.
SELECT name FROM people WHERE height < (SELECT avg(height) FROM people),Comment s'appellent les personnes plus petites que la moyenne ?
SELECT * FROM people,Liste toutes les informations sur toutes les personnes.
SELECT * FROM people,Quelles sont toutes les informations sur toutes les personnes ?
SELECT title FROM Movie WHERE director = 'Steven Spielberg',Retrouvez les titres de tous les films réalisés par steven spielberg.
SELECT title FROM Movie WHERE director = 'Steven Spielberg',Comment s'appellent tous les films réalisés par Steven Spielberg ?
SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR > 2000,Comment s'appelle le film produit après 2000 et réalisé par James Cameron ?
SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR > 2000,Quels sont les titres de tous les films que James Cameron a réalisés après 2000 ?
SELECT count(*) FROM Movie WHERE YEAR < 2000,Combien de films ont été réalisés avant 2000 ?
SELECT count(*) FROM Movie WHERE YEAR < 2000,Combien de films ont été réalisés avant 2000 ?
SELECT director FROM Movie WHERE title = 'Avatar',Qui est le réalisateur du film Avatar ?
SELECT director FROM Movie WHERE title = 'Avatar',Qui a réalisé Avatar ?
SELECT count(*) FROM Reviewer,Combien d'examinateurs répertoriés ?
SELECT count(*) FROM Reviewer,Combien y a-t-il d'examinateurs ?
"SELECT rID FROM Reviewer WHERE name LIKE ""%Mike%""",Quel est l'identifiant de l'examinateur dont le nom a pour sous-chaîne « Mike » ?
"SELECT rID FROM Reviewer WHERE name LIKE ""%Mike%""","Quel est l'identifiant de l'examinateur dont le nom inclut le mot ""Mike"" ?"
"SELECT rID FROM Reviewer WHERE name = ""Daniel Lewis""",Quel est l'identifiant de l'examinateur de Daniel Lewis ?
"SELECT rID FROM Reviewer WHERE name = ""Daniel Lewis""",Quel est l'identifiant du critique nommé Daniel Lewis ?
SELECT count(*) FROM Rating WHERE stars > 3,Quel est le nombre total d'évaluations qui ont plus de 3 étoiles ?
SELECT count(*) FROM Rating WHERE stars > 3,Combien de classements de films ont plus de 3 étoiles ?
"SELECT max(stars) , min(stars) FROM Rating",Quelle est l'étoile la plus basse et la plus élevée ?
"SELECT max(stars) , min(stars) FROM Rating",Quel est le nombre maximum et minimum d'étoiles qu'une note peut recevoir ?
SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4 ORDER BY T1.year,"Trouvez toutes les années pour lesquelles un film a reçu une note de 4 ou 5, et triez-les par ordre croissant d'année."
SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4 ORDER BY T1.year,"En quelles années un film a-t-il reçu une note de 4 ou 5 étoiles, et indiquez les années de la plus ancienne à la plus récente ?"
"SELECT T1.director , T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars = 5",Quels sont les noms des réalisateurs qui ont réalisé des films avec 5 étoiles ? Renvoyez également le titre de ces films.
"SELECT T1.director , T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars = 5","Quels sont les noms des réalisateurs qui ont créé un film avec une note de 5 étoiles, et quel était le nom de ces films ?"
"SELECT T2.name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Quelle est la note moyenne en étoiles de chaque évaluateur ?
"SELECT T2.name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name",Quel est le nombre moyen d'étoiles que chaque critique attribue à un film ?
SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating),Trouvez les titres de tous les films qui n'ont pas de classement.
SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating),Quels sont les titres de tous les films qui n'ont pas été classés ?
"SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = ""null""",Recherchez les noms de tous les réviseurs qui ont des notes avec une valeur NULL pour la date.
"SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID = T2.rID WHERE ratingDate = ""null""",Quels sont les différents noms de tous les examinateurs dont les notes n'ont pas de champ de date ?
"SELECT avg(T1.stars) , T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = (SELECT min(YEAR) FROM Movie)",Quelle est la moyenne des étoiles et du titre du film le plus ancien ?
"SELECT avg(T1.stars) , T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = (SELECT min(YEAR) FROM Movie)","Pour le film le plus ancien répertorié, quelle est sa note moyenne et son titre ?"
SELECT title FROM Movie WHERE YEAR = (SELECT max(YEAR) FROM Movie),Quel est le nom du film le plus récent ?
SELECT title FROM Movie WHERE YEAR = (SELECT max(YEAR) FROM Movie),Quel est le titre du dernier film ?
"SELECT max(T1.stars) , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = (SELECT max(YEAR) FROM Movie)",Quel est le maximum d'étoiles et l'année pour le film le plus récent ?
"SELECT max(T1.stars) , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = (SELECT max(YEAR) FROM Movie)",Quelle est la note la plus élevée pour le film le plus récent et quand est-il sorti ?
"SELECT title FROM Movie WHERE YEAR > (SELECT max(YEAR) FROM Movie WHERE director = ""Steven Spielberg"")",Comment s'appellent les films dont l'année de création est après tous les films réalisés par Steven Spielberg ?
"SELECT title FROM Movie WHERE YEAR > (SELECT max(YEAR) FROM Movie WHERE director = ""Steven Spielberg"")",Quels sont les noms de tous les films qui ont été créés après le dernier film de Steven Spielberg ?
"SELECT T2.title , T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars > (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.director = ""James Cameron"")",Quels sont les titres et les réalisateurs des films dont l'étoile est supérieure à la moyenne des étoiles des films réalisés par James Cameron ?
"SELECT T2.title , T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars > (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.director = ""James Cameron"")",Quels sont les titres et les réalisateurs de tous les films qui ont une note supérieure à la note moyenne des films de James Cameron ?
"SELECT T3.name , T2.title , T1.stars , T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID ORDER BY T3.name , T2.title , T1.stars","Renvoie le nom du critique, le titre du film, les étoiles et la date de classement. Et triez d'abord les données par nom de critique, puis par titre de film et enfin par nombre d'étoiles."
"SELECT T3.name , T2.title , T1.stars , T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID ORDER BY T3.name , T2.title , T1.stars","Quel est le nom du critique, le titre du film, le classement du film et la date de classement de chaque film classé par nom du critique, titre du film, puis classement final ?"
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T1.rID HAVING COUNT(*) >= 3,Trouvez les noms de tous les examinateurs qui ont fourni trois notes ou plus.
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T1.rID HAVING COUNT(*) >= 3,Quels sont les noms de tous les critiques qui ont évalué 3 films ou plus ?
SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind',Trouvez les noms de tous les critiques qui ont noté Autant en emporte le vent.
SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind',Quels sont les noms de tous les différents commentateurs qui notent Autant en emporte le vent ?
SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez',Trouvez les noms de tous les réalisateurs dont les films sont notés par Sarah Martinez.
SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez',Quels sont les noms de tous les réalisateurs dont les films ont été évalués par Sarah Martinez ?
"SELECT DISTINCT T3.name , T2.title , T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name","Pour toute note où le nom du critique est le même que celui du réalisateur du film, renvoyez le nom du critique, le titre du film et le nombre d'étoiles."
"SELECT DISTINCT T3.name , T2.title , T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name","Quels sont les différents noms de critiques, titres de films et stars pour chaque note où le critique porte le même nom que le réalisateur ?"
SELECT name FROM Reviewer UNION SELECT title FROM Movie,Renvoie tous les noms de critiques et les noms de films dans une seule liste.
SELECT name FROM Reviewer UNION SELECT title FROM Movie,Quels sont les noms de tous les critiques et noms de films ?
SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Chris Jackson',Retrouvez les titres de tous les films non revus par Chris Jackson.
SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Chris Jackson',Quels sont les titres de tous les films qui n'ont pas été revus par Chris Jackson ?
"SELECT T1.title , T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY T1.director , T1.title","Pour tous les réalisateurs qui ont réalisé plus d'un film, retournez les titres de tous les films qu'ils ont réalisés, ainsi que le nom du réalisateur. Trier par nom de réalisateur, puis titre de film."
"SELECT T1.title , T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY T1.director , T1.title","Pour tous les réalisateurs qui ont réalisé plus d'un film, quels films ont-ils réalisés et comment s'appellent-ils ?"
"SELECT T1.title , T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title","Pour les réalisateurs qui ont eu plus d'un film, retournez les titres et les années de production de tous les films qu'ils ont réalisés."
"SELECT T1.title , T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title","Pour chaque réalisateur ayant réalisé plus d'un film, quels sont les titres et les dates de sortie de tous ces films ?"
SELECT director FROM Movie GROUP BY director HAVING count(*) = 1,Quels sont les noms des réalisateurs qui ont fait exactement un film ?
SELECT director FROM Movie GROUP BY director HAVING count(*) = 1,Quels sont les noms de tous les réalisateurs qui ont fait un film ?
"SELECT director FROM Movie WHERE director != ""null"" GROUP BY director HAVING count(*) = 1",Quels sont les noms des réalisateurs qui ont fait exactement un film en excluant le réalisateur NULL ?
"SELECT director FROM Movie WHERE director != ""null"" GROUP BY director HAVING count(*) = 1",Quels sont les noms de tous les réalisateurs qui ont fait un film à l'exception du réalisateur nommé NULL ?
"SELECT count(*) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",Combien de critiques de films chaque réalisateur reçoit-il ?
"SELECT count(*) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director","Pour chaque réalisateur, combien de critiques ont-ils reçues ?"
"SELECT T2.title , avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1",Trouvez les films avec la note moyenne la plus élevée. Renvoie les titres de films et la note moyenne.
"SELECT T2.title , avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1",Quels sont les titres de films avec la note moyenne la plus élevée et quelles sont ces notes ?
"SELECT T2.title , avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",Quels sont les titres de films et la note moyenne des films avec la note moyenne la plus basse ?
"SELECT T2.title , avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",Quels sont les titres et les notes moyennes de tous les films qui ont la note moyenne la plus basse ?
"SELECT T2.title , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3",Quels sont les noms et les années des films qui ont les 3 étoiles les plus cotées ?
"SELECT T2.title , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3",Quels sont les noms et les années de sortie des films avec les 3 meilleures notes ?
"SELECT T2.title , T1.stars , T2.director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director","Pour chaque réalisateur, renvoyez le nom du réalisateur ainsi que le titre du film qu'il a réalisé et qui a reçu la note la plus élevée parmi tous ses films, et la valeur de cette note. Ignorer les films dont le réalisateur est NULL."
"SELECT T2.title , T1.stars , T2.director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != ""null"" GROUP BY director","Pour chaque réalisateur, quels sont les titres et les notes de tous les films qu'ils ont passés en revue ?"
"SELECT T2.title , T1.rID , T1.stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.rID",Trouvez le titre et le nombre d'étoiles du film qui a obtenu le moins d'étoiles pour chaque critique.
"SELECT T2.title , T1.rID , T1.stars , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.rID","Pour chaque identifiant de critique, quels sont le titre et la note du film avec la plus petite note ?"
"SELECT T2.title , T1.stars , T2.director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.director",Trouvez le titre et la partition du film avec la note la plus basse parmi tous les films réalisés par chaque réalisateur.
"SELECT T2.title , T1.stars , T2.director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.director","Pour chaque réalisateur, quel est le titre et la partition de son film le moins bien noté ?"
"SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1",Quel est le nom du film qui est évalué par la plupart du temps ?
"SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1",Quel est le nom du film qui a le plus été commenté ?
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5,Quels sont les titres de tous les films dont la cote étoile est comprise entre 3 et 5 ?
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5,Quels sont les titres de tous les films qui ont entre 3 et 5 étoiles ?
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3,Trouvez les noms des commentateurs qui ont donné plus de 3 étoiles.
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3,Comment s'appellent les critiques qui ont déjà attribué plus de 3 étoiles à un film ?
"SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris"") GROUP BY mID",Trouvez l'étoile de classement moyenne pour chaque film qui n'est pas évalué par Brittany Harris.
"SELECT mID , avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris"") GROUP BY mID",Quelle est la note moyenne pour chaque film qui n'a jamais été examiné par Brittany Harris ?
"SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris""",Quels sont les identifiants des films qui ne sont pas examinés par Brittany Harris.
"SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = ""Brittany Harris""",Quels sont les identifiants de tous les films qui n'ont pas été revus par Britanny Harris ?
"SELECT mID , avg(stars) FROM Rating GROUP BY mID HAVING count(*) >= 2",Trouvez l'étoile de classement moyenne pour chaque film qui a reçu au moins 2 classements.
"SELECT mID , avg(stars) FROM Rating GROUP BY mID HAVING count(*) >= 2","Pour chaque film ayant reçu plus de 3 critiques, quelle est la note moyenne ?"
SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars = 4,trouver les identifiants des commentateurs qui n'ont pas donné 4 étoiles.
SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars = 4,Quels sont les identifiants de tous les commentateurs qui n'ont pas donné 4 étoiles ?
SELECT rID FROM Rating WHERE stars != 4,Trouvez les identifiants des critiques qui n'ont pas seulement donné 4 étoiles.
SELECT rID FROM Rating WHERE stars != 4,Quels sont les identifiants de tous les commentateurs qui n'ont pas donné 4 étoiles au moins une fois ?
SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000,Quels sont les noms des films réalisés après 2000 ou revus par Brittany Harris ?
SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000,Quels sont les noms de tous les films réalisés après 2000 ou revus par Brittany Harris ?
"SELECT title FROM Movie WHERE director = ""James Cameron"" OR YEAR < 1980",Comment s'appellent les films réalisés avant 1980 ou réalisés par James Cameron ?
"SELECT title FROM Movie WHERE director = ""James Cameron"" OR YEAR < 1980",Quels sont les noms de tous les films réalisés avant 1980 ou dont James Cameron était le réalisateur ?
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 4,Quels sont les noms des commentateurs qui avaient noté 3 étoiles et 4 étoiles ?
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 4,Quels sont les noms de tous les évaluateurs qui ont attribué 3 ou 4 étoiles aux avis ?
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 4,Quels sont les noms des films qui obtiennent 3 étoiles et 4 étoiles ?
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 4,Quels sont les noms de tous les films qui ont reçu 3 ou 4 étoiles ?
SELECT count(*) FROM county_public_safety,Combien y a-t-il de comtés ?
SELECT count(*) FROM county_public_safety,Comptez le nombre de pays.
SELECT Name FROM county_public_safety ORDER BY Population DESC,Énumérez les noms des comtés par ordre décroissant de population.
SELECT Name FROM county_public_safety ORDER BY Population DESC,"Quels sont les noms des comtés de sécurité publique, classés par population descendante ?"
"SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != ""East""",Énumérez les forces de police distinctes des comtés dont l'emplacement n'est pas du côté est.
"SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != ""East""",Quelles sont les différentes forces de police des comtés qui ne sont pas situés dans l'Est ?
"SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety",Quels sont les taux de criminalité minimum et maximum des comtés ?
"SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety",Renvoie les taux de criminalité minimum et maximum dans tous les comtés.
SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC,Afficher les taux de criminalité des comtés par ordre croissant du nombre de policiers.
SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC,Quels sont les taux de criminalité des comtés triés par nombre de bureaux croissant ?
SELECT Name FROM city ORDER BY Name ASC,Quels sont les noms des villes par ordre alphabétique croissant ?
SELECT Name FROM city ORDER BY Name ASC,"Renvoie les noms des villes, classés par ordre alphabétique."
SELECT Hispanic FROM city WHERE Black > 10,Quel est le pourcentage d'hispaniques dans les villes où le pourcentage de noirs est supérieur à 10 ?
SELECT Hispanic FROM city WHERE Black > 10,Renvoie le pourcentage d'hispaniques pour les villes dans lesquelles le pourcentage de noirs est supérieur à 10.
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1,Indiquez le nom du comté avec la plus grande population.
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1,Comment s'appelle le département le plus peuplé ?
SELECT Name FROM city ORDER BY White DESC LIMIT 5,Énumérez les noms de la ville avec les 5 meilleurs pourcentages de blancs.
SELECT Name FROM city ORDER BY White DESC LIMIT 5,Quels sont les noms des cinq villes avec la plus grande proportion de blancs ?
"SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",Afficher les noms des villes et les noms des comtés dans lesquels ils se trouvent.
"SELECT T1.Name , T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID","Quels sont les noms des villes, ainsi que les noms des comtés auxquels elles correspondent ?"
"SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",Affichez les pourcentages blancs des villes et les taux de criminalité des comtés dans lesquels elles se trouvent.
"SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",Quels sont les pourcentages de blancs des villes et les taux de criminalité correspondants des comtés auxquels ils correspondent ?
SELECT name FROM city WHERE county_ID = (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1),Indiquez le nom des villes du comté qui compte le plus grand nombre de policiers.
SELECT name FROM city WHERE county_ID = (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1),Quels sont les noms des villes qui sont dans le comté avec le plus de policiers ?
SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000),Indiquez le nombre de villes dans les comtés qui ont une population supérieure à 20 000.
SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000),Combien y a-t-il de villes dans des comtés de plus de 20 000 habitants ?
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90,Afficher le taux de criminalité des comtés avec une ville ayant un pourcentage de blancs supérieur à 90.
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90,Quels sont les taux de criminalité des comtés qui contiennent des villes qui ont des pourcentages de blancs supérieurs à 90 ?
"SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force",Veuillez indiquer les forces de police et le nombre de comtés avec chaque force de police.
"SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force",Combien de comtés correspondent à chaque force de police ?
SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1,Quel est l'emplacement partagé par la plupart des comtés ?
SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1,Quel emplacement a le plus de comtés correspondants ?
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city),Énumérez les noms des comtés qui n'ont pas de villes.
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city),Quels sont les noms des comtés qui ne contiennent aucune ville ?
"SELECT Police_force FROM county_public_safety WHERE LOCATION = ""East"" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION = ""West""",Afficher la force de police partagée par les comtés avec emplacement à l'est et à l'ouest.
"SELECT Police_force FROM county_public_safety WHERE LOCATION = ""East"" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION = ""West""",Quelles forces de police opèrent dans les deux comtés situés à l'Est et à l'Ouest ?
SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate < 100),Afficher les noms des villes dans les comtés qui ont un taux de criminalité inférieur à 100.
SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate < 100),Quels sont les noms des villes qui se trouvent dans les comtés qui ont un taux de criminalité inférieur à 100 ?
SELECT Case_burden FROM county_public_safety ORDER BY Population DESC,Montrez la charge de travail des comtés par ordre décroissant de population.
SELECT Case_burden FROM county_public_safety ORDER BY Population DESC,"Quelles sont les charges de cas des comtés, classées par ordre décroissant de population ?"
SELECT roomName FROM Rooms WHERE basePrice < 160 AND beds = 2 AND decor = 'modern';,Trouvez les noms de toutes les chambres modernes avec un prix de base inférieur à 160 $ ​​et deux lits.
SELECT roomName FROM Rooms WHERE basePrice < 160 AND beds = 2 AND decor = 'modern';,Quels sont les noms des chambres modernes qui ont un prix de base inférieur à 160 $ ​​et deux lits.
"SELECT roomName , RoomId FROM Rooms WHERE basePrice > 160 AND maxOccupancy > 2;",Retrouvez toutes les chambres qui ont un prix supérieur à 160 et pouvant accueillir plus de 2 personnes. Signaler les noms et les identifiants des salles.
"SELECT roomName , RoomId FROM Rooms WHERE basePrice > 160 AND maxOccupancy > 2;",Quels sont les noms et identifiants de toutes les chambres qui coûtent plus de 160 et peuvent accueillir plus de 2 personnes.
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;,Trouvez la chambre la plus populaire de l'hôtel. La salle la plus populaire est la salle qui a vu le plus grand nombre de réservations.
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;,Quelle salle a le plus grand nombre de réservations ?
"SELECT kids FROM Reservations WHERE FirstName = ""ROY"" AND LastName = ""SWEAZY"";",Combien d'enfants séjournent dans les chambres réservées par ROY SWEAZY ?
"SELECT kids FROM Reservations WHERE FirstName = ""ROY"" AND LastName = ""SWEAZY"";",Trouvez le nombre d'enfants séjournant dans les chambres réservées par une personne appelée ROY SWEAZ.
"SELECT count(*) FROM Reservations WHERE FirstName = ""ROY"" AND LastName = ""SWEAZY"";",Combien de fois ROY SWEAZY a réservé une chambre.
"SELECT count(*) FROM Reservations WHERE FirstName = ""ROY"" AND LastName = ""SWEAZY"";",Découvrez le nombre de fois que ROY SWEAZY a réservé une chambre.
"SELECT T2.roomName , T1.Rate , T1.CheckIn , T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;","Quelle chambre a le tarif le plus élevé ? Indiquez le nom complet de la chambre, le tarif, les dates d'arrivée et de départ."
"SELECT T2.roomName , T1.Rate , T1.CheckIn , T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;","Renvoyez le nom, le tarif, les dates d'arrivée et de départ de la chambre avec le tarif le plus élevé."
"SELECT Adults FROM Reservations WHERE CheckIn = ""2010-10-23"" AND FirstName = ""CONRAD"" AND LastName = ""SELBIG"";",Combien d'adultes séjournent dans la chambre où CONRAD SELBIG s'est enregistré le 23 octobre 2010 ?
"SELECT Adults FROM Reservations WHERE CheckIn = ""2010-10-23"" AND FirstName = ""CONRAD"" AND LastName = ""SELBIG"";",Trouvez le nombre d'adultes pour la chambre réservée et enregistrée par CONRAD SELBIG le 23 octobre 2010.
"SELECT Kids FROM Reservations WHERE CheckIn = ""2010-09-21"" AND FirstName = ""DAMIEN"" AND LastName = ""TRACHSEL"";",Combien d'enfants séjournent dans la chambre ? DAMIEN TRACHSEL s'est enregistré le 21 septembre 2010 ?
"SELECT Kids FROM Reservations WHERE CheckIn = ""2010-09-21"" AND FirstName = ""DAMIEN"" AND LastName = ""TRACHSEL"";",Renvoyez le nombre d'enfants pour la chambre réservée et enregistrée par DAMIEN TRACHSEL le 21 septembre 2010.
SELECT sum(beds) FROM Rooms WHERE bedtype = 'King';,Combien y a-t-il de lits king-size ?
SELECT sum(beds) FROM Rooms WHERE bedtype = 'King';,Trouvez le nombre total de lits King disponibles.
"SELECT roomName , decor FROM Rooms WHERE bedtype = 'King' ORDER BY basePrice;",Énumérez les noms et le décor des chambres qui ont un lit king. Triez la liste par leur prix.
"SELECT roomName , decor FROM Rooms WHERE bedtype = 'King' ORDER BY basePrice;",Quels sont les noms et la décoration des chambres avec un lit king ? Triez-les par leur prix
"SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;",Quelle chambre a le prix de base le moins cher ? Indiquez le nom de la chambre et le prix de base.
"SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;",Quels sont le nom de la chambre et le prix de base de la chambre avec le prix de base le plus bas ?
"SELECT decor FROM Rooms WHERE roomName = ""Recluse and defiance"";",Quel est le décor de la chambre Recluse et défi ?
"SELECT decor FROM Rooms WHERE roomName = ""Recluse and defiance"";","Restituez le décor de la pièce nommée ""Recluse et défiance""."
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType;",Quel est le prix de base moyen des différents types de lits ? Indiquez le type de lit et le prix de base moyen.
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType;","Pour chaque type de lit, trouvez le prix de base moyen des différents types de lit."
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType;","Pour chaque type de lit, trouvez le prix moyen d'une chambre."
"SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType;","Quel est le prix de base moyen des chambres, pour chaque type de lit ?"
SELECT sum(maxOccupancy) FROM Rooms WHERE decor = 'modern';,Quel est le nombre total de personnes qui pourraient séjourner dans les chambres modernes de cette auberge ?
SELECT sum(maxOccupancy) FROM Rooms WHERE decor = 'modern';,Combien de personnes au total peuvent séjourner dans les chambres modernes de cette auberge ?
SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;,Quel type de décor a le moins de réservations ?
SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;,Quel est le type de décoration le moins populaire ?
SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids;,Indiquez combien de fois le nombre de personnes dans la pièce a atteint l'occupation maximale de la pièce. Le nombre de personnes comprend les adultes et les enfants.
SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.maxOccupancy = T1.Adults + T1.Kids;,Combien de fois le nombre d'adultes et d'enfants séjournant dans une chambre a-t-il atteint la capacité maximale de la chambre ?
"SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0",Trouvez les noms et prénoms des personnes qui ont payé plus que le prix de base des chambres.
"SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0",Quels sont les noms et prénoms des personnes qui ont payé plus que le prix de base des chambres ?
SELECT count(*) FROM Rooms;,Combien y a-t-il de chambres ?
SELECT count(*) FROM Rooms;,Quel est le nombre total de chambres disponibles dans cette auberge ?
"SELECT count(*) FROM Rooms WHERE bedType = ""King"";",Trouver le nombre de chambres avec un lit king.
"SELECT count(*) FROM Rooms WHERE bedType = ""King"";",Combien de chambres disposent d'un lit king-size ?
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType;",Trouvez le nombre de chambres pour chaque type de lit.
"SELECT bedType , count(*) FROM Rooms GROUP BY bedType;",Quel est le nombre de chambres pour chaque type de lit ?
SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;,Trouvez le nom de la chambre avec l'occupation maximale.
SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;,Comment s'appelle la salle qui peut accueillir le plus de monde ?
"SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;",Trouvez l'identifiant et le nom de la chambre à prix de base la plus chère.
"SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;",Quelle chambre a le prix de base le plus élevé ?
"SELECT roomName , bedType FROM Rooms WHERE decor = ""traditional"";",Indiquez le type de lit et le nom de toutes les chambres traditionnelles.
"SELECT roomName , bedType FROM Rooms WHERE decor = ""traditional"";",Quels sont le type de lit et le nom de toutes les chambres à la décoration traditionnelle ?
"SELECT decor , count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor;",Trouvez le nombre de chambres avec lit king pour chaque type de décor.
"SELECT decor , count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor;",Combien de chambres disposent de lits king-size ? Indiquez le nombre pour chaque type de décor.
"SELECT decor , avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor;",Trouvez le prix moyen et minimum des chambres dans différents décors.
"SELECT decor , avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor;",Quel est le minimum moyen et le prix des chambres pour chaque décor différent.
SELECT roomName FROM Rooms ORDER BY basePrice;,Indiquez le nom de toutes les chambres triées par leurs prix.
SELECT roomName FROM Rooms ORDER BY basePrice;,Triez toutes les chambres en fonction du prix. Signalez simplement les noms des chambres.
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor;",Trouvez le nombre de chambres avec un prix supérieur à 120 pour un décor différent.
"SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor;","Combien de chambres coûtent plus de 120, pour chaque décor différent ?"
"SELECT roomName FROM Rooms WHERE bedType = ""King"" OR bedType = ""Queen"";",Indiquez le nom des chambres avec lit king ou queen.
"SELECT roomName FROM Rooms WHERE bedType = ""King"" OR bedType = ""Queen"";",Quels sont les noms des chambres dotées d'un lit king-size ou queen-size ?
SELECT count(DISTINCT bedType) FROM Rooms;,Combien y a-t-il de types de lits différents ?
SELECT count(DISTINCT bedType) FROM Rooms;,Trouvez le nombre de types de lits distincts disponibles dans cette auberge.
"SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;",Trouvez le nom et l'identifiant des 3 chambres les plus chères.
"SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;",Quels sont le nom et l'identifiant des trois chambres les plus chères ?
SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg(basePrice) FROM Rooms );,Trouver le nom des chambres dont le prix est supérieur au prix moyen.
SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg(basePrice) FROM Rooms );,Comment s'appellent les chambres qui coûtent plus cher que la moyenne.
SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations),Trouvez le nombre de chambres qui n'ont pas de réservation.
SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations),Combien de chambres n'ont pas encore été réservées ?
"SELECT T2.roomName , count(*) , T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room",Renvoyez le nom et le nombre de réservations effectuées pour chacune des chambres.
"SELECT T2.roomName , count(*) , T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room","Pour chaque chambre, retrouvez son nom et le nombre de réservations effectuées pour celle-ci."
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count(*) > 60,Retrouvez les noms des chambres qui ont été réservées plus de 60 fois.
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count(*) > 60,Comment s'appellent les chambres dont la fréquence de réservation dépasse 60 fois ?
SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150,Trouver le nom des chambres dont le prix de base est compris entre 120 et 150.
SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150,Quelles chambres coûtent entre 120 et 150 ? Donnez-moi les noms des chambres.
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%',Retrouver le nom des chambres réservées par certains clients dont le prénom contient ROY.
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%',"Comment s'appellent les chambres réservées par les clients dont le prénom comporte en partie ""ROY"" ?"
SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax',quels sont les détails des maîtres cmi qui ont le code de référence croisé 'Taxe'?
"SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*) >= 1",Quel est l'identifiant de référence croisée cmi associé à au moins une entrée de taxe d'habitation ? Indiquez l'ID de référence croisée et le code système source.
"SELECT T2.cmi_cross_ref_id , T2.master_customer_id , count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id","Combien de tarifs professionnels sont liés à chaque référence croisée cmi ? Lister l'ID de référence croisée, l'ID client principal et le n"
"SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id ORDER BY T2.council_tax_id","Quel est le code du système de source fiscale lié aux avantages et aux trop-perçus ? Indiquez le code et l'identifiant de l'avantage, triez par identifiant de l'avantage."
"SELECT T1.source_system_code , T1.master_customer_id , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id",Quel est le code système source des taxes et l'identifiant client principal des taxes liées à chaque identifiant d'amende de stationnement ?
"SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id WHERE T3.cmi_details != 'Schmidt , Kertzmann and Lubowitz'","Quels sont les numéros d'identification fiscale des arriérés de loyer liés à l'index maître des clients dont le détail n'est pas 'Schmidt, Kertzmann et Lubowitz' ?"
SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.source_system_code = 'Electoral' OR T2.source_system_code = 'Tax',Quels sont les identifiants de registre des registres électoraux qui ont le code de système source de référence croisée « Électoral » ou « Fiscal » ?
SELECT count(DISTINCT source_system_code) FROM CMI_cross_references,Combien y a-t-il de code système source différent pour les références croisées cmi ?
SELECT * FROM customer_master_index ORDER BY cmi_details DESC,Répertoriez toutes les informations sur l'index principal des clients et triez-les par détails dans l'ordre décroissant.
"SELECT council_tax_id , cmi_cross_ref_id FROM parking_fines",Énumérez les numéros d'identification fiscale du conseil et leurs références croisées cmi associées de toutes les amendes de stationnement.
SELECT count(*) FROM rent_arrears,Combien de taxes d'habitation sont perçues pour les impayés de loyer ?
"SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb , Becker and Wyman'","Quels sont les codes distincts du système source de références croisées qui sont liés aux détails principaux du client « Gottlieb, Becker et Wyman » ?"
SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines,Quel identifiant de référence croisée cmi n'est lié à aucune taxe de stationnement ?
SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%',Quel code de système source distinct inclut la sous-chaîne « en » ?
SELECT count(*) FROM party,Combien y a-t-il de fêtes ?
SELECT count(*) FROM party,Comptez le nombre de fêtes.
SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC,Énumérez les thèmes des fêtes par ordre croissant du nombre d'hôtes.
SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC,Quels sont les thèmes des soirées classés par nombre d'hôtes de manière ascendante ?
"SELECT Party_Theme , LOCATION FROM party",Quels sont les thèmes et les lieux des soirées ?
"SELECT Party_Theme , LOCATION FROM party",Donnez-moi le thème et le lieu de chaque fête.
"SELECT First_year , Last_year FROM party WHERE Party_Theme = ""Spring"" OR Party_Theme = ""Teqnology""","Afficher la première année et la dernière année des soirées à thème ""Printemps"" ou ""Teqnologie""."
"SELECT First_year , Last_year FROM party WHERE Party_Theme = ""Spring"" OR Party_Theme = ""Teqnology""",Quelles sont la première année et la dernière année des soirées dont le thème est « Printemps » ou « Teqnologie » ?
SELECT avg(Number_of_hosts) FROM party,Quel est le nombre moyen d'hôtes pour les fêtes ?
SELECT avg(Number_of_hosts) FROM party,Calculez le nombre moyen d'hôtes pour les fêtes.
SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1,Quel est le lieu de la fête avec le plus d'hôtes ?
SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1,Quelle fête avait le plus d'hôtes ? Donnez-moi le lieu de la fête.
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality",Affichez les différentes nationalités ainsi que le nombre d'hôtes de chaque nationalité.
"SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality",Combien d'hôtes compte chaque nationalité ? Indiquez la nationalité et le nombre.
SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,Afficher la nationalité la plus courante des hôtes.
SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,Quelle nationalité a le plus d'hôtes ?
SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35,Affichez les nations qui ont à la fois des hôtes de plus de 45 ans et des hôtes de moins de 35 ans.
SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35,Quels pays ont à la fois des hôtes âgés de plus de 45 ans et des hôtes âgés de moins de 35 ans ?
"SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",Montrez les thèmes des fêtes et les noms des hôtes de la fête.
"SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID","Pour chaque fête, retournez son thème et le nom de son hôte."
"SELECT T3.Location , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID ORDER BY T2.Age",Affichez les emplacements des fêtes et les noms des hôtes de la fête par ordre croissant d'âge de l'hôte.
"SELECT T3.Location , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID ORDER BY T2.Age","Pour chaque fête, trouvez son emplacement et le nom de son hôte. Triez le résultat dans l'ordre croissant de l'âge de l'hôte."
SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50,Afficher les emplacements des fêtes avec des hôtes de plus de 50 ans.
SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50,Quelles parties ont des hôtes âgés de plus de 50 ans ? Donnez-moi les lieux de la fête.
SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20,Afficher les noms d'hôtes pour les parties avec un nombre d'hôtes supérieur à 20.
SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20,Quelles soirées ont plus de 20 hôtes ? Donnez-moi les noms des hôtes pour ces fêtes.
"SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",Indiquez le nom et la nationalité de l'hôte le plus ancien.
"SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1",Quels sont le nom et la nationalité de l'hôte le plus âgé ?
SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host),Dressez la liste des noms des hôtes qui n'ont été hôtes d'aucune fête dans notre dossier.
SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host),Quels sont les noms des hôtes qui n'ont organisé aucune fête dans notre dossier ?
"SELECT region_code , region_name FROM region ORDER BY region_code",Afficher tous les codes de région et les noms de région triés par codes.
"SELECT region_code , region_name FROM region ORDER BY region_code","Quels sont les codes et les noms de toutes les régions, triés par codes ?"
SELECT region_name FROM region ORDER BY region_name,Listez tous les noms de régions par ordre alphabétique.
SELECT region_name FROM region ORDER BY region_name,Quels sont les noms des régions par ordre alphabétique ?
SELECT region_name FROM region WHERE region_name != 'Denmark',Afficher les noms de toutes les régions à l'exception du Danemark.
SELECT region_name FROM region WHERE region_name != 'Denmark',Renvoie les noms de toutes les régions autres que le Danemark.
SELECT count(*) FROM storm WHERE Number_Deaths > 0,Combien de tempêtes ont enregistré des décès ?
SELECT count(*) FROM storm WHERE Number_Deaths > 0,Comptez le nombre de tempêtes dans lesquelles au moins 1 personne est morte.
"SELECT name , dates_active , number_deaths FROM storm WHERE number_deaths >= 1","Nom de la liste, dates actives et nombre de décès pour toutes les tempêtes avec au moins 1 décès."
"SELECT name , dates_active , number_deaths FROM storm WHERE number_deaths >= 1","Quels sont les noms, les dates actives et le nombre de décès pour les tempêtes qui ont fait 1 mort ou plus ?"
"SELECT avg(damage_millions_USD) , max(damage_millions_USD) FROM storm WHERE max_speed > 1000",Affiche les dégâts moyens et maximaux pour toutes les tempêtes avec une vitesse maximale supérieure à 1000.
"SELECT avg(damage_millions_USD) , max(damage_millions_USD) FROM storm WHERE max_speed > 1000",Quels sont les dommages moyens et maximaux en millions pour les tempêtes ayant une vitesse maximale supérieure à 1 000 ?
"SELECT sum(number_deaths) , sum(damage_millions_USD) FROM storm WHERE max_speed > (SELECT avg(max_speed) FROM storm)",Quel est le nombre total de morts et de dégâts pour toutes les tempêtes avec une vitesse maximale supérieure à la moyenne ?
"SELECT sum(number_deaths) , sum(damage_millions_USD) FROM storm WHERE max_speed > (SELECT avg(max_speed) FROM storm)",Renvoie le nombre total de morts et de dommages totaux en millions pour les tempêtes dont la vitesse maximale était supérieure à la moyenne.
"SELECT name , damage_millions_USD FROM storm ORDER BY max_speed DESC",Répertoriez le nom et les dégâts de toutes les tempêtes dans un ordre décroissant de vitesse maximale.
"SELECT name , damage_millions_USD FROM storm ORDER BY max_speed DESC","Quels sont les noms et les dégâts en millions pour les tempêtes, classés par leur vitesse maximale descendante ?"
SELECT count(DISTINCT region_id) FROM affected_region,Combien de régions sont concernées ?
SELECT count(DISTINCT region_id) FROM affected_region,Comptez le nombre de différentes régions touchées.
SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region),Afficher le nom des régions non concernées.
SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region),Quels sont les noms des régions qui n'ont pas été touchées?
"SELECT T1.region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",Afficher le nom des régions et le nombre de tempêtes pour chaque région.
"SELECT T1.region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",Combien de tempêtes se sont produites dans chaque région ?
"SELECT T1.name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",Indiquez le nom des tempêtes et le nombre de régions touchées pour chaque tempête.
"SELECT T1.name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",Combien de régions ont été touchées par chaque tempête ?
"SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",Quel est le nom de la tempête et la vitesse maximale qui ont affecté le plus grand nombre de régions ?
"SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",Renvoie le nom et la vitesse maximale de la tempête qui a affecté le plus de régions.
SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region),Afficher le nom des tempêtes qui n'ont pas enregistré de région affectée.
SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region),Comment s'appellent les tempêtes qui n'ont touché aucune région ?
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count(*) >= 2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected) >= 10,Afficher le nom de la tempête avec au moins deux régions et 10 villes touchées.
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count(*) >= 2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected) >= 10,Quels sont les noms des tempêtes qui ont touché à la fois deux régions ou plus et un total de 10 villes ou plus ?
SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count(*) >= 2,Afficher tous les noms de tempêtes sauf ceux qui ont au moins deux régions affectées.
SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count(*) >= 2,Comment s'appellent les tempêtes qui n'ont pas touché deux régions ou plus ?
SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10,Quels sont les noms des régions touchées par la tempête avec un nombre de morts d'au moins 10 ?
SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10,Renvoie les noms des régions touchées par les tempêtes qui ont fait au moins 10 morts.
SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark',"Afficher tous les noms de tempête affectant la région ""Danemark""."
SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark',Comment s'appellent les tempêtes qui ont touché le Danemark ?
SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*) >= 2,Affichez le nom de la région avec au moins deux tempêtes.
SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*) >= 2,Quels sont les noms des régions avec deux tempêtes ou plus ?
SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1,Trouvez les noms des régions qui ont été touchées par la tempête qui a tué le plus grand nombre de personnes.
SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1,Quels sont les noms des régions qui ont été touchées par la tempête dans laquelle le plus de personnes sont mortes ?
SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania',Trouvez le nom de la tempête qui a touché les régions de l'Afghanistan et de l'Albanie.
SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania',Comment s'appellent les tempêtes qui ont touché à la fois les régions d'Afghanistan et d'Albanie ?
SELECT count(*) FROM county,Combien y a-t-il de comtés au total ?
SELECT count(*) FROM county,Comptez le nombre total de comtés.
"SELECT County_name , Population FROM county",Afficher le nom du comté et la population de tous les comtés.
"SELECT County_name , Population FROM county",Quels sont le nom et la population de chaque comté ?
SELECT avg(Population) FROM county,Afficher la population moyenne de tous les comtés.
SELECT avg(Population) FROM county,"En moyenne, quelle est la population des comtés ?"
"SELECT max(Population) , min(Population) FROM county",Renvoie la population maximale et minimale parmi tous les comtés.
"SELECT max(Population) , min(Population) FROM county",Quelle est la population maximale et minimale des comtés ?
SELECT DISTINCT District FROM election,Afficher tous les districts distincts pour les élections.
SELECT DISTINCT District FROM election,Quelles sont les circonscriptions distinctes pour les élections ?
"SELECT Zip_code FROM county WHERE County_name = ""Howard""","Montrez le code postal du comté avec le nom ""Howard""."
"SELECT Zip_code FROM county WHERE County_name = ""Howard""","Quel est le code postal du comté nommé ""Howard"" ?"
SELECT Delegate FROM election WHERE District = 1,Montrez le délégué du district 1 en élection.
SELECT Delegate FROM election WHERE District = 1,Qui est le délégué du district 1 aux élections ?
"SELECT Delegate , Committee FROM election",Afficher les informations sur les délégués et le comité des élections.
"SELECT Delegate , Committee FROM election",Quelles sont les informations sur les délégués et les comités pour chaque dossier d'élection ?
SELECT count(DISTINCT Governor) FROM party,Combien y a-t-il de gouverneurs distincts ?
SELECT count(DISTINCT Governor) FROM party,Comptez le nombre de gouverneurs distincts.
"SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = ""Democratic""",Montrez le lieutenant-gouverneur et le contrôleur du parti démocrate.
"SELECT Lieutenant_Governor , Comptroller FROM party WHERE Party = ""Democratic""",Qui sont le lieutenant-gouverneur et le contrôleur du parti démocrate?
"SELECT DISTINCT YEAR FROM party WHERE Governor = ""Eliot Spitzer""","Dans quelles années distinctes était le gouverneur ""Eliot Spitzer"" ?"
"SELECT DISTINCT YEAR FROM party WHERE Governor = ""Eliot Spitzer""","Trouvez les années distinctes où le gouverneur a été nommé ""Eliot Spitzer""."
SELECT * FROM election,Afficher toutes les informations sur l'élection.
SELECT * FROM election,Renvoyez toutes les informations pour chaque enregistrement d'élection.
"SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",Montrez les délégués et les noms des comtés auxquels ils appartiennent.
"SELECT T2.Delegate , T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District","Quels sont le délégué et le nom du comté auquel ils appartiennent, pour chaque comté ?"
SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population < 100000,Quels délégués viennent de comtés dont la population est inférieure à 100 000 ?
SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population < 100000,Trouvez les délégués des comtés dont la population est inférieure à 100 000.
SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000,Combien de délégués distincts proviennent de comtés dont la population est supérieure à 50 000 ?
SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000,Comptez le nombre de délégués distincts provenant de comtés dont la population est supérieure à 50 000.
"SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = ""Appropriations""","Quels sont les noms des comtés auxquels appartiennent les délégués au comité ""Crédits"" ?"
"SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = ""Appropriations""","À quel comté appartiennent les délégués au comité ""Crédits"" ? Donnez-moi les noms des comtés."
"SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID",Montrez les délégués et les noms du parti auquel ils appartiennent.
"SELECT T1.Delegate , T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID","Pour chaque délégué, trouvez le nom du parti dont il fait partie."
SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1,Qui étaient les gouverneurs des partis associés aux délégués du district 1 ?
SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1,Trouvez les partis associés aux délégués du district 1. Qui a été gouverneur des partis ?
SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2,Qui étaient les contrôleurs des partis associés aux délégués du district 1 ou du district 2 ?
SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2,Trouvez les partis associés aux délégués du district 1 ou 2. Qui a exercé les fonctions de contrôleur des partis ?
"SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Democratic""",Renvoyez tous les comités qui ont des délégués du parti démocrate.
"SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Democratic""",Quels comités ont des délégués du parti démocrate ?
"SELECT T1.County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",Indiquez le nom de chaque comté ainsi que le nombre correspondant de délégués de ce comté.
"SELECT T1.County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id","Pour chaque comté, trouvez le nom du comté et le nombre de délégués de ce comté."
"SELECT T2.Party , COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",Indiquez le nom de chaque parti et le nombre correspondant de délégués de ce parti.
"SELECT T2.Party , COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party","Pour chaque parti, indiquez le nom du parti et le nombre de délégués de ce parti."
SELECT County_name FROM county ORDER BY Population ASC,Renvoie les noms de tous les comtés triés par population dans l'ordre croissant.
SELECT County_name FROM county ORDER BY Population ASC,Triez les noms de tous les comtés par ordre croissant de population.
SELECT County_name FROM county ORDER BY County_name DESC,Renvoie les noms de tous les comtés triés par nom de comté dans l'ordre alphabétique décroissant.
SELECT County_name FROM county ORDER BY County_name DESC,Triez les noms de tous les comtés par ordre alphabétique décroissant.
SELECT County_name FROM county ORDER BY Population DESC LIMIT 1,Montrez le nom du comté avec la plus grande population.
SELECT County_name FROM county ORDER BY Population DESC LIMIT 1,Quel département a la plus grande population ? Donnez-moi le nom du comté.
SELECT County_name FROM county ORDER BY Population ASC LIMIT 3,Montrez les 3 comtés avec la plus petite population.
SELECT County_name FROM county ORDER BY Population ASC LIMIT 3,Quels sont les 3 départements les moins peuplés ? Donnez-moi les noms des comtés.
SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT(*) >= 2,Afficher les noms des comtés qui ont au moins deux délégués.
SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT(*) >= 2,Quels comtés ont deux délégués ou plus ? Donnez-moi les noms des comtés.
SELECT Party FROM party GROUP BY Party HAVING COUNT(*) >= 2,Afficher le nom de la partie qui a au moins deux enregistrements.
SELECT Party FROM party GROUP BY Party HAVING COUNT(*) >= 2,Quel parti a deux enregistrements ou plus ?
SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1,Afficher le nom du parti qui a le plus de délégués.
SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1,Quel parti a le plus grand nombre de délégués ?
SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1,Montrez les personnes qui ont été gouverneur le plus de fois.
SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1,Quelles personnes ont le plus souvent quitté le poste de gouverneur ?
"SELECT Comptroller , COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1",Indiquez les personnes qui ont été contrôleur le plus de fois et le nombre de fois correspondant.
"SELECT Comptroller , COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1",Quelles personnes ont le plus souvent quitté le poste de contrôleur ? Donnez-moi le nom de la personne et le nombre de fréquences.
SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election),Quels sont les noms des partis qui n'ont pas de délégués aux élections ?
SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election),Quels partis n'avaient pas de délégués aux élections ?
"SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = ""Appropriations"" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = ""Economic Matters""","Comment s'appellent les partis qui ont à la fois des délégués au comité ""Crédits"" et"
"SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = ""Appropriations"" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = ""Economic Matters""","Quels partis ont des délégués à la fois dans la commission ""Crédits"" et dans la commission ""Affaires économiques"" ?"
"SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Democratic"" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Liberal""",Quels comités ont des délégués du parti démocrate et du parti libéral ?
"SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Democratic"" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = ""Liberal""",Trouvez les comités qui ont des délégués à la fois du parti démocrate et du parti libéral.
SELECT count(*) FROM journalist,Combien y a-t-il de journalistes ?
SELECT Name FROM journalist ORDER BY Years_working ASC,Dressez la liste des noms des journalistes par ordre croissant d'années de travail.
"SELECT Nationality , Age FROM journalist",Quels sont les nationalités et les âges des journalistes ?
"SELECT Name FROM journalist WHERE Nationality = ""England"" OR Nationality = ""Wales""","Afficher les noms des journalistes de ""l'Angleterre"" ou du ""Pays de Galles""."
SELECT avg(Years_working) FROM journalist,Quel est le nombre moyen d'années passées à travailler comme journaliste ?
SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1,Quelle est la nationalité du journaliste avec le plus grand nombre d'années de travail ?
"SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality",Indiquez les différentes nationalités et le nombre de journalistes de chaque nationalité.
SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,Afficher la nationalité la plus courante pour les journalistes.
SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3,Montrez les nations qui ont à la fois des journalistes avec plus de 10 ans de travail et des journalistes avec moins de 3 ans de travail.
"SELECT Date , Name , venue FROM event ORDER BY Event_Attendance DESC","Affichez les dates, les lieux et les noms des événements par ordre décroissant de fréquentation."
"SELECT T3.Name , T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID",Indiquez les noms des journalistes et les dates des événements qu'ils ont rapportés.
"SELECT T3.Name , T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID ORDER BY T2.Event_Attendance ASC",Afficher les noms des journalistes et les noms des événements qu'ils ont rapportés par ordre croissant
"SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name",Indiquez les noms des journalistes et le nombre d'événements qu'ils ont rapportés.
SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*) > 1,Affichez les noms des journalistes qui ont rapporté plus d'un événement.
SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report),Dressez la liste des noms des journalistes qui n'ont rapporté aucun événement.
"SELECT avg(Event_Attendance) , max(Event_Attendance) FROM event",quelles sont les fréquentations moyennes et maximales de tous les événements ?
"SELECT avg(t1.age) , avg(Years_working) , t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",Trouvez l'âge moyen et la durée d'expérience professionnelle des journalistes travaillant sur différents types de rôles.
"SELECT venue , name FROM event ORDER BY Event_Attendance DESC LIMIT 2",Énumérez les lieux et les noms des événements qui ont le plus grand nombre de personnes présentes.
SELECT ResName FROM Restaurant;,Montrez-moi tous les restaurants.
"SELECT Address FROM Restaurant WHERE ResName = ""Subway"";",Quelle est l'adresse du restaurant Subway ?
"SELECT Rating FROM Restaurant WHERE ResName = ""Subway"";",Quelle est la note du restaurant Subway ?
SELECT ResTypeName FROM Restaurant_Type;,Répertorier tous les types de restaurants.
"SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = ""Sandwich"";",Quelle est la description du type de restaurant Sandwich ?
"SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;",Quels restaurants ont la note la plus élevée ? Indiquez le nom du restaurant et sa note.
"SELECT Age FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";",Quel âge a l'étudiante Linda Smith ?
"SELECT Sex FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";",Quel est le sexe de l'étudiante Linda Smith ?
"SELECT Fname , Lname FROM Student WHERE Major = 600;",Énumérez tous les prénoms et noms de famille des étudiants qui se sont spécialisés en 600.
"SELECT city_code FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";",Dans quelle ville vit l'étudiante Linda Smith ?
SELECT count(*) FROM Student WHERE Advisor = 1121;,Le conseiller 1121 a combien d'étudiants ?
"SELECT Advisor , count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;",Quel conseiller a le plus d'étudiants ? Liste conseiller et le nombre d'étudiants.
"SELECT Major , count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;",Quelle majeure a le moins d'étudiants ? Indiquez la majeure et le nombre d'étudiants.
"SELECT Major , count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;",Quelle majeure compte entre 2 et 30 étudiants ? Liste majeure et le nombre d'étudiants.
"SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major = 600;",Quel âge d'étudiant a plus de 18 ans et se spécialise en 600 ? Indiquez le prénom et le nom de chaque élève.
"SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F';",Énumérez toutes les étudiantes âgées de plus de 18 ans qui ne se spécialisent pas en 600. Énumérez le prénom et le nom des étudiantes.
SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich',Combien de restaurant est le restaurant de type Sandwich ?
"SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"";",Combien de temps l'étudiante Linda Smith passe-t-elle au restaurant au total ?
"SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway"";",Combien de fois l'étudiante Linda Smith a-t-elle visité Subway ?
"SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway"";",Quand Linda Smith a-t-elle visité Subway ?
"SELECT Restaurant.ResName , sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;",Dans quel restaurant les élèves ont-ils passé le moins de temps ? Indiquez le restaurant et le temps total passé par les étudiants.
"SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;",Quel élève a fréquenté le restaurant le plus souvent ? Indiquez le prénom et le nom de famille de l'élève.
SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success',Trouvez les identifiants des commandes dont le statut est 'Succès'.
"SELECT t1.product_name , t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1",Trouvez le nom et le prix du produit qui a été commandé le plus grand nombre de fois.
SELECT count(DISTINCT payment_method) FROM customers,Combien y a-t-il de modes de paiement différents ?
SELECT truck_details FROM trucks ORDER BY truck_licence_number,Afficher les détails de tous les camions dans l'ordre de leur numéro de licence.
SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1,Trouvez le nom du produit le plus cher.
SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1,Quel est le nom du produit avec le prix le plus élevé ?
SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1,Comment s'appelle le produit le plus cher ?
SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1,Dites-moi le nom du produit le plus cher.
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = 'California',Trouvez les noms de clients qui ne vivent pas dans l'État de Californie.
"SELECT customer_email , customer_name FROM customers WHERE payment_method = 'Visa'",Listez les noms et e-mails des clients qui ont payé par carte Visa.
"SELECT t1.customer_name , t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = 'California'",Trouvez les noms et numéros de téléphone des clients vivant dans l'État de Californie.
SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees),Trouvez les États qui n'ont aucun employé dans leur dossier.
"SELECT customer_name , customer_phone , customer_email FROM Customers ORDER BY date_became_customer","Répertoriez les noms, numéros de téléphone et e-mails de tous les clients triés par date à laquelle ils sont devenus clients."
SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5,Trouvez le nom des 5 premiers clients.
SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1,Trouvez le moyen de paiement le plus fréquemment utilisé.
SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1,Quel mode de paiement est utilisé par la plupart des clients ?
SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1,Trouvez le moyen de paiement le plus fréquemment utilisé.
SELECT route_name FROM Delivery_Routes ORDER BY route_name,Énumérez les noms de tous les itinéraires par ordre alphabétique.
SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de l'itinéraire qui a le plus grand nombre de livraisons.
"SELECT t2.state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county",Dressez la liste des noms d'état et le nombre de clients vivant dans chaque état.
SELECT count(*) FROM authors,Combien y a-t-il d'auteurs ?
SELECT count(*) FROM authors,Comptez le nombre d'auteurs.
SELECT count(*) FROM inst,Combien y a-t-il d'établissements ?
SELECT count(*) FROM inst,Comptez le nombre d'établissements.
SELECT count(*) FROM papers,Combien d'articles sont publiés au total ?
SELECT count(*) FROM papers,Comptez le nombre total de papiers.
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Quels sont les titres des articles publiés par ""Jeremy Gibbons"" ?"
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Retrouvez les titres de tous les articles écrits par ""Jeremy Gibbons"""
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Retrouvez tous les articles publiés par ""Aaron Turon""."
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Retrouvez les titres de tous les articles écrits par ""Aaron Turon""."
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Trouvez les articles dont l'auteur est ""Olin Shivers""."
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Quels articles l'auteur ""Olin Shivers"" a-t-il écrits ? Donnez-moi les titres des papiers."
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Quels articles ont ""Stephanie Weirich"" comme auteur ?"
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Jeremy"" AND t1.lname = ""Gibbons""","Trouvez les titres des articles écrits par l'auteur ""Stephanie Weirich""."
"SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Atsushi"" AND t1.lname = ""Ohori""","Combien d'articles ""Atsushi Ohori"" a-t-il publiés ?"
"SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = ""Atsushi"" AND t1.lname = ""Ohori""","De combien d'articles ""Atsushi Ohori"" est-il l'auteur ?"
"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = ""Matthias"" AND t1.lname = ""Blume""","Comment s'appelle l'institution à laquelle appartient ""Matthias Blume"" ?"
"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = ""Matthias"" AND t1.lname = ""Blume""","A quelle institution appartient l'auteur ""Matthias Blume"" ? Donnez-moi le nom de l'établissement."
"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = ""Matthias"" AND t1.lname = ""Blume""","A quelle institution appartient ""Katsuhiro Ueno"" ?"
"SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = ""Matthias"" AND t1.lname = ""Blume""","Comment s'appelle l'institution à laquelle appartient l'auteur ""Katsuhiro Ueno"" ?"
"SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""University of Oxford""",Qui appartient à l'institution « Université d'Oxford » ? Afficher les prénoms et les noms de famille.
"SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""University of Oxford""",Trouvez les prénoms et les noms des auteurs dont l'institution affiliée est « Université d'Oxford ».
"SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""University of Oxford""","Quels auteurs appartiennent à l'institution ""Google"" ? Afficher les prénoms et les noms de famille."
"SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""University of Oxford""","Trouvez les prénoms et les noms des auteurs dont l'institution affiliée est ""Google""."
"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = ""Binders Unbound""","Quels sont les noms de famille de l'auteur de l'article intitulé ""Binders Unbound"" ?"
"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = ""Binders Unbound""","Qui est l'auteur de l'article intitulé ""Binders Unbound"" ? Donnez-moi le nom de famille."
"SELECT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = ""Nameless , Painless""","Trouvez le prénom et le nom du ou des auteurs qui ont écrit l'article ""Nameless, Painless""."
"SELECT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = ""Nameless , Painless""","Quels sont le prénom et le nom de l'auteur qui a publié l'article intitulé ""Nameless, Painless"" ?"
"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Indiana University""","Quels sont les articles publiés sous l'institution ""Indiana University"" ?"
"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Indiana University""","Énumérez les titres des articles dont les auteurs sont issus de l'institution ""Indiana University""."
"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Indiana University""","Retrouvez tous les articles publiés par l'institution ""Google""."
"SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Indiana University""","Quels articles ont été rédigés par des auteurs de l'institution ""Google"" ?"
"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Tokohu University""","Combien d'articles sont publiés par l'institution ""Université de Tokohu"" ?"
"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Tokohu University""","Retrouvez le nombre d'articles publiés par les auteurs de l'institution ""Tokohu University""."
"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Tokohu University""","Trouver le nombre d'articles publiés par l'institution ""University of Pennsylvania""."
"SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = ""Tokohu University""","Combien d'articles sont écrits par des auteurs de l'institution ""University of Pennsylvania"" ?"
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = ""USA"" AND t2.authorder = 2 AND t1.lname = ""Turon""","Quel article est publié dans une institution aux ""USA"" et a ""Turon"" comme deuxième auteur ?"
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = ""USA"" AND t2.authorder = 2 AND t1.lname = ""Turon""","Trouvez des articles dont le deuxième auteur porte le nom de famille ""Turon"" et est affilié à une institution dans le pays ""USA""."
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = ""USA"" AND t2.authorder = 2 AND t1.lname = ""Turon""","Trouver les titres des articles dont le premier auteur est affilié à une institution dans le pays ""Japon"" et dont le nom de famille est ""Ohori"" ?"
"SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = ""USA"" AND t2.authorder = 2 AND t1.lname = ""Turon""",Quel premier auteur d'articles est affilié à une institution dans le pays « Japon » et porte le nom de famille « Ohori » ? Donnez-moi les titres des journaux.
"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.fname , t1.lname ORDER BY count(*) DESC LIMIT 1",Quel est le nom de famille de l'auteur qui a publié le plus d'articles ?
"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.fname , t1.lname ORDER BY count(*) DESC LIMIT 1",Quel auteur a écrit le plus d'articles ? Trouvez son nom de famille.
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1,Récupérez le pays qui a publié le plus d'articles.
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1,Trouvez le pays auquel le plus de journaux sont affiliés.
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de l'organisation qui a publié le plus grand nombre d'articles.
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1,Quelle institution a le plus de papiers? Trouver le nom de l'établissement.
"SELECT title FROM papers WHERE title LIKE ""%ML%""","Trouvez les titres des articles qui contiennent le mot ""ML""."
"SELECT title FROM papers WHERE title LIKE ""%ML%""","Quels articles ont la sous-chaîne ""ML"" dans leurs titres ? Renvoyez les titres des articles."
"SELECT title FROM papers WHERE title LIKE ""%ML%""","Quel titre d'article contient le mot ""Base de données"" ?"
"SELECT title FROM papers WHERE title LIKE ""%ML%""","Quels articles ont la sous-chaîne ""Database"" dans leurs titres ? Montrez les titres des articles."
"SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title LIKE ""%Functional%""","Trouvez les prénoms de tous les auteurs qui ont écrit un article dont le titre contient le mot ""Fonctionnel""."
"SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title LIKE ""%Functional%""","Qui a écrit un article dont le titre contient le mot ""Fonctionnel"" ? Renvoyez les prénoms des auteurs."
"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title LIKE ""%Monadic%""","Trouvez les noms de famille de tous les auteurs qui ont écrit un article dont le titre contient le mot ""monadique""."
"SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title LIKE ""%Monadic%""","Quels auteurs ont écrit un article dont le titre contient le mot ""monadique"" ? Renvoyez leurs noms de famille."
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder = (SELECT max(authorder) FROM authorship),Récupérez le titre de l'article qui compte le plus grand nombre d'auteurs.
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder = (SELECT max(authorder) FROM authorship),Quel article a le plus d'auteurs ? Donnez-moi le titre du papier.
"SELECT fname FROM authors WHERE lname = ""Ueno""","Quel est le prénom de l'auteur dont le nom est ""Ueno"" ?"
"SELECT fname FROM authors WHERE lname = ""Ueno""","Quels auteurs portent le nom de famille ""Ueno"" ? Listez leurs prénoms."
"SELECT lname FROM authors WHERE fname = ""Amal""","Trouver le nom de famille de l'auteur avec le prénom ""Amal""."
"SELECT lname FROM authors WHERE fname = ""Amal""","Quels auteurs ont le prénom ""Amal"" ? Énumérez leurs noms de famille."
SELECT fname FROM authors ORDER BY fname,Retrouvez les prénoms de tous les auteurs classés par ordre alphabétique.
SELECT fname FROM authors ORDER BY fname,Triez les prénoms de tous les auteurs par ordre alphabétique.
SELECT lname FROM authors ORDER BY lname,Récupérez tous les noms de famille des auteurs par ordre alphabétique.
SELECT lname FROM authors ORDER BY lname,Donnez-moi une liste de tous les noms d'auteurs classés par ordre alphabétique
"SELECT fname , lname FROM authors ORDER BY lname",Récupérez tous les noms et prénoms des auteurs dans l'ordre alphabétique des noms de famille.
"SELECT fname , lname FROM authors ORDER BY lname",Trier la liste de tous les noms et prénoms des auteurs par ordre alphabétique des noms de famille.
SELECT count(DISTINCT last_name) FROM actor,Combien de noms de famille différents les acteurs et actrices ont-ils ?
SELECT count(DISTINCT last_name) FROM actor,Comptez le nombre de noms de famille différents des acteurs.
SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1,Quel est le prénom le plus populaire des acteurs ?
SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1,Renvoie le prénom le plus courant parmi tous les acteurs.
"SELECT first_name , last_name FROM actor GROUP BY first_name , last_name ORDER BY count(*) DESC LIMIT 1",Quel est le nom complet le plus populaire des acteurs ?
"SELECT first_name , last_name FROM actor GROUP BY first_name , last_name ORDER BY count(*) DESC LIMIT 1",Renvoie le nom complet le plus courant parmi tous les acteurs.
SELECT district FROM address GROUP BY district HAVING count(*) >= 2,Quels quartiers ont au moins deux adresses ?
SELECT district FROM address GROUP BY district HAVING count(*) >= 2,Donnez les districts qui ont deux adresses ou plus.
"SELECT phone , postal_code FROM address WHERE address = '1031 Daugavpils Parkway'",Quel est le numéro de téléphone et le code postal de l'adresse 1031 Daugavpils Parkway?
"SELECT phone , postal_code FROM address WHERE address = '1031 Daugavpils Parkway'",Donnez le téléphone et le code postal correspondant à l'adresse '1031 Daugavpils Parkway'.
"SELECT T2.city , count(*) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1","Quelle ville a le plus d'adresses ? Indiquez le nom de la ville, le nombre d'adresses et l'identifiant de la ville."
"SELECT T2.city , count(*) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1","Quels sont le nom de la ville, l'identifiant et le nombre d'adresses correspondant à la ville la plus adressée ?"
SELECT count(*) FROM address WHERE district = 'California',Combien y a-t-il d'adresses dans le district de Californie ?
SELECT count(*) FROM address WHERE district = 'California',Comptez le nombre d'adresses dans le district de Californie.
"SELECT title , film_id FROM film WHERE rental_rate = 0.99 INTERSECT SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id HAVING count(*) < 3","Quel film est loué au prix de 0,99 et a moins de 3 dans l'inventaire ? Indiquez le titre et l'identifiant du film."
"SELECT title , film_id FROM film WHERE rental_rate = 0.99 INTERSECT SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id HAVING count(*) < 3","Quels sont le titre et l'identifiant du film qui a un taux de location de 0,99 et un inventaire inférieur à 3 ?"
SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia',Combien y a-t-il de villes en Australie ?
SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia',Comptez le nombre de villes en Australie.
SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count(*) >= 3,Quels pays ont au moins 3 villes ?
SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count(*) >= 3,Quels sont les pays qui contiennent 3 villes ou plus ?
SELECT payment_date FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa',Retrouvez toutes les dates de paiement pour les paiements d'un montant supérieur à 10 et les paiements traités par une personne du personnel avec le prénom Elsa.
SELECT payment_date FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa',Quelles sont les dates de paiement pour les paiements dont le montant est supérieur à 10 ou qui ont été traités par un membre du personnel dont le prénom est Elsa ?
SELECT count(*) FROM customer WHERE active = '1',Combien de clients ont une valeur active de 1 ?
SELECT count(*) FROM customer WHERE active = '1',Comptez le nombre de clients actifs.
"SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",Quel film a le taux de location le plus élevé ? Et quel est le tarif ?
"SELECT title , rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",Quels sont le titre et le tarif de location du film avec le tarif de location le plus élevé ?
"SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","Quel film a le plus grand nombre d'acteurs ou d'actrices ? Indiquez le nom du film, l'identifiant du film et la description."
"SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","Quels sont le titre, l'identifiant et la description du film avec le plus grand nombre d'acteurs ?"
"SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1","Quel acteur de cinéma (actrice) a joué le plus de films ? Indiquez son prénom, son nom et son identifiant d'acteur."
"SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1",Renvoie le nom complet et l'identifiant de l'acteur ou de l'actrice qui a joué dans le plus grand nombre de films.
"SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count(*) > 30",Quels acteurs de cinéma (actrices) ont joué un rôle dans plus de 30 films ? Indiquez son prénom et son nom de famille.
"SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count(*) > 30",Quels sont les noms complets des acteurs qui ont joué dans plus de 30 films ?
SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1,Quel magasin possède le plus d'articles ?
SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1,Quel est l'identifiant du magasin qui a le plus d'articles en stock ?
SELECT sum(amount) FROM payment,Quel est le montant total de tous les paiements ?
SELECT sum(amount) FROM payment,Renvoyez la somme de tous les montants de paiement.
"SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1","Quel client, qui a effectué au moins un paiement, a dépensé le moins d'argent ? Indiquez son prénom, son nom et son identifiant."
"SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1",Quels sont le nom complet et l'identifiant du client qui a le montant total de paiement le plus bas ?
SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF',Quel est le nom de genre du film HUNGER ROOF ?
SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF',Renvoie le nom de la catégorie à laquelle appartient le film 'HUNGER ROOF'.
"SELECT T2.name , T1.category_id , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id","Combien y a-t-il de films dans chaque catégorie ? Indiquez le nom du genre, l'identifiant du genre et le nombre."
"SELECT T2.name , T1.category_id , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id","Quels sont les noms et identifiants des différentes catégories, et combien de films y a-t-il dans chacune ?"
"SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1",Quel film a le plus de copies dans l'inventaire ? Indiquez à la fois le titre et l'identifiant.
"SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1",Quel est le titre et l'identifiant du film qui a le plus grand nombre de copies en inventaire ?
"SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1",Quel est le titre du film et l'identifiant d'inventaire de l'article de l'inventaire qui a été loué le plus souvent ?
"SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1",Renvoie le titre et l'identifiant d'inventaire du film le plus souvent loué.
SELECT count(DISTINCT language_id) FROM film,Combien de langues y a-t-il dans ces films ?
SELECT count(DISTINCT language_id) FROM film,Comptez le nombre de langues différentes dans ces films.
SELECT title FROM film WHERE rating = 'R',Quels sont tous les films classés R ? Lister les titres.
SELECT title FROM film WHERE rating = 'R',Renvoie les titres de tous les films avec une cote R.
SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE store_id = 1,Où se trouve le magasin 1 ?
SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE store_id = 1,Renvoyez l'adresse du magasin 1.
"SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1",Quel personnel a traité le moins de paiements ? Indiquez le nom complet et l'identifiant.
"SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1",Donnez le nom complet et l'identifiant du personnel qui a traité le moins de paiements.
SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK',Quelle langue le film AIRPORT POLLOCK utilise-t-il ? Indiquez le nom de la langue.
SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK',"Comment s'appelle la langue dans laquelle est tourné le film ""AIRPORT POLLOCK"" ?"
SELECT count(*) FROM store,Combien y a-t-il de magasins ?
SELECT count(*) FROM store,Comptez le nombre de magasins.
SELECT count(DISTINCT rating) FROM film,Combien de types de classements différents sont répertoriés ?
SELECT count(DISTINCT rating) FROM film,Comptez le nombre de classements de films différents.
SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%',"Quels films ont ""Scènes supprimées"" comme sous-chaîne dans la fonctionnalité spéciale ?"
SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%',"Renvoyez les titres des films qui incluent des ""scènes supprimées"" dans leur section spéciale."
SELECT count(*) FROM inventory WHERE store_id = 1,Combien d'articles en inventaire le magasin 1 a-t-il ?
SELECT count(*) FROM inventory WHERE store_id = 1,Comptez le nombre d'articles que le magasin 1 a en stock.
SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1,Quand le premier paiement a-t-il eu lieu ?
SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1,Quelle était la date du premier paiement ?
"SELECT T2.address , T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id = T1.address_id WHERE T1.first_name = 'LINDA'",Où habite le client qui se prénomme Linda ? Et quel est son email ?
"SELECT T2.address , T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id = T1.address_id WHERE T1.first_name = 'LINDA'",Renvoyer l'adresse et l'email du client avec le prénom Linda.
SELECT title FROM film WHERE LENGTH > 100 OR rating = 'PG' EXCEPT SELECT title FROM film WHERE replacement_cost > 200,"Retrouvez tous les films de plus de 100 minutes, ou classés PG, sauf ceux qui coûtent plus de 200 en remplacement. Lister les titres."
SELECT title FROM film WHERE LENGTH > 100 OR rating = 'PG' EXCEPT SELECT title FROM film WHERE replacement_cost > 200,Quels sont les titres des films qui durent plus de 100 minutes ou qui sont classés PG autres que ceux dont le remplacement coûte plus de 200 ?
"SELECT T1.first_name , T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1",Quels sont le prénom et le nom du client qui a effectué la première location ?
"SELECT T1.first_name , T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1",Renvoyez le nom complet du client qui a effectué la première location.
"SELECT DISTINCT T1.first_name , T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN customer AS T3 ON T2.customer_id = T3.customer_id WHERE T3.first_name = 'APRIL' AND T3.last_name = 'BURNS'",Quel est le nom complet du membre du personnel qui a loué un film à un client dont le prénom est April et le nom de famille Burns ?
"SELECT DISTINCT T1.first_name , T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN customer AS T3 ON T2.customer_id = T3.customer_id WHERE T3.first_name = 'APRIL' AND T3.last_name = 'BURNS'",Renvoyez le nom complet du personnel qui a fourni à un client le prénom April et le nom de famille Burns avec une location de film.
SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1,Quel magasin a le plus de clients ?
SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1,Renvoie l'identifiant du magasin avec le plus de clients.
SELECT amount FROM payment ORDER BY amount DESC LIMIT 1,Quel est le montant du paiement le plus élevé ?
SELECT amount FROM payment ORDER BY amount DESC LIMIT 1,Renvoie le montant du paiement le plus élevé.
SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa',Où habite le membre du personnel qui se prénomme Elsa ?
SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa',Donnez l'adresse du membre du personnel qui s'appelle Elsa.
SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date > '2005-08-23 02:06:01' ),Quels sont les prénoms des clients qui n'ont pas loué de films après '2005-08-23 02:06:01' ?
SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date > '2005-08-23 02:06:01' ),Renvoyez les prénoms des clients qui n'ont pas loué de film après la date '2005-08-23 02:06:01'.
SELECT count(*) FROM bank,Combien y a-t-il d'agences bancaires ?
SELECT count(*) FROM bank,Comptez le nombre d'agences bancaires.
SELECT sum(no_of_customers) FROM bank,Combien y a-t-il de clients ?
SELECT sum(no_of_customers) FROM bank,Quel est le nombre total de clients dans toutes les banques ?
SELECT sum(no_of_customers) FROM bank WHERE city = 'New York City',Trouvez le nombre de clients dans les banques à New York.
SELECT sum(no_of_customers) FROM bank WHERE city = 'New York City',Quel est le nombre total de clients qui utilisent les banques à New York ?
SELECT avg(no_of_customers) FROM bank WHERE state = 'Utah',Trouvez le nombre moyen de clients dans toutes les banques de l'état de l'Utah.
SELECT avg(no_of_customers) FROM bank WHERE state = 'Utah',Quel est le nombre moyen de clients dans les banques de l'État de l'Utah ?
SELECT avg(no_of_customers) FROM bank,Trouvez le nombre moyen de clients dans toutes les banques.
SELECT avg(no_of_customers) FROM bank,Quel est le nombre moyen de clients bancaires ?
"SELECT city , state FROM bank WHERE bname = 'morningside'",Trouvez la ville et l'état de la succursale bancaire nommée Morningside.
"SELECT city , state FROM bank WHERE bname = 'morningside'",Dans quelle ville et quel état se trouve la banque qui porte le nom de Morningside ?
SELECT bname FROM bank WHERE state = 'New York',Trouvez les noms des succursales des banques dans l'État de New York.
SELECT bname FROM bank WHERE state = 'New York',Quels sont les noms des banques dans l'état de New York ?
SELECT cust_name FROM customer ORDER BY acc_bal,Listez le nom de tous les clients triés par le solde de leur compte dans l'ordre croissant.
SELECT cust_name FROM customer ORDER BY acc_bal,"Quels sont les noms de tous les clients, classés par solde de compte ?"
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),"Énumérez le nom de tous les différents clients qui ont un prêt, triés par le montant total de leur prêt."
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),"Quels sont les noms des différents clients ayant contracté un prêt, classés par le montant total qu'ils ont contracté ?"
"SELECT state , acc_type , credit_score FROM customer WHERE no_of_loans = 0","Trouvez l'état, le type de compte et la cote de crédit du client dont le nombre de prêt est 0."
"SELECT state , acc_type , credit_score FROM customer WHERE no_of_loans = 0","Quels sont les états, les types de compte et les cotes de crédit des clients qui n'ont aucun prêt ?"
SELECT count(DISTINCT city) FROM bank,Trouvez le nombre de villes différentes dans lesquelles les banques sont situées.
SELECT count(DISTINCT city) FROM bank,Dans combien de villes différentes les banques sont-elles implantées ?
SELECT count(DISTINCT state) FROM bank,Trouvez le nombre d'états différents dans lesquels les banques sont situées.
SELECT count(DISTINCT state) FROM bank,Dans combien d'États différents les banques sont-elles situées ?
SELECT count(DISTINCT acc_type) FROM customer,Combien de types de comptes distincts existe-t-il ?
SELECT count(DISTINCT acc_type) FROM customer,Comptez le nombre de types de comptes différents.
"SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",Trouvez le nom et le solde du compte du client dont le nom comprend la lettre 'a'.
"SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",Quels sont les noms et les soldes des comptes des clients avec la lettre a dans leur nom ?
SELECT sum(acc_bal) FROM customer WHERE state = 'Utah' OR state = 'Texas',Trouvez le solde total du compte de chaque client de l'Utah ou du Texas.
SELECT sum(acc_bal) FROM customer WHERE state = 'Utah' OR state = 'Texas',Quels sont les soldes totaux des comptes de chaque client de l'Utah ou du Texas ?
SELECT cust_name FROM customer WHERE acc_type = 'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type = 'checking',Trouvez le nom des clients qui ont à la fois des types de comptes d'épargne et de chèques.
SELECT cust_name FROM customer WHERE acc_type = 'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type = 'checking',Quels sont les noms des clients qui ont à la fois des comptes d'épargne et des comptes chèques ?
SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type = 'saving',Trouver le nom des clients qui n'ont pas de compte d'épargne.
SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type = 'saving',Quels sont les noms des clients qui n'ont pas de compte d'épargne ?
SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE T2.loan_type = 'Mortgages',Trouvez le nom des clients qui n'ont pas de prêt avec un type d'hypothèques.
SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE T2.loan_type = 'Mortgages',Quels sont les noms des clients qui n'ont pas contracté de prêt hypothécaire ?
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto',Trouvez le nom des clients qui ont des prêts hypothécaires et automobiles.
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto',Quels sont les noms des clients qui ont contracté à la fois des prêts hypothécaires et des prêts automobiles ?
SELECT cust_name FROM customer WHERE credit_score < (SELECT avg(credit_score) FROM customer),Trouvez le nom des clients dont la cote de crédit est inférieure à la moyenne des cotes de crédit de tous les clients.
SELECT cust_name FROM customer WHERE credit_score < (SELECT avg(credit_score) FROM customer),Quels sont les noms des clients dont la cote de crédit est inférieure à la cote de crédit moyenne des clients ?
SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1,Trouvez le nom de la succursale de la banque qui a le plus grand nombre de clients.
SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1,Quel est le nom de l'agence bancaire avec le plus grand nombre de clients ?
SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1,Trouvez le nom du client qui a le pointage de crédit le plus bas.
SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1,Quel est le nom du client avec le pire pointage de crédit ?
"SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1","Trouvez le nom, le type de compte et le solde du compte du client qui a le pointage de crédit le plus élevé."
"SELECT cust_name , acc_type , acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1","Quels sont le nom, le type de compte et le solde du compte correspondant au client ayant la cote de crédit la plus élevée ?"
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1,Trouvez le nom du client qui a le montant le plus élevé de prêts.
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1,Quel est le nom du client qui a le montant total du prêt le plus élevé ?
SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1,Trouvez l'état qui a le plus grand nombre de clients.
SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1,Quel État compte le plus grand nombre total de clients bancaires ?
"SELECT avg(acc_bal) , acc_type FROM customer WHERE credit_score < 50 GROUP BY acc_type","Pour chaque type de compte, recherchez le solde moyen du compte des clients dont le pointage de crédit est inférieur à 50."
"SELECT avg(acc_bal) , acc_type FROM customer WHERE credit_score < 50 GROUP BY acc_type",Quel est le solde moyen du compte des clients dont le score de crédit est inférieur à 50 pour les différents types de compte ?
"SELECT sum(acc_bal) , state FROM customer WHERE credit_score > 100 GROUP BY state","Pour chaque état, trouvez le solde total du compte des clients dont le pointage de crédit est supérieur à 100."
"SELECT sum(acc_bal) , state FROM customer WHERE credit_score > 100 GROUP BY state",Quel est le solde total du compte des clients dont la cote de crédit est supérieure à 100 pour les différents États ?
"SELECT sum(amount) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",Trouvez le montant total des prêts offerts par chaque agence bancaire.
"SELECT sum(amount) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",Quels sont les noms des différentes agences bancaires et quel est le montant total de leurs prêts ?
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count(*) > 1,Trouvez le nom des clients qui ont plus d'un prêt.
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count(*) > 1,Quels sont les noms des clients qui ont contracté plus d'un prêt ?
"SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount) > 5000",Trouvez le nom et le solde du compte des clients qui ont des prêts d'un montant total supérieur à 5000.
"SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount) > 5000",Quels sont les noms et les soldes des comptes des clients qui ont contracté un montant total de plus de 5000 en prêts ?
SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1,Trouvez le nom de la succursale bancaire qui a fourni le plus grand montant total de prêts.
SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1,Quel est le nom de l'agence bancaire qui a prêté le plus gros montant ?
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1,Trouvez le nom de la succursale bancaire qui a accordé le plus grand montant total de prêts aux clients dont la cote de crédit est inférieure à 100.
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1,"Quel est le nom de la succursale bancaire qui a prêté le montant total le plus élevé en prêts, en particulier aux clients dont la cote de crédit est inférieure à 100 ?"
SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id,Trouvez le nom des succursales bancaires qui ont accordé des prêts.
SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id,Quels sont les noms des différentes banques qui ont accordé des prêts ?
"SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",Trouvez le nom et la cote de crédit des clients qui ont des prêts.
"SELECT DISTINCT T1.cust_name , T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id",Quels sont les différents noms et cotes de crédit des clients qui ont contracté un prêt ?
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000,Trouvez le nom des clients qui ont un prêt d'un montant supérieur à 3000.
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000,Quels sont les noms des clients qui ont un prêt de plus de 3000 en montant ?
"SELECT T1.bname , T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T2.loan_type = 'Business'",Trouvez la ville et le nom des succursales bancaires qui offrent des prêts aux entreprises.
"SELECT T1.bname , T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T2.loan_type = 'Business'",Quels sont les noms et les villes des succursales bancaires qui proposent des prêts aux entreprises ?
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100,Trouvez les noms des succursales bancaires qui ont accordé un prêt à tout client dont le pointage de crédit est inférieur à 100.
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100,Quels sont les noms des banques qui ont prêté de l'argent à des clients dont la cote de solvabilité est inférieure à 100 ?
SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York',Trouvez le montant total des prêts accordés par les succursales bancaires dans l'État de New York.
SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York',Quel est le montant total d'argent prêté par les banques dans l'État de New York ?
SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan),Trouvez le pointage de crédit moyen des clients qui ont un prêt.
SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan),Quelle est la cote de crédit moyenne des clients qui ont contracté un prêt ?
SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan),Trouvez la cote de crédit moyenne des clients qui n'ont pas de prêt.
SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan),Quelle est la cote de crédit moyenne des clients qui n'ont jamais contracté de prêt ?
SELECT count(*) FROM ASSESSMENT_NOTES,Combien y a-t-il de notes d'évaluation au total ?
SELECT date_of_notes FROM Assessment_Notes,Quelles sont les dates des notes d'évaluation?
"SELECT count(*) FROM ADDRESSES WHERE zip_postcode = ""197""",Combien d'adresses ont le code postal 197 ?
SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident,Combien y a-t-il de codes de type d'incident distincts ?
SELECT DISTINCT detention_type_code FROM Detention,Renvoie tous les codes de type de détention distincts.
"SELECT date_incident_start , date_incident_end FROM Behavior_Incident WHERE incident_type_code = ""NOISE""","Quelles sont les dates de début et de fin des incidents avec le code de type d'incident ""BRUIT"" ?"
SELECT detention_summary FROM Detention,Renvoyez tous les résumés de détention.
"SELECT cell_mobile_number , email_address FROM STUDENTS",Renvoyez le numéro de téléphone portable et l'adresse e-mail de tous les élèves.
"SELECT email_address FROM Students WHERE first_name = ""Emma"" AND last_name = ""Rohan""","Quel est l'e-mail de l'étudiant dont le prénom ""Emma"" et le nom de famille ""Rohan"" ?"
SELECT count(DISTINCT student_id) FROM Students_in_Detention,Combien d'étudiants distincts ont été en détention ?
"SELECT gender FROM TEACHERS WHERE last_name = ""Medhurst""","Quel est le sexe de l'enseignant dont le nom de famille est ""Medhurst"" ?"
"SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = ""VIOLENCE""","Quelle est la description du type d'incident pour le type d'incident avec le code ""VIOLENCE"" ?"
"SELECT max(monthly_rental) , min(monthly_rental) FROM Student_Addresses",Trouvez le loyer mensuel maximum et minimum pour toutes les adresses étudiantes.
SELECT first_name FROM Teachers WHERE email_address LIKE '%man%',"Retrouver les prénoms des enseignants dont l'adresse email contient le mot ""homme""."
SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC,Liste toutes les informations sur les notes d'évaluation triées par date dans l'ordre croissant.
SELECT city FROM Addresses ORDER BY city,Listez toutes les villes d'adresses par ordre alphabétique.
"SELECT first_name , last_name FROM Teachers ORDER BY last_name",Retrouvez les prénoms et noms de famille des enseignants par ordre alphabétique des noms de famille.
SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC,"Retrouvez toutes les informations sur les adresses étudiantes, et triez par loyer mensuel par ordre décroissant."
"SELECT T1.student_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",Trouver l'identifiant et le prénom de l'élève qui a le plus de notes d'évaluation ?
"SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3",Trouver les identifiants et prénoms des 3 enseignants qui ont le plus de notes d'évaluation ?
"SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",Trouver l'identifiant et le nom de famille de l'élève qui a le plus d'incidents de comportement ?
"SELECT T1.teacher_id , T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.detention_type_code = ""AFTER"" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1","Trouver l'identifiant et le nom de famille de l'enseignant qui a le plus de retenues avec le code de type de retenue ""APRÈS"" ?"
"SELECT T1.student_id , T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",Quels sont l'identifiant et le prénom de l'étudiant dont les adresses ont le loyer mensuel moyen le plus élevé ?
"SELECT T2.address_id , T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",Trouvez l'identifiant et la ville de l'adresse de l'étudiant avec le loyer mensuel moyen le plus élevé.
"SELECT T1.incident_type_code , T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1",Quels sont le code et la description du type d'incident de comportement le plus fréquent ?
"SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",Quels sont le code et la description du type de détention le moins fréquent ?
"SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = ""Fanny""","Retrouvez les dates des notes d'évaluation pour les élèves prénommés ""Fanny""."
"SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = ""Schuster""","Trouvez les textes des notes d'évaluation pour les enseignants avec le nom de famille ""Schuster""."
"SELECT T1.date_incident_start , date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = ""Fahey""",Trouvez les dates de début et de fin des incidents de comportement des élèves dont le nom de famille est « Fahey ».
"SELECT T1.datetime_detention_start , datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = ""Schultz""","Trouvez les dates de début et de fin des détentions des enseignants avec le nom de famille ""Schultz""."
"SELECT T2.address_id , T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id ORDER BY monthly_rental DESC LIMIT 1",Quels sont l'identifiant et le code postal de l'adresse avec le loyer mensuel le plus élevé ?
SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1,Quel est le numéro de téléphone portable de l'étudiant dont l'adresse a le loyer mensuel le plus bas ?
"SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = ""Texas""",Quels sont les loyers mensuels des adresses étudiantes dans l'État du Texas ?
"SELECT T2.first_name , T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = ""Wisconsin""",Quels sont les prénoms et noms de famille des étudiants ayant une adresse dans l'état du Wisconsin ?
"SELECT T1.line_1 , avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",Quels sont la ligne 1 et les loyers mensuels moyens de toutes les adresses étudiantes ?
"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = ""Lyla""","Quel est le code postal de l'adresse où habite l'enseignante qui se prénomme ""Lyla"" ?"
"SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = ""918""","Quelles sont les adresses e-mail des enseignants dont l'adresse porte le code postal ""918"" ?"
SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident ),Combien d'élèves ne sont impliqués dans aucun incident de comportement ?
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id,Trouvez les noms de famille des enseignants qui ne sont impliqués dans aucune détention.
SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id,Quelles sont la ligne 1 d'adresses partagées par certains étudiants et certains enseignants ?
"SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count(*) = 2 INTERSECT SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count(*) < 2",Quels actifs ont 2 parties et ont moins de 2 journaux de pannes ? Indiquez l'identifiant et les détails de l'actif.
"SELECT count(*) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",Combien d'actifs contient chaque contrat de maintenance ? Indiquez le numéro et l'identifiant du contrat.
"SELECT count(*) , T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id",Combien d'actifs chaque société tierce fournit-elle ? Indiquez le nombre et l'identifiant de l'entreprise.
"SELECT T1.company_id , T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING count(*) >= 2 UNION SELECT T3.company_id , T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id = T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*) >= 2",Quelles sociétés tierces ont au moins 2 techniciens de maintenance ou ont au moins 2 contrats de maintenance ? Indiquez l'identifiant et le nom de l'entreprise.
"SELECT T1.staff_name , T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id = T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name , T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id = T4.contact_staff_id",Quels sont le nom et l'identifiant du personnel qui a enregistré le journal des pannes mais qui n'a contacté aucun ingénieur invité ?
"SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1","Quel ingénieur a visité le plus de fois ? Afficher l'identifiant, le prénom et le nom de l'ingénieur."
"SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count(*) > 2",Quelles pièces ont plus de 2 défauts ? Afficher le nom et l'ID de la pièce.
"SELECT T1.first_name , T1.last_name , T1.other_details , T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id","Énumérez le prénom, le nom de famille, les détails et la description des compétences correspondantes de chaque ingénieur."
"SELECT T1.fault_short_name , T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id","Pour tous les défauts des différentes pièces, quelles sont toutes les descriptions des compétences requises pour les réparer ? Indiquez le nom des défauts et la description de la compétence."
"SELECT T1.part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",Dans combien d'actifs chaque partie peut-elle être utilisée ? Indiquez le nom de la pièce et le numéro.
"SELECT T1.fault_description , T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",Quelles sont toutes les descriptions de défauts et l'état des défauts de tous les défauts enregistrés dans les journaux ?
"SELECT count(*) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",Combien de visites d'ingénieurs sont nécessaires au maximum pour un seul journal de pannes ? Indiquez le numéro et l'ID d'entrée de journal.
SELECT DISTINCT last_name FROM Maintenance_Engineers,Quels sont tous les noms de famille distincts de tous les ingénieurs ?
SELECT DISTINCT fault_status FROM Fault_Log_Parts,Combien de codes d'état de défaut sont enregistrés dans le tableau des parties du journal des défauts ?
"SELECT first_name , last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)",Quels ingénieurs ne sont jamais venus pour entretenir les actifs ? Indiquez le prénom et le nom de famille de l'ingénieur.
"SELECT asset_id , asset_details , asset_make , asset_model FROM Assets","Répertoriez l'identifiant de l'actif, les détails, la marque et le modèle de chaque actif."
SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1,Quand le premier actif a-t-il été acquis ?
"SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1",Quelle pièce défectueuse nécessite le plus de compétences pour être réparée ? Listez l'identifiant et le nom de la pièce.
SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1,Quel type de pièce a le moins de défauts ? Indiquez le nom de la pièce.
"SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1","Parmi les ingénieurs qui ont visité, quel ingénieur fait le moins de visites ? Indiquez l'identifiant, le prénom et le nom de l'ingénieur."
"SELECT T1.staff_name , T3.first_name , T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id",Quels collaborateurs ont contacté quels ingénieurs ? Indiquez le nom du personnel ainsi que le prénom et le nom de l'ingénieur.
"SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1","Quel journal des pannes comportait le plus grand nombre de pièces défectueuses ? Répertorier l'ID du journal des défauts, la description et l'heure d'enregistrement."
"SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",Quelle compétence est utilisée pour réparer le plus grand nombre de défauts ? Indiquez l'identifiant et la description de la compétence.
SELECT DISTINCT asset_model FROM Assets,Quels sont tous les modèles d'actifs distincts ?
"SELECT asset_make , asset_model , asset_details FROM Assets ORDER BY asset_disposed_date ASC","Répertoriez tous les actifs de la marque, du modèle et des détails par date de cession en ordre croissant."
"SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",Quelle partie a le montant le moins facturable ? Indiquez l'identifiant de la pièce et le montant.
SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1,Quelle entreprise a démarré le plus tôt le contrat de maintenance ? Afficher le nom de l'entreprise.
SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code = T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1,Quelle est la description du type d'entreprise qui a conclu ses contrats le plus récemment ?
SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1,Quel sexe constitue la majorité du personnel ?
"SELECT T1.staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name",Combien d'ingénieurs chaque membre du personnel a-t-il contactés ? Indiquez à la fois le nom du personnel de contact et le nombre d'ingénieurs contactés.
SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log),Quels actifs n'ont subi aucun journal de pannes ? Répertoriez le modèle d'actif.
"SELECT local_authority , services FROM station",énumérer les autorités locales et les services fournis par toutes les stations.
"SELECT train_number , name FROM train ORDER BY TIME",afficher tous les numéros de train et les noms classés par leur heure du début à la fin.
"SELECT TIME , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME","Donnez-moi les horaires et les numéros de tous les trains qui vont à Chennai, classés par heure."
"SELECT count(*) FROM train WHERE name LIKE ""%Express%""",Combien de trains ont « Express » dans leur nom ?
"SELECT train_number , TIME FROM train WHERE origin = 'Chennai' AND destination = 'Guruvayur'",Trouvez le numéro et l'heure du train qui va de Chennai à Guruvayur.
"SELECT origin , count(*) FROM train GROUP BY origin",Trouver le nombre de trains partant de chaque origine.
SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id = t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom du train dont l'itinéraire traverse le plus grand nombre de gares.
"SELECT count(*) , t1.network_name , t1.services FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id","Trouvez le nombre de trains pour chaque gare, ainsi que le nom du réseau de gares et les services."
"SELECT avg(high_temperature) , day_of_week FROM weekly_weather GROUP BY day_of_week",Quelle est la température maximale moyenne pour chaque jour de la semaine ?
"SELECT max(t1.low_temperature) , avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id WHERE t2.network_name = ""Amersham""",Donnez-moi la basse température maximale et les précipitations moyennes à la station d'Amersham.
"SELECT t3.name , t3.time FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = ""Chiltern""",Trouvez les noms et les horaires des trains qui traversent les gares de la commune de Chiltern.
SELECT count(DISTINCT services) FROM station,Combien de services différents sont fournis par toutes les stations ?
"SELECT t2.id , t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1",Trouvez l'identifiant et l'autorité locale de la station avec la température maximale moyenne la plus élevée.
"SELECT t2.id , t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id HAVING max(t1.precipitation) > 50",Trouvez l'identifiant et l'autorité locale de la station dont les précipitations maximales sont supérieures à 50.
"SELECT min(low_temperature) , max(wind_speed_mph) FROM weekly_weather",montrent la basse température la plus basse et la vitesse du vent la plus élevée en miles par heure.
SELECT origin FROM train GROUP BY origin HAVING count(*) > 1,Trouvez les origines d'où partent plus d'un train.
"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = ""Accounting""",Trouver le nombre de professeurs dans le département de comptabilité.
"SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = ""Accounting""",Combien y a-t-il de professeurs dans le département de comptabilité ?
"SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE = ""ACCT-211""",Combien de professeurs enseignent en classe avec le code ACCT-211 ?
"SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE = ""ACCT-211""",Combien de professeurs enseignent une classe avec le code ACCT-211 ?
"SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = ""Biology""",Quel est le prénom et le nom du professeur du département de biologie ?
"SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = ""Biology""",Quels sont le prénom et le nom de tous les professeurs de biologie ?
"SELECT DISTINCT T1.EMP_FNAME , T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = ""ACCT-211""",Quels sont les prénoms et la date de naissance des professeurs enseignant le cours ACCT-211 ?
"SELECT DISTINCT T1.EMP_FNAME , T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = ""ACCT-211""",Quels sont les prénoms et dates de naissance des professeurs responsables de l'ACCT-211 ?
SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski',Combien de classes le professeur dont le nom de famille est Graztevski a-t-il ?
SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski',Combien de cours le professeur dont le nom de famille est Graztevski enseigne-t-il ?
"SELECT school_code FROM department WHERE dept_name = ""Accounting""",Quel est le code de l'école à laquelle appartient le service de comptabilité ?
"SELECT school_code FROM department WHERE dept_name = ""Accounting""",Quel est le code scolaire du service comptabilité ?
"SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",Combien de crédits le cours CIS-220 compte-t-il et quelle est sa description?
"SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",Quelle est la description du CIS-220 et combien de crédits comporte-t-il ?
"SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",Trouver la description et le crédit du cours QM-261 ?
"SELECT crs_credit , crs_description FROM course WHERE crs_code = 'CIS-220'",Quelle est la description du cours et le nombre de crédits pour QM-261 ?
SELECT dept_address FROM department WHERE dept_name = 'History',quelle est l'adresse du département d'histoire?
SELECT dept_address FROM department WHERE dept_name = 'History',Où est le département d'histoire ?
SELECT count(DISTINCT dept_address) FROM department WHERE school_code = 'BUS',Combien d'emplacements différents l'école avec le code BUS a-t-elle ?
SELECT count(DISTINCT dept_address) FROM department WHERE school_code = 'BUS',Quels sont les différents emplacements de l'école avec le code BUS ?
"SELECT count(DISTINCT dept_address) , school_code FROM department GROUP BY school_code",Combien d'emplacements différents chaque école a-t-elle ?
"SELECT count(DISTINCT dept_address) , school_code FROM department GROUP BY school_code",Comptez différentes adresses de chaque école.
"SELECT count(DISTINCT dept_name) , school_code FROM department GROUP BY school_code",Trouvez le nombre de départements dans chaque école.
"SELECT count(DISTINCT dept_name) , school_code FROM department GROUP BY school_code",Combien y a-t-il de départements dans chaque école ?
"SELECT count(DISTINCT dept_name) , school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name) < 5",Trouvez le nombre de départements différents dans chaque école dont le nombre de départements différents est inférieur à 5.
"SELECT count(DISTINCT dept_name) , school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name) < 5",Combien de départements différents y a-t-il dans chaque école qui compte moins de 5 appartements ?
"SELECT count(*) , crs_code FROM CLASS GROUP BY crs_code",Combien de sections chaque cours comporte-t-il ?
"SELECT count(*) , crs_code FROM CLASS GROUP BY crs_code",Combien de sections chaque cours comporte-t-il ?
"SELECT sum(crs_credit) , dept_code FROM course GROUP BY dept_code",Quel est le crédit total offert par chaque département ?
"SELECT sum(crs_credit) , dept_code FROM course GROUP BY dept_code",Combien de crédits le département propose-t-il ?
"SELECT count(*) , class_room FROM CLASS GROUP BY class_room HAVING count(*) >= 2",Trouvez le nombre de cours offerts pour toutes les salles de classe qui ont tenu au moins 2 cours.
"SELECT count(*) , class_room FROM CLASS GROUP BY class_room HAVING count(*) >= 2","Pour chaque classe d'au moins 2 classes, combien de classes sont proposées ?"
"SELECT count(*) , dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",Trouver le nombre de classes dans chaque département.
"SELECT count(*) , dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code",Combien de cours ont lieu dans chaque département ?
"SELECT count(*) , T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T2.dept_code = T3.dept_code GROUP BY T3.school_code",Trouver le nombre de classes dans chaque école.
"SELECT count(*) , T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T2.dept_code = T3.dept_code GROUP BY T3.school_code",Combien de classes existe-t-il pour chaque école ?
"SELECT count(*) , T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",Quel est le nombre de professeurs pour les différentes écoles ?
"SELECT count(*) , T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",Combien y a-t-il de professeurs différents pour les différentes écoles ?
"SELECT emp_jobcode , count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1",Trouvez le nombre et le code de l'emploi qui compte le plus d'employés.
"SELECT emp_jobcode , count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1",Quel est le nombre et le code de l'emploi avec le plus d'employés ?
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1,Quelle école a le moins de professeurs ?
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1,Quelle école a le moins de professeurs ?
"SELECT count(*) , dept_code FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code",Trouvez le nombre de professeurs titulaires d'un doctorat. diplôme dans chaque département.
"SELECT count(*) , dept_code FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code",Combien de professeurs ont un doctorat. dans chaque département ?
"SELECT count(*) , dept_code FROM student GROUP BY dept_code",Trouvez le nombre d'étudiants pour chaque département.
"SELECT count(*) , dept_code FROM student GROUP BY dept_code",Combien y a-t-il d'étudiants dans chaque département ?
"SELECT sum(stu_hrs) , dept_code FROM student GROUP BY dept_code",Trouver le nombre total d'heures effectuées pour tous les étudiants de chaque département.
"SELECT sum(stu_hrs) , dept_code FROM student GROUP BY dept_code",Combien d'heures les étudiants passent-ils à étudier dans chaque département ?
"SELECT max(stu_gpa) , avg(stu_gpa) , min(stu_gpa) , dept_code FROM student GROUP BY dept_code","Trouvez le gpa maximum, moyen et minimum de tous les étudiants de chaque département."
"SELECT max(stu_gpa) , avg(stu_gpa) , min(stu_gpa) , dept_code FROM student GROUP BY dept_code","Quel est le GPA le plus élevé, le plus bas et moyen des étudiants pour chaque département ?"
"SELECT T2.dept_name , avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1",Quel est le nom et le gpa moyen du département dont les étudiants ont le gpa moyen le plus élevé ?
"SELECT T2.dept_name , avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1",Quel département a le GPA moyen le plus élevé pour les étudiants et quel est le GPA moyen ?
SELECT count(DISTINCT school_code) FROM department,combien d'écoles existent au total?
SELECT count(DISTINCT school_code) FROM department,Combien y a-t-il d'écoles dans le département ?
SELECT count(DISTINCT class_code) FROM CLASS,Combien y a-t-il de classes différentes ?
SELECT count(DISTINCT class_code) FROM CLASS,Combien de classes uniques sont proposées ?
SELECT count(DISTINCT crs_code) FROM CLASS,Combien de cours sont offerts?
SELECT count(DISTINCT crs_code) FROM CLASS,Combien y a-t-il de codes de cours différents ?
SELECT count(DISTINCT dept_name) FROM department,Combien de départements le collège compte-t-il?
SELECT count(DISTINCT dept_name) FROM department,Combien y a-t-il de départements différents ?
"SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = ""Computer Info. Systems""",Combien de cours sont proposés par l'Info Informatique. Département Systèmes ?
"SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = ""Computer Info. Systems""",Combien de cours le département des Systèmes d'Information Informatique propose-t-il ?
SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code = 'ACCT-211',Combien de sections le cours ACCT-211 comporte-t-il ?
SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code = 'ACCT-211',Quel est le nombre de sections de cours différentes proposées dans le cours ACCT-211 ?
"SELECT sum(T1.crs_credit) , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",Trouvez le total des crédits de tous les cours offerts par chaque département.
"SELECT sum(T1.crs_credit) , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",Quel est le nombre total de crédits offerts par chaque département ?
SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T1.dept_code = T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1,Trouvez le nom du département qui offre le plus grand nombre de crédits de toutes les classes.
SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T1.dept_code = T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1,Quel département offre le plus de crédits tous ensemble ?
SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211',Combien d'étudiants sont inscrits dans la classe ACCT-211 ?
SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211',Quel est le nombre total d'étudiants inscrits à l'ACCT-211 ?
SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211',Quel est le prénom de chaque étudiant inscrit dans la classe ACCT-211 ?
SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211',Quels sont les prénoms de tous les étudiants du cours ACCT-211 ?
SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C',Quel est le prénom des élèves inscrits dans la classe ACCT-211 et ayant obtenu le grade C ?
SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C',Quels sont les prénoms de tous les étudiants qui ont suivi l'ACCT-211 et qui ont reçu un C ?
SELECT count(*) FROM professor WHERE prof_high_degree = 'Ph.D.',Combien de professeurs ont un doctorat? diplôme?
SELECT count(*) FROM professor WHERE prof_high_degree = 'Ph.D.',Quel est le nombre total de professeurs titulaires d'un doctorat? ?
SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting',Combien d'étudiants sont inscrits dans la classe enseignée par un professeur du département de comptabilité ?
SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting',Combien d'étudiants sont inscrits dans certains cours dispensés par un professeur de comptabilité ?
SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1,Quel est le nom du département qui compte le plus grand nombre d'étudiants inscrits ?
SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1,Quel est le nom du département avec le plus d'étudiants inscrits ?
SELECT dept_name FROM department ORDER BY dept_name,lister les noms de tous les départements classés par leurs noms.
SELECT dept_name FROM department ORDER BY dept_name,Quels sont les noms de tous les départements par ordre alphabétique ?
SELECT class_code FROM CLASS WHERE class_room = 'KLR209',Dressez la liste des codes de tous les cours qui ont lieu dans la salle KLR209.
SELECT class_code FROM CLASS WHERE class_room = 'KLR209',Quels sont les codes de tous les cours qui se trouvent dans la salle KLR209 ?
SELECT emp_fname FROM employee WHERE emp_jobcode = 'PROF' ORDER BY emp_dob,Indiquez le prénom de tous les employés avec le code d'emploi PROF classé par date de naissance.
SELECT emp_fname FROM employee WHERE emp_jobcode = 'PROF' ORDER BY emp_dob,Quels sont les prénoms de tous les employés professeurs classés par date de naissance ?
"SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num ORDER BY T2.emp_fname",Retrouvez les prénoms et fonctions de tous les professeurs classés par ordre alphabétique de leur prénom.
"SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num ORDER BY T2.emp_fname",Quels sont les prénoms et les emplacements des bureaux de tous les professeurs classés par ordre alphabétique des prénoms ?
"SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",Quel est le prénom et le nom de l'employé le plus âgé ?
"SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1",Quels sont les noms et prénoms de l'employé dont la date de naissance est la plus ancienne ?
"SELECT stu_fname , stu_lname , stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1","Quel est le prénom, le nom de famille, le gpa du plus jeune parmi les étudiants dont le GPA est supérieur à 3 ?"
"SELECT stu_fname , stu_lname , stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1","Quels sont le prénom et le nom du plus jeune étudiant avec un GPA supérieur à 3, et quel est son GPA ?"
SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C',Quel est le prénom des élèves qui ont obtenu la note C dans n'importe quelle classe ?
SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C',Quels sont les prénoms de tous les élèves qui ont obtenu une note C dans une classe ?
SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1,Quel est le nom du département où il y a le moins de professeurs ?
SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1,Comment s'appelle le département avec le moins de professeurs ?
"SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",Quel est le nom du département où se trouve le plus grand nombre de professeurs titulaires d'un doctorat ? diplôme?
"SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",Quel département compte le plus de professeurs titulaires d'un doctorat ?
SELECT emp_fname FROM employee WHERE emp_jobcode = 'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num,Quels sont les prénoms des professeurs qui n'enseignent pas un cours.
SELECT emp_fname FROM employee WHERE emp_jobcode = 'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num,Quels sont les prénoms de tous les professeurs qui n'enseignent aucun cours ?
SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num = T5.prof_num,Quels sont les prénoms des professeurs du département d'histoire qui n'enseignent pas un cours.
SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num = T5.prof_num,Quels sont les prénoms de tous les professeurs d'histoire qui n'enseignent pas ?
"SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",Quels sont le nom de famille et la fonction du professeur du département d'histoire ?
"SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",Quels sont le nom de famille et le bureau de tous les professeurs d'histoire ?
"SELECT T3.dept_name , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",Quel est le nom du département et le bureau du professeur dont le nom de famille est Heffington ?
"SELECT T3.dept_name , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",Quel est le nom du département et du bureau du professeur dont le nom de famille est Heffington ?
"SELECT T1.emp_lname , T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'",Trouver le nom et la date d'embauche du professeur qui est au bureau DRE 102.
"SELECT T1.emp_lname , T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'",Quel est le nom de famille du professeur dont le bureau est situé au DRE 102 et quand a-t-il été embauché ?
SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson',Quel est le code du cours suivi par l'étudiant dont le nom de famille est Smithson ?
SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson',Quels sont les codes de cours pour chaque classe suivie par l'étudiant dont le nom de famille est Smithson ?
"SELECT T4.crs_description , T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num JOIN course AS T4 ON T4.crs_code = T1.crs_code WHERE T3.stu_lname = 'Smithson'",Quels sont la description et le crédit du cours que l'étudiant dont le nom de famille est Smithson a suivi ?
"SELECT T4.crs_description , T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num JOIN course AS T4 ON T4.crs_code = T1.crs_code WHERE T3.stu_lname = 'Smithson'","Combien de crédits est le cours suivi par l'étudiant dont le nom de famille est Smithson, et quelle est sa description ?"
SELECT count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA',Combien de professeurs titulaires d'un doctorat. ou diplôme de maîtrise ?
SELECT count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA',Combien de professeurs ont obtenu soit un doctorat. ou Masters ?
SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology',Combien de professeurs appartiennent au département de comptabilité ou de biologie ?
SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology',Quel est le nombre de professeurs qui sont dans les départements de comptabilité ou de biologie ?
SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261',Trouvez le prénom du professeur qui enseigne deux cours avec le code CIS-220 et QM-261.
SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261',Quel est le prénom du professeur qui enseigne CIS-220 et QM-261 ?
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems',Trouvez le prénom de l'étudiant qui suit des cours de comptabilité et d'informatique. Départements systèmes
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems',Quels sont les prénoms de tous les étudiants qui suivent des cours de comptabilité et de systèmes d'information informatiques ?
SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211',Quel est le gpa moyen des étudiants inscrits au cours avec le code ACCT-211 ?
SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211',Quel est le GPA moyen des étudiants qui suivent l'ACCT-211 ?
"SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5","Quels sont le prénom, le gpa et le numéro de téléphone des 5 meilleurs étudiants avec le gpa le plus élevé ?"
"SELECT stu_gpa , stu_phone , stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5","Quels sont le prénom, le GPA et le numéro de téléphone des étudiants avec les 5 meilleurs GPA ?"
SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code ORDER BY stu_gpa LIMIT 1,Quel est le nom du département auquel appartiennent les étudiants avec le GPA le plus bas ?
SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code ORDER BY stu_gpa LIMIT 1,Quel est le nom du département avec l'étudiant qui a le GPA le plus bas ?
"SELECT stu_fname , stu_gpa FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student)",Trouvez le prénom et le gpa des étudiants dont le gpa est inférieur au gpa moyen de tous les étudiants.
"SELECT stu_fname , stu_gpa FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student)",Quel est le prénom et le GPA de chaque étudiant qui a un GPA inférieur à la moyenne ?
"SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",Trouvez le nom et l'adresse du département qui compte le plus grand nombre d'étudiants.
"SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",Quel est le nom et l'adresse du département avec le plus d'étudiants ?
"SELECT T2.dept_name , T2.dept_address , count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3","Trouvez le nom, l'adresse, le nombre d'étudiants dans les départements qui ont le top 3 le plus grand nombre d'étudiants."
"SELECT T2.dept_name , T2.dept_address , count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3","Quels sont le nom, l'adresse et le nombre d'étudiants dans les départements qui ont le plus d'étudiants ?"
"SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",Trouvez le prénom et le bureau du professeur qui est dans le département d'histoire et qui a un doctorat. diplôme.
"SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",Quels sont les prénoms et la fonction des professeurs qui sont au département d'histoire et qui ont un doctorat ?
"SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",Trouvez les prénoms de tous les instructeurs qui ont enseigné un cours et le code du cours.
"SELECT T2.emp_fname , T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num",Quels sont les prénoms de tous les enseignants qui ont enseigné un cours et les codes de cours correspondants ?
"SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",Trouvez les prénoms de tous les instructeurs qui ont enseigné un cours et la description du cours.
"SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",Quels sont les prénoms de tous les enseignants qui ont enseigné un cours et les descriptions correspondantes ?
"SELECT T2.emp_fname , T4.prof_office , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num",Trouvez les prénoms et les bureaux de tous les instructeurs qui ont enseigné un cours et trouvez également la description du cours.
"SELECT T2.emp_fname , T4.prof_office , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num","Quels sont les prénoms, les adresses des bureaux de tous les professeurs qui ont enseigné un cours ?"
"SELECT T2.emp_fname , T4.prof_office , T3.crs_description , T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num JOIN department AS T5 ON T4.dept_code = T5.dept_code",Trouvez les prénoms et les bureaux de tous les instructeurs qui ont enseigné un cours et la description du cours et le nom du département.
"SELECT T2.emp_fname , T4.prof_office , T3.crs_description , T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num JOIN department AS T5 ON T4.dept_code = T5.dept_code","Quels sont les prénoms, les emplacements des bureaux et les départements de tous les instructeurs, et quelles sont également les descriptions des cours qu'ils enseignent ?"
"SELECT T1.stu_fname , T1.stu_lname , T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code",Trouvez les noms de tous les étudiants qui ont suivi un cours et la description du cours.
"SELECT T1.stu_fname , T1.stu_lname , T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code",Quels sont les noms de tous les étudiants qui ont suivi un cours et les descriptions de cours correspondantes ?
"SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",Trouvez les noms de tous les étudiants qui ont suivi un cours et obtenu A ou C.
"SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",Quels sont les noms de tous les étudiants qui suivent un cours et qui ont reçu un A ou un C ?
"SELECT T2.emp_fname , T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'",Trouvez les prénoms de tous les professeurs du département de comptabilité qui enseignent un cours et la salle de classe.
"SELECT T2.emp_fname , T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'",Quels sont les prénoms de tous les professeurs de comptabilité qui enseignent et quelles sont les salles de classe des cours qu'ils enseignent ?
"SELECT DISTINCT T2.emp_fname , T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Computer Info. Systems'",Trouvez les prénoms et les diplômes de tous les professeurs qui enseignent un cours dans Computer Info. Département des systèmes.
"SELECT DISTINCT T2.emp_fname , T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Computer Info. Systems'",Quels sont les différents prénoms et diplômes les plus élevés des professeurs enseignant dans le département Systèmes d'Information Informatique ?
SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A' AND T2.class_code = 10018,Quel est le nom de famille de l'élève qui a obtenu la note A dans la classe avec le code 10018.
SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A' AND T2.class_code = 10018,Quel est le nom de famille de l'élève qui a reçu un A dans la classe avec le code 10018 ?
"SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T1.dept_code = T3.dept_code WHERE T3.dept_name = 'History' AND T1.prof_high_degree != 'Ph.D.'",Trouvez le prénom et le bureau du professeur d'histoire qui n'a pas obtenu de doctorat. diplôme.
"SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T1.dept_code = T3.dept_code WHERE T3.dept_name = 'History' AND T1.prof_high_degree != 'Ph.D.'",Quels sont les prénoms et bureaux des professeurs d'histoire qui n'ont pas de doctorat ?
SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count(*) > 1,Trouvez les prénoms des professeurs qui enseignent plus d'une classe.
SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING count(*) > 1,Quels sont les prénoms de tous les professeurs qui enseignent plus d'une classe ?
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num GROUP BY T2.stu_num HAVING count(*) = 1,Trouvez les prénoms des élèves qui ont suivi exactement un cours.
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num GROUP BY T2.stu_num HAVING count(*) = 1,Quels sont les prénoms des étudiants qui n'ont suivi qu'un seul cours ?
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%',"Trouvez le nom du département qui offre la classe dont la description contient le mot ""Statistiques""."
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%',"Quel est le nom du département qui offre un cours dont la description comprend le mot ""Statistiques"" ?"
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%',Quel est le prénom de l'étudiant dont le nom de famille commence par la lettre S et qui suit le cours ACCT-211 ?
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%',Quel est le prénom de l'étudiant dont le nom de famille commence par la lettre S et qui suit l'ACCT-211 ?
SELECT count(*) FROM club,Combien y a-t-il de clubs ?
SELECT count(*) FROM club,Quel est le nombre total de clubs ?
SELECT count(*) FROM club,Combien y a-t-il de clubs ?
SELECT count(*) FROM club,Comptez le nombre total de clubs.
SELECT DISTINCT Region FROM club ORDER BY Region ASC,Énumérez la région distincte des clubs par ordre alphabétique croissant.
SELECT DISTINCT Region FROM club ORDER BY Region ASC,Quelles sont les différentes régions des clubs par ordre alphabétique croissant ?
SELECT avg(Gold) FROM club_rank,Quel est le nombre moyen de médailles d'or pour les clubs ?
SELECT avg(Gold) FROM club_rank,Quel est le nombre moyen de médailles d'or pour un club ?
"SELECT Competition_type , Country FROM competition",Quels sont les types et pays de compétitions ?
"SELECT Competition_type , Country FROM competition",Quels sont les types de chaque concours et dans quels pays sont-ils situés ?
"SELECT DISTINCT YEAR FROM competition WHERE Competition_type != ""Tournament""","Quelles sont les années distinctes où le type de compétition n'est pas ""Tournoi"" ?"
"SELECT DISTINCT YEAR FROM competition WHERE Competition_type != ""Tournament""",Quelles sont les différentes années pour toutes les compétitions qui ne sont pas de type égal au tournoi ?
"SELECT max(Silver) , min(Silver) FROM club_rank",Quel est le nombre maximum et minimum de médailles d'argent pour les clubs.
"SELECT max(Silver) , min(Silver) FROM club_rank",Quel est le nombre maximum et minimum de médailles d'argent pour tous les clubs ?
SELECT count(*) FROM club_rank WHERE Total < 10,Combien de clubs ont moins de 10 médailles au total ?
SELECT count(*) FROM club_rank WHERE Total < 10,Quel est le nombre total de clubs qui ont moins de 10 médailles au total ?
SELECT name FROM club ORDER BY Start_year ASC,Dressez la liste de tous les noms de club par ordre croissant d'année de début.
SELECT name FROM club ORDER BY Start_year ASC,Quels sont les noms de tous les clubs en commençant par le plus ancien ?
SELECT name FROM club ORDER BY name DESC,Listez tous les noms de clubs par ordre alphabétique décroissant.
SELECT name FROM club ORDER BY name DESC,Quels sont les noms de tous les clubs classés par ordre alphabétique décroissant ?
"SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",Veuillez indiquer les noms et les joueurs des clubs.
"SELECT T1.name , T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",Quels sont les noms et les joueurs de tous les clubs ?
"SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = ""Right Wing""","Afficher les noms des clubs qui ont des joueurs avec la position ""Ailier droit""."
"SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = ""Right Wing""","Quels sont les noms des clubs qui ont des joueurs au poste de ""Ailier droit"" ?"
"SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = ""AIB""","Quelle est la moyenne des points des joueurs du club avec le nom ""AIB""."
"SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = ""AIB""",Quel est le nombre moyen de points des joueurs du club « AIB » ?
"SELECT POSITION , avg(Points) FROM player GROUP BY POSITION",Indiquez la position des joueurs et le nombre moyen de points des joueurs de chaque position.
"SELECT POSITION , avg(Points) FROM player GROUP BY POSITION","Pour chaque position, quel est le nombre moyen de points pour les joueurs à cette position ?"
SELECT POSITION FROM player GROUP BY name HAVING avg(Points) >= 20,Indiquez la position des joueurs avec un nombre moyen de points marqués par les joueurs de cette position supérieur à 20.
SELECT POSITION FROM player GROUP BY name HAVING avg(Points) >= 20,Quelles sont les positions des joueurs dont le nombre moyen de points marqués par cette position est supérieur à 20 ?
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Énumérez les types de concours et le nombre de concours de chaque type.
"SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",Quels sont les types de concours et le nombre de concours pour ce type ?
SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1,Énumérez le type de compétition le plus courant.
SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1,Quel est le type de compétition le plus courant ?
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*) <= 5,Énumérez les types de concours qui ont au plus cinq concours de ce type.
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*) <= 5,Quels sont les types de compétition qui ont le plus de 5 compétitions pour ce type ?
SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player),Énumérez les noms des clubs qui n'ont pas de joueurs.
SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player),Quels sont les noms de tous les clubs qui n'ont pas de joueurs ?
SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10,Quelles sont les positions avec les deux joueurs ayant plus de 20 points et moins de 10 points.
SELECT POSITION FROM player WHERE Points > 20 INTERSECT SELECT POSITION FROM player WHERE Points < 10,Quelles sont les positions des deux joueurs qui ont plus de 20 20 points et moins de 10 points ?
SELECT sum(Points) FROM player,Afficher le total des points de tous les joueurs.
SELECT sum(Points) FROM player,Quel est le nombre total de points pour tous les joueurs ?
SELECT count(DISTINCT POSITION) FROM player,combien y a-t-il de postes différents ?
SELECT count(DISTINCT POSITION) FROM player,Combien de positions différentes pour les joueurs sont répertoriées ?
SELECT count(DISTINCT POSITION) FROM player,Combien y a-t-il de positions différentes de joueurs ?
SELECT count(DISTINCT POSITION) FROM player,Comptez le nombre de positions de joueurs distinctes.
SELECT name FROM player WHERE points > (SELECT avg(points) FROM player),comment s'appellent les joueurs qui obtiennent plus que la moyenne des points.
SELECT name FROM player WHERE points > (SELECT avg(points) FROM player),Quels sont les noms de tous les joueurs qui ont obtenu plus que le nombre moyen de points ?
"SELECT count(*) , POSITION FROM player WHERE points < 30 GROUP BY POSITION",trouver le nombre de joueurs dont les points sont inférieurs à 30 dans chaque position.
"SELECT count(*) , POSITION FROM player WHERE points < 30 GROUP BY POSITION",Quel est le nombre de joueurs qui ont moins de 30 points pour chaque position ?
SELECT country FROM competition WHERE competition_type = 'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1,quel pays a participé au plus grand nombre de compétitions du tournoi ?
SELECT country FROM competition WHERE competition_type = 'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1,quel est le nom du pays qui a participé au plus grand nombre de tournois ?
SELECT country FROM competition WHERE competition_type = 'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type = 'Tournament',quels pays ont participé à la fois à des compétitions amicales et de type tournoi.
SELECT country FROM competition WHERE competition_type = 'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type = 'Tournament',Quels sont les pays qui ont participé à la fois à des compétitions amicales et de type tournoi ?
SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly',Trouvez les pays qui n'ont jamais participé à aucune compétition de type Amical.
SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly',Quels sont les pays qui n'ont jamais participé à des compétitions de type amical ?
SELECT sum(num_of_component) FROM furniture,Combien y a-t-il de composants de meubles au total ?
"SELECT name , furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",Renvoyez le nom et l'identifiant du meuble avec le taux le plus élevé du marché.
SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2,trouver le taux de marché total des meubles qui ont les 2 premières parts de marché.
"SELECT Num_of_Component , name FROM furniture WHERE Num_of_Component > 10",Trouvez les quantités et les noms des composants de tous les meubles qui ont plus de 10 composants.
"SELECT name , Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1",Trouvez le nom et la quantité de composants du meuble le moins populaire.
SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID WHERE t2.Price_in_Dollar < (SELECT max(Price_in_Dollar) FROM furniture_manufacte),Trouvez les noms des meubles dont les prix sont inférieurs au prix le plus élevé.
"SELECT open_year , name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1",Quel fabricant a le plus de magasins ? Indiquez son nom et l'année d'ouverture.
SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops > 20,Trouvez le nombre moyen d'usines pour les fabricants qui ont plus de 20 magasins.
"SELECT name , manufacturer_id FROM manufacturer ORDER BY open_year",Répertoriez tous les noms et identifiants de fabricants classés par année d'ouverture.
"SELECT name , open_year FROM manufacturer WHERE num_of_shops > 10 OR Num_of_Factories < 10",Donnez-moi le nom et l'année d'ouverture des fabricants qui ont soit moins de 10 usines soit plus de 10 magasins.
"SELECT max(num_of_shops) , avg(Num_of_Factories) FROM manufacturer WHERE open_year < 1990",quel est le nombre moyen d'usines et le nombre maximum de magasins pour les fabricants qui ont ouvert avant 1990.
"SELECT t1.manufacturer_id , t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",Trouvez l'identifiant et le nombre de magasins de l'entreprise qui produit les meubles les plus chers.
"SELECT count(*) , t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id",Trouvez le nombre de types de meubles produits par chaque fabricant ainsi que les noms des entreprises.
"SELECT t1.name , t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID",Donnez-moi les noms et les prix des meubles que certaines entreprises fabriquent.
"SELECT Market_Rate , name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",Trouvez les parts de marché et les noms des meubles qu'aucune entreprise ne produit dans nos dossiers.
SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component < 6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component > 10,Trouvez le nom de l'entreprise qui produit à la fois des meubles de moins de 6 composants et des meubles de plus de 10 composants.
"SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",Affichez le prénom et le nom du service pour chaque employé.
"SELECT T1.first_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",Quels sont le prénom et le nom du service de tous les employés ?
"SELECT first_name , last_name , salary FROM employees WHERE salary < 6000",Indiquez le nom complet (nom et prénom) et le salaire des employés qui gagnent moins de 6000.
"SELECT first_name , last_name , salary FROM employees WHERE salary < 6000",Quels sont les noms complets et les salaires des employés gagnant moins de 6 000 ?
"SELECT first_name , department_id FROM employees WHERE last_name = 'McEwen'","Affichez le prénom et le numéro de service de tous les employés dont le nom de famille est ""McEwen""."
"SELECT first_name , department_id FROM employees WHERE last_name = 'McEwen'",Quels sont les prénoms et numéros de département des employés dont le nom de famille est McEwen ?
"SELECT * FROM employees WHERE department_id = ""null""",Renvoyez toutes les informations pour tous les employés sans aucun numéro de département.
"SELECT * FROM employees WHERE department_id = ""null""",Que sont tous les employés sans numéro de service ?
SELECT * FROM departments WHERE department_name = 'Marketing',Affichez toutes les informations sur le département Marketing.
SELECT * FROM departments WHERE department_name = 'Marketing',Quelles sont toutes les informations sur le département Marketing ?
SELECT * FROM departments WHERE department_name = 'Marketing',afficher toutes les informations sur le département Marketing.
SELECT * FROM departments WHERE department_name = 'Marketing',Quelles sont toutes les informations sur le département Marketing ?
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%',Quelle est la date d'embauche des employés dont le prénom ne contient pas la lettre M ?
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%',À quelles dates les employés sans la lettre M dans leur prénom ont-ils été embauchés ?
"SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'","afficher le nom complet (prénom et nom), la date d'embauche, le salaire et le numéro de service des employés dont le prénom ne contient pas la lettre M."
"SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'","Quels sont le nom complet, la date d'embauche, le salaire et l'identifiant de service des employés sans la lettre M dans leur prénom ?"
"SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id","affichez le nom complet (prénom et nom), la date d'embauche, le salaire et le numéro de service pour les employés dont le prénom ne contient pas la lettre M et définissez le résultat en ordre croissant par numéro de service."
"SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id","Quels sont le nom complet, les données d'embauche, le salaire et l'identifiant de service des employés sans la lettre M dans leur prénom, classés par identifiant de service croissant ?"
SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000,quel est le numéro de téléphone des employés dont le salaire est compris entre 8000 et 12000 ?
SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000,Renvoie les numéros de téléphone des employés dont le salaire est compris entre 8000 et 12000.
"SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",afficher toutes les informations des employés dont le salaire est compris entre 8000 et 12000 et la commission n'est pas nulle ou le numéro de département n'est pas égal à 40.
"SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR department_id != 40",Renvoie toutes les informations sur les employés avec des salaires entre 8000 et 12000 pour lesquels la commission n'est pas nulle ou dont l'identifiant de service n'est pas 40.
"SELECT first_name , last_name , salary FROM employees WHERE commission_pct = ""null""",Quels sont le nom complet (nom et prénom) et le salaire de tous les employés qui n'ont aucune valeur pour la commission ?
"SELECT first_name , last_name , salary FROM employees WHERE commission_pct = ""null""",Renvoyez les noms complets et les salaires des employés avec des commissions nulles.
"SELECT first_name , last_name , salary FROM employees WHERE first_name LIKE '%m'","Affichez le prénom, le nom et le salaire des employés dont le prénom se termine par la lettre m."
"SELECT first_name , last_name , salary FROM employees WHERE first_name LIKE '%m'",Renvoyez les noms complets et les salaires des employés dont le prénom se termine par la lettre m.
"SELECT job_id , hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'",Trouvez le numéro de poste et la date d'embauche des employés qui ont été embauchés entre le 5 novembre 2007 et le 5 juillet 2009.
"SELECT job_id , hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'",Quels sont les identifiants de poste et les dates d'embauche des salariés embauchés après le 5 novembre 2007 et avant le 5 juillet 2009 ?
"SELECT first_name , last_name FROM employees WHERE department_id = 70 OR department_id = 90",Quels sont le prénom et le nom des employés qui travaillent dans le département 70 ou 90 ?
"SELECT first_name , last_name FROM employees WHERE department_id = 70 OR department_id = 90",Quels sont les noms complets des employés qui ont dans le département 70 ou 90 ?
"SELECT salary , manager_id FROM employees WHERE manager_id != ""null""",Trouvez le salaire et le numéro de gestionnaire des employés qui travaillent sous un gestionnaire.
"SELECT salary , manager_id FROM employees WHERE manager_id != ""null""",Quels sont les salaires et les identifiants de manager pour les employés qui ont des managers ?
SELECT * FROM employees WHERE hire_date < '2002-06-21',afficher tous les détails de la table Employés pour les employés qui ont été embauchés avant le 2002-06-21.
SELECT * FROM employees WHERE hire_date < '2002-06-21',Quelles sont toutes les informations sur les employés embauchés avant le 21 juin 2002 ?
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC,affichez toutes les informations pour tous les employés qui ont les lettres D ou S dans leur prénom et organisez également le résultat par ordre décroissant de salaire.
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC,"Quelles sont toutes les informations sur les employés avec D ou S dans leur prénom, classées par salaire décroissant ?"
SELECT * FROM employees WHERE hire_date > '1987-09-07',afficher les employés qui ont rejoint après le 7 septembre 1987.
SELECT * FROM employees WHERE hire_date > '1987-09-07',Quels employés ont été embauchés après le 7 septembre 1987 ?
SELECT job_title FROM jobs WHERE min_salary > 9000,afficher l'intitulé des postes dont le salaire minimum est supérieur à 9000.
SELECT job_title FROM jobs WHERE min_salary > 9000,Quels intitulés de poste correspondent aux emplois dont le salaire est supérieur à 9 000 ?
"SELECT job_title , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000","afficher le titre de l'emploi, la différence entre les salaires minimum et maximum pour les emplois dont le salaire maximum est compris entre 12 000 et 18 000."
"SELECT job_title , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",Quels sont les intitulés de postes et la fourchette de salaires pour les emplois dont le salaire maximum est compris entre 12 000 et 18 000 ?
"SELECT email FROM employees WHERE commission_pct = ""null"" AND salary BETWEEN 7000 AND 12000 AND department_id = 50",afficher les e-mails des employés qui n'ont pas de pourcentage de commission et de salaire compris entre 7000 et 12000 et qui travaillent dans ce département dont le nombre est 50.
"SELECT email FROM employees WHERE commission_pct = ""null"" AND salary BETWEEN 7000 AND 12000 AND department_id = 50","Quels sont les mails des salariés à commission nulle, salaire compris entre 7000 et 12000, et qui travaillent dans le département 50 ?"
"SELECT employee_id , MAX(end_date) FROM job_history GROUP BY employee_id",afficher le matricule de chaque employé et la date à laquelle il a mis fin à son emploi précédent.
"SELECT employee_id , MAX(end_date) FROM job_history GROUP BY employee_id",Quels sont les identifiants d'employé pour chaque employé et les dates finales d'emploi à leur dernier emploi ?
SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10,afficher les départements où travaillent plus de dix employés qui ont reçu un pourcentage de commission.
SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10,Quels sont les numéros de département pour lesquels plus de 10 employés ont reçu une commission ?
"SELECT DISTINCT department_id FROM employees GROUP BY department_id , manager_id HAVING COUNT(employee_id) >= 4",Trouvez les identifiants des départements où un responsable gère 4 employés ou plus.
"SELECT DISTINCT department_id FROM employees GROUP BY department_id , manager_id HAVING COUNT(employee_id) >= 4",Que sont les identifiants de service pour les services dont les responsables gèrent plus de 3 employés ?
"SELECT DISTINCT department_id FROM employees GROUP BY department_id , manager_id HAVING COUNT(employee_id) >= 4",Quels sont les identifiants uniques des départements où un responsable gère 4 employés ou plus ?
"SELECT DISTINCT department_id FROM employees GROUP BY department_id , manager_id HAVING COUNT(employee_id) >= 4",Donner les identifiants de département distincts des départements dans lesquels un responsable est en charge de 4 employés ou plus ?
"SELECT department_id , AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id",afficher le salaire moyen des employés de chaque département qui perçoit un pourcentage de commission.
"SELECT department_id , AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id",Quel est le salaire moyen des salariés qui ont un pourcentage de commission non nul ?
"SELECT country_id , COUNT(*) FROM locations GROUP BY country_id",afficher l'ID du pays et le nombre de villes pour chaque pays.
"SELECT country_id , COUNT(*) FROM locations GROUP BY country_id",Donnez l'identifiant du pays et le nombre correspondant de villes dans chaque pays.
SELECT job_id FROM job_history WHERE end_date - start_date > 300 GROUP BY job_id HAVING COUNT(*) >= 2,afficher l'ID de travail pour les travaux qui ont été effectués par deux ou plus pendant plus de 300 jours.
SELECT job_id FROM job_history WHERE end_date - start_date > 300 GROUP BY job_id HAVING COUNT(*) >= 2,Quels sont les identifiants de travail pour les travaux effectués plus d'une fois pendant une période de plus de 300 jours ?
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2,afficher l'ID des employés qui ont occupé deux emplois ou plus dans le passé.
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2,Quels sont les identifiants d'employé pour les employés qui ont occupé deux emplois ou plus ?
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2,afficher l'ID des employés qui ont occupé deux emplois ou plus dans le passé.
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2,Quels sont les identifiants des employés pour ceux qui avaient deux emplois ou plus.
"SELECT T1.employee_id , T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id",Trouvez un employé avec une pièce d'identité et le nom du pays où il travaille actuellement.
"SELECT T1.employee_id , T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id",Quels sont tous les identifiants des employés et les noms des pays dans lesquels ils travaillent ?
"SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",afficher le nom du département et le nombre d'employés dans chacun des départements.
"SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",Donnez le nom de chaque département et le nombre d'employés dans chacun.
"SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",afficher le nom du département et le nombre d'employés dans chacun des départements.
"SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",Quels sont les noms des départements et combien d'employés travaillent dans chacun d'eux ?
SELECT * FROM job_history AS T1 JOIN employees AS T2 ON T1.employee_id = T2.employee_id WHERE T2.salary >= 12000,Pouvez-vous retourner toutes les informations détaillées sur les emplois qui ont été effectués par l'un des employés qui gagnent actuellement un salaire supérieur à 12 000 ?
SELECT * FROM job_history AS T1 JOIN employees AS T2 ON T1.employee_id = T2.employee_id WHERE T2.salary >= 12000,Quelles sont toutes les informations sur l'historique des emplois effectuées par les employés gagnant un salaire supérieur ou égal à 12000 ?
"SELECT job_title , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",afficher le titre du poste et le salaire moyen des employés.
"SELECT job_title , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title",Quel est le salaire moyen pour chaque titre de poste ?
"SELECT first_name , last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163 )",Quel est le nom complet (prénom et nom) des employés qui perçoivent plus de salaire que l'employé dont l'identifiant est 163 ?
"SELECT first_name , last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163 )",Fournissez les noms complets des employés qui gagnent plus que l'employé avec l'identifiant 163.
"SELECT MIN(salary) , department_id FROM employees GROUP BY department_id",retourner le plus petit salaire pour chaque département.
"SELECT MIN(salary) , department_id FROM employees GROUP BY department_id",Quel est le salaire minimum dans chaque département ?
"SELECT first_name , last_name , department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",Trouvez le prénom et le nom de famille et l'identifiant du département pour les employés qui gagnent un salaire qui est le plus petit salaire de l'un des départements.
"SELECT first_name , last_name , department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",Quels sont les noms complets et les numéros de département des employés les moins bien payés dans tous les départements.
SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees),Trouvez l'identifiant de l'employé pour tous les employés qui gagnent plus que le salaire moyen.
SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees),Quels sont les identifiants des employés pour les employés qui gagnent plus que la moyenne ?
"SELECT employee_id , salary FROM employees WHERE manager_id = (SELECT employee_id FROM employees WHERE first_name = 'Payam' )",afficher l'identifiant et le salaire de tous les employés qui relèvent de Payam (prénom).
"SELECT employee_id , salary FROM employees WHERE manager_id = (SELECT employee_id FROM employees WHERE first_name = 'Payam' )",Quels sont les identifiants des employés qui relèvent de Payam et quels sont leurs salaires ?
SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id,trouver le nom de tous les départements qui ont effectivement un ou plusieurs employés qui leur sont affectés.
SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id,Quels sont les noms des départements qui ont au moins un employé.
SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id,obtenir les coordonnées des employés qui gèrent un service.
SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id,Quelles sont toutes les informations concernant les employés qui sont des managers ?
SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000,Trouvez l'ID d'emploi pour les emplois dont le salaire moyen est supérieur à 8000.
SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000,Quels sont les job ids correspondant aux jobs dont le salaire moyen est supérieur à 8000 ?
"SELECT T1.employee_id , T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80",afficher l'ID d'employé et le nom du poste pour tous les postes du service 80.
"SELECT T1.employee_id , T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80",quels sont les identifiants des employés et les intitulés de poste des employés du département 80 ?
"SELECT T1.first_name , T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'",Quels sont le prénom et le numéro de poste de tous les employés du service des finances ?
"SELECT T1.first_name , T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'",Indiquez le prénom et l'identifiant de poste de tous les employés du service des finances.
SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500,afficher toutes les informations des employés dont le salaire est compris entre le plus petit salaire et 2500.
SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500,Quelles sont toutes les informations concernant les employés dont les salaires sont supérieurs au minimum et inférieurs à 2 500 ?
SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200),Trouvez les identifiants des employés qui ne travaillent pas dans les départements où travaillent certains employés dont l'identifiant de responsable est compris entre 100 et 200.
SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200),Quels sont les identifiants des employés qui ne travaillent pas dans des services dont les responsables ont des identifiants entre 100 et 200 ?
"SELECT first_name , last_name , hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = ""Clara"")",afficher le nom de l'employé (prénom et nom) et la date d'embauche pour tous les employés du même service que Clara.
"SELECT first_name , last_name , hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = ""Clara"")","Quels sont les noms, prénoms et dates d'embauche des employés du même service que quelqu'un qui s'appelle Clara ?"
"SELECT first_name , last_name , hire_date FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = ""Clara"") AND first_name != ""Clara""",afficher le nom de l'employé (prénom et nom) et la date d'embauche pour tous les employés du même service que Clara à l'exclusion de Clara.
"SELECT first_name , last_name , hire_date FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = ""Clara"") AND first_name != ""Clara""","Quels sont les noms complets et les dates d'embauche des employés du même service que quelqu'un qui s'appelle Clara, sans inclure Clara ?"
"SELECT employee_id , first_name , last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )",afficher le numéro et le nom de l'employé (prénom et nom) pour tous les employés qui travaillent dans un service avec tout employé dont le nom contient un 'T'.
"SELECT employee_id , first_name , last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )",Quels sont les identifiants et les noms complets des employés qui travaillent dans un service dont une personne dont le prénom contient la lettre T ?
"SELECT employee_id , first_name , last_name , salary FROM employees WHERE salary > ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')","afficher le numéro d'employé, le nom (prénom et nom de famille) et le salaire de tous les employés qui gagnent plus que le salaire moyen et qui travaillent dans un service avec un employé avec un 'J' dans son prénom."
"SELECT employee_id , first_name , last_name , salary FROM employees WHERE salary > ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')","Quels sont les identifiants, noms complets et salaires des employés qui gagnent plus que la moyenne et qui travaillent dans un service dont les employés ont la lettre J dans leur prénom ?"
"SELECT employee_id , job_id FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' )",afficher le numéro d'employé et l'ID de poste pour tous les employés dont le salaire est inférieur à tout salaire des employés dont le titre de poste est MK_MAN.
"SELECT employee_id , job_id FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' )",Quels sont les identifiants d'employé et les identifiants de poste pour les employés qui gagnent moins que l'employé le moins bien rémunéré avec le titre MK_MAN ?
"SELECT employee_id , first_name , last_name , job_id FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' )","afficher le numéro d'employé, le nom (prénom et nom) et le titre du poste pour tous les employés dont le salaire est supérieur à tout salaire des employés dont le titre du poste est PU_MAN."
"SELECT employee_id , first_name , last_name , job_id FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' )","Quels sont les identifiants d'employés, les noms complets et les identifiants de poste des employés qui gagnent plus que l'employé le mieux rémunéré avec le titre PU_MAN ?"
"SELECT department_id , SUM(salary) FROM employees GROUP BY department_id HAVING count(*) >= 2",afficher l'identifiant du département et le salaire total pour les départements qui contiennent au moins deux employés.
"SELECT department_id , SUM(salary) FROM employees GROUP BY department_id HAVING count(*) >= 2",Quels sont les salaires totaux et l'identifiant du département pour chaque département qui compte plus de 2 employés ?
SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history),afficher toutes les informations de ces employés qui n'ont pas eu d'emploi dans le passé.
SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history),Quelles sont toutes les informations sur les employés qui n'ont jamais eu d'emploi dans le passé ?
"SELECT first_name , last_name , salary , department_id , MAX(salary) FROM employees GROUP BY department_id","afficher l'ID du service, le nom complet (prénom et nom), le salaire des employés qui ont le salaire le plus élevé dans chaque service."
"SELECT first_name , last_name , salary , department_id , MAX(salary) FROM employees GROUP BY department_id","Quels sont les identifiants de département, les noms complets et les salaires des employés qui gagnent le plus dans leurs départements ?"
"SELECT T1.first_name , T1.last_name , T2.department_name , T3.city , T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id","afficher le prénom et le nom, le département, la ville et la province de chaque employé."
"SELECT T1.first_name , T1.last_name , T2.department_name , T3.city , T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id","Quels sont les noms complets, les départements, les villes et les provinces de chaque employé ?"
"SELECT T1.first_name , T1.last_name , T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'","afficher les employés qui contiennent une lettre z à leur prénom et afficher également leur nom de famille, ville."
"SELECT T1.first_name , T1.last_name , T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'","Quels sont les noms, prénoms et villes des employés qui ont la lettre Z dans leur prénom ?"
"SELECT T1.department_name , T2.city , T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id = T1.location_id","afficher le nom du département, la ville et la province de l'état pour chaque département."
"SELECT T1.department_name , T2.city , T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id = T1.location_id","Quels sont les noms de département, les villes et les provinces de chaque département ?"
"SELECT T1.first_name , T1.last_name , T1.employee_id , T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id",afficher le nom complet (prénom et nom) de l'employé avec ID et nom du pays où il travaille actuellement.
"SELECT T1.first_name , T1.last_name , T1.employee_id , T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id","Quels sont les noms complets, les identifiants de chaque employé et le nom du pays dans lequel ils se trouvent ?"
"SELECT first_name , last_name , salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'",afficher le nom complet (nom et prénom) et le salaire des employés qui travaillent dans n'importe quel service situé à Londres.
"SELECT first_name , last_name , salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'","Quels sont les noms, prénoms et salaires des employés travaillant dans la ville de Londres ?"
"SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",Comment s'appelle la chanson qui est sortie l'année dernière ?
"SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1",Quel est le nom de la chanson qui est sortie le plus récemment ?
SELECT f_id FROM files ORDER BY duration DESC LIMIT 1,Quel est l'identifiant de la chanson la plus longue ?
SELECT f_id FROM files ORDER BY duration DESC LIMIT 1,Trouvez l'identifiant de la chanson qui dure le plus longtemps.
"SELECT song_name FROM song WHERE languages = ""english""",Trouvez les noms de toutes les chansons anglaises.
"SELECT song_name FROM song WHERE languages = ""english""",Quels sont les noms de toutes les chansons en anglais ?
"SELECT f_id FROM files WHERE formats = ""mp3""",Quels sont les identifiants des chansons dont le format est mp3.
"SELECT f_id FROM files WHERE formats = ""mp3""",Quels sont les identifiants de tous les fichiers au format mp3 ?
"SELECT DISTINCT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.rating > 9",Indiquez le nom et le pays d'origine de tous les chanteurs qui ont produit des chansons avec une note supérieure à 9.
"SELECT DISTINCT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.rating > 9",Quels sont les différents noms et pays d'origine de tous les artistes dont le classement des chansons est supérieur à 9 ?
"SELECT DISTINCT T1.file_size , T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800",Indiquez la taille et le format du fichier pour toutes les chansons dont la résolution est inférieure à 800.
"SELECT DISTINCT T1.file_size , T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800",Quels sont les tailles et formats de fichiers pour toutes les chansons avec une résolution inférieure à 800 ?
SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id = T2.f_id ORDER BY T2.duration LIMIT 1,Comment s'appelle l'artiste qui a produit la chanson la plus courte ?
SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id = T2.f_id ORDER BY T2.duration LIMIT 1,Quels sont les noms des artistes qui ont chanté la chanson la plus courte ?
"SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.rating DESC LIMIT 3",Quels sont les noms et les pays d'origine des artistes qui ont produit les trois chansons les mieux notées.
"SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.rating DESC LIMIT 3",Quels sont les noms des chanteurs qui ont chanté les 3 chansons les mieux notées et de quels pays sont-ils originaires ?
"SELECT count(*) FROM files WHERE duration LIKE ""4:%""",Combien de chansons ont une durée de 4 minutes ?
"SELECT count(*) FROM files WHERE duration LIKE ""4:%""",Quel est le nombre de chansons qui durent environ 4 minutes ?
"SELECT count(*) FROM artist WHERE country = ""Bangladesh""",Combien d'artistes viennent du Bangladesh ?
"SELECT count(*) FROM artist WHERE country = ""Bangladesh""",Combien d'artistes bangladais sont répertoriés ?
"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = ""Female""",Quelle est la note moyenne des chansons produites par des artistes féminines ?
"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = ""Female""","Combien de chansons, en moyenne, sont chantées par une artiste féminine ?"
SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1,Quel est le format de fichier le plus populaire ?
SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1,Trouvez le format de fichier utilisé par le plus de fichiers.
"SELECT artist_name FROM artist WHERE country = ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages = ""english""",Trouvez les noms des artistes qui viennent du Royaume-Uni et qui ont produit des chansons en anglais.
"SELECT artist_name FROM artist WHERE country = ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages = ""english""",Quels sont les noms des artistes qui viennent du Royaume-Uni et qui ont chanté des chansons en anglais ?
"SELECT f_id FROM files WHERE formats = ""mp4"" INTERSECT SELECT f_id FROM song WHERE resolution < 1000",Trouvez l'identifiant des chansons disponibles au format mp4 et dont la résolution est inférieure à 1000.
"SELECT f_id FROM files WHERE formats = ""mp4"" INTERSECT SELECT f_id FROM song WHERE resolution < 1000",Quel est l'identifiant des fichiers disponibles au format mp4 et d'une résolution inférieure à 1000 ?
"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = ""Female"" AND T2.languages = ""bangla""",Quel est le pays d'origine de l'artiste qui est une femme et qui a produit une chanson en bengali ?
"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = ""Female"" AND T2.languages = ""bangla""",De quels pays sont originaires les artistes féminines qui ont chanté en bengali ?
"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = ""mp3"" AND T2.resolution < 800",Quelle est la durée moyenne des chansons au format mp3 et à la résolution inférieure à 800 ?
"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = ""mp3"" AND T2.resolution < 800",Quelle est la durée moyenne d'une chanson pour les chansons au format mp3 et dont la résolution est inférieure à 800 ?
"SELECT count(*) , gender FROM artist GROUP BY gender",Quel est le nombre d'artistes pour chaque genre ?
"SELECT count(*) , gender FROM artist GROUP BY gender",Combien d'artistes sont des hommes et combien sont des femmes ?
"SELECT avg(rating) , languages FROM song GROUP BY languages",Quelle est la note moyenne des chansons pour chaque langue ?
"SELECT avg(rating) , languages FROM song GROUP BY languages",Quelle est la note moyenne des chansons pour chaque langue ?
"SELECT T1.gender , T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.resolution LIMIT 1",Renvoie le sexe et le nom de l'artiste qui a produit la chanson avec la résolution la plus basse.
"SELECT T1.gender , T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.resolution LIMIT 1",Quel est le sexe et le nom de l'artiste qui a chanté la chanson avec la plus petite résolution ?
"SELECT count(*) , formats FROM files GROUP BY formats","Pour chaque format de fichier, renvoyez le nombre d'artistes qui ont sorti des chansons dans ce format."
"SELECT count(*) , formats FROM files GROUP BY formats",Combien de chansons ont été publiées pour chaque format ?
"SELECT DISTINCT song_name FROM song WHERE resolution > (SELECT min(resolution) FROM song WHERE languages = ""english"")",Trouvez les noms distincts de toutes les chansons qui ont une résolution plus élevée que certaines chansons en anglais.
"SELECT DISTINCT song_name FROM song WHERE resolution > (SELECT min(resolution) FROM song WHERE languages = ""english"")",Quels sont les différents noms pour toutes les chansons qui ont une résolution plus élevée que les chansons en anglais ?
"SELECT song_name FROM song WHERE rating < (SELECT max(rating) FROM song WHERE genre_is = ""blues"")",Quels sont les noms de toutes les chansons qui ont une cote inférieure à certaines chansons du genre blues ?
"SELECT song_name FROM song WHERE rating < (SELECT max(rating) FROM song WHERE genre_is = ""blues"")",Quels sont les noms des chansons qui ont une cote inférieure à au moins une chanson de blues ?
"SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.song_name LIKE ""%love%""","Quel est le nom et le pays d'origine de l'artiste qui a sorti une chanson dont le titre contient ""amour"" ?"
"SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.song_name LIKE ""%love%""","Quels sont les noms des artistes qui ont sorti une chanson qui a le mot amour dans son titre, et d'où viennent les artistes ?"
"SELECT T1.artist_name , T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""",Indiquez le nom et le sexe de tous les artistes qui ont sorti des chansons en mars.
"SELECT T1.artist_name , T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""",Quels sont les noms et les sexes de tous les artistes qui ont sorti des chansons au mois de mars ?
"SELECT g_name , rating FROM genre ORDER BY g_name","Énumérez les noms de tous les genres par ordre alphabétique, ainsi que leurs notes."
"SELECT g_name , rating FROM genre ORDER BY g_name","Quels sont les noms de tous les genres par ordre alphabétique, combinés avec leurs notes ?"
SELECT song_name FROM song ORDER BY resolution,Donnez-moi une liste des noms de toutes les chansons classées par leur résolution.
SELECT song_name FROM song ORDER BY resolution,Quels sont les noms de toutes les chansons qui sont classées par leurs numéros de résolution ?
"SELECT f_id FROM files WHERE formats = ""mp4"" UNION SELECT f_id FROM song WHERE resolution > 720",Quels sont les identifiants des chansons disponibles au format mp4 ou ayant une résolution supérieure à 720 ?
"SELECT f_id FROM files WHERE formats = ""mp4"" UNION SELECT f_id FROM song WHERE resolution > 720",Quels sont les identifiants de toutes les chansons disponibles en mp4 ou ayant une résolution supérieure à 720 ?
"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE ""4:%"" UNION SELECT song_name FROM song WHERE languages = ""english""",Énumérez les noms de toutes les chansons d'une durée de 4 minutes ou en anglais.
"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE ""4:%"" UNION SELECT song_name FROM song WHERE languages = ""english""",Quels sont les noms de toutes les chansons qui durent environ 4 minutes ou qui sont en anglais ?
SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1,Quelle est la langue utilisée le plus souvent dans les chansons ?
SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1,Quelles sont les langues les plus utilisées dans les chansons ?
SELECT artist_name FROM song WHERE resolution > 500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1,Quelle est la langue qui a été utilisée le plus souvent dans les chansons avec une résolution supérieure à 500 ?
SELECT artist_name FROM song WHERE resolution > 500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1,"Quel est le nom de l'artiste, pour chaque langue, qui a le plus de chansons avec une résolution supérieure à 500 ?"
"SELECT artist_name FROM artist WHERE country = ""UK"" AND gender = ""Male""",Comment s'appellent les artistes masculins originaires du Royaume-Uni ?
"SELECT artist_name FROM artist WHERE country = ""UK"" AND gender = ""Male""",Quels sont les noms de tous les artistes masculins britanniques ?
"SELECT song_name FROM song WHERE genre_is = ""modern"" OR languages = ""english""",Trouvez les noms des chansons dont le genre est moderne ou la langue est l'anglais.
"SELECT song_name FROM song WHERE genre_is = ""modern"" OR languages = ""english""",Quels sont les noms des chansons qui sont modernes ou chantées en anglais ?
"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = ""mp3"" INTERSECT SELECT song_name FROM song WHERE resolution < 1000",Renvoie les noms des chansons dont le format est mp3 et la résolution est inférieure à 1000.
"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = ""mp3"" INTERSECT SELECT song_name FROM song WHERE resolution < 1000",Quels sont les noms de toutes les chansons qui sont au format mp3 et qui ont une résolution inférieure à 1000 ?
"SELECT artist_name FROM artist WHERE country = ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = ""english""",Renvoyez les noms des chanteurs qui viennent du Royaume-Uni et qui ont sorti une chanson en anglais.
"SELECT artist_name FROM artist WHERE country = ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = ""english""",Quels sont les noms de tous les chanteurs qui viennent du Royaume-Uni et qui ont sorti une chanson en anglais ?
"SELECT avg(rating) , avg(resolution) FROM song WHERE languages = ""bangla""",Quelles sont la note moyenne et la résolution des chansons en bengali ?
"SELECT avg(rating) , avg(resolution) FROM song WHERE languages = ""bangla""",Quelle est la note moyenne et la résolution de toutes les chansons bangla ?
"SELECT max(T2.resolution) , min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE ""3:%""",Quelles sont la résolution maximale et minimale des chansons dont la durée est de 3 minutes ?
"SELECT max(T2.resolution) , min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE ""3:%""",Quelle est la résolution maximale et minimale de toutes les chansons d'environ 3 minutes ?
"SELECT max(T1.duration) , max(T2.resolution) , T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.languages ORDER BY T2.languages",Quelles sont la durée et la résolution maximales des chansons regroupées et classées par langues ?
"SELECT max(T1.duration) , max(T2.resolution) , T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.languages ORDER BY T2.languages","Quelles sont la durée et la résolution maximales de toutes les chansons, pour chaque langue, classées par ordre alphabétique de langue ?"
"SELECT min(T1.duration) , min(T2.rating) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",Quelles sont la durée la plus courte et la note la plus basse des chansons regroupées par genre et classées par genre ?
"SELECT min(T1.duration) , min(T2.rating) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is","Quelle est la chanson la plus courte et la moins bien notée pour chaque genre, classée alphabétiquement par genre ?"
"SELECT T1.artist_name , count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = ""english"" GROUP BY T2.artist_name HAVING count(*) >= 1",Trouvez les noms et le nombre d'œuvres de tous les artistes qui ont au moins une chanson en anglais.
"SELECT T1.artist_name , count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = ""english"" GROUP BY T2.artist_name HAVING count(*) >= 1",Quels sont les noms et le nombre d'œuvres pour tous les artistes qui ont chanté au moins une chanson en anglais ?
"SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.resolution > 900 GROUP BY T2.artist_name HAVING count(*) >= 1",Trouvez le nom et le pays d'origine de tous les artistes qui ont sorti au moins une chanson de résolution supérieure à 900.
"SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.resolution > 900 GROUP BY T2.artist_name HAVING count(*) >= 1",Quel est le nom et le pays d'origine de chaque artiste qui a sorti une chanson avec une résolution supérieure à 900 ?
"SELECT T1.artist_name , count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",Trouvez les noms et le nombre d'œuvres des trois artistes qui ont produit le plus de chansons.
"SELECT T1.artist_name , count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",Quels sont les noms des trois artistes qui ont produit le plus de chansons et combien d'œuvres ont-ils produites ?
SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1,Trouver le pays d'origine de l'artiste qui a composé le moins de chansons ?
SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1,De quel pays est l'artiste qui a composé le moins de chansons ?
SELECT song_name FROM song WHERE rating < (SELECT min(rating) FROM song WHERE languages = 'english'),Quels sont les noms des chansons dont la note est inférieure à la note de toutes les chansons en anglais ?
SELECT song_name FROM song WHERE rating < (SELECT min(rating) FROM song WHERE languages = 'english'),Quels sont les noms de chaque chanson dont la note est inférieure à la note minimale pour les chansons en anglais ?
SELECT f_id FROM song WHERE resolution > (SELECT max(resolution) FROM song WHERE rating < 8),Quel est l'identifiant des chansons dont la résolution est supérieure à la résolution des chansons dont la note est inférieure à 8 ?
SELECT f_id FROM song WHERE resolution > (SELECT max(resolution) FROM song WHERE rating < 8),Quel est l'identifiant de chaque chanson qui a une résolution supérieure à celle d'une chanson avec une note inférieure à 8 ?
"SELECT f_id FROM song WHERE resolution > (SELECT avg(resolution) FROM song WHERE genre_is = ""modern"")",Quel est l'identifiant des chansons dont la résolution est supérieure à la résolution moyenne des chansons du genre moderne ?
"SELECT f_id FROM song WHERE resolution > (SELECT avg(resolution) FROM song WHERE genre_is = ""modern"")",Quels sont les identifiants de toutes les chansons qui ont une résolution supérieure à la résolution moyenne dans le genre moderne ?
"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",Trouvez les 3 meilleurs artistes qui ont le plus grand nombre d'œuvres de chansons dont la langue est le bengali.
"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",Quels sont les 3 meilleurs artistes avec le plus grand nombre de chansons en bengali ?
"SELECT f_id , genre_is , artist_name FROM song WHERE languages = ""english"" ORDER BY rating","Répertoriez l'identifiant, le genre et le nom de l'artiste des chansons anglaises classées par note."
"SELECT f_id , genre_is , artist_name FROM song WHERE languages = ""english"" ORDER BY rating","Quels sont l'identifiant, le genre et le nom de l'artiste pour chaque chanson anglaise classée par classement croissant ?"
"SELECT T1.duration , T1.file_size , T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.genre_is = ""pop"" ORDER BY T2.song_name","Lister la durée, la taille du fichier et le format des chansons dont le genre est pop, classés par titre ?"
"SELECT T1.duration , T1.file_size , T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.genre_is = ""pop"" ORDER BY T2.song_name","Quelle est la durée, la taille du fichier et le format de chaque chanson pop, classés par titre par ordre alphabétique ?"
"SELECT DISTINCT artist_name FROM song WHERE languages = ""english"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 8",Trouvez les noms des artistes qui ont produit des chansons en anglais mais qui n'ont jamais reçu de note supérieure à 8.
"SELECT DISTINCT artist_name FROM song WHERE languages = ""english"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 8",Quels sont les noms des différents artistes qui ont produit une chanson en anglais mais qui n'ont jamais reçu une note supérieure à 8 ?
"SELECT DISTINCT artist_name FROM artist WHERE country = ""Bangladesh"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7",Trouvez les noms des artistes originaires du Bangladesh et qui n'ont jamais reçu de note supérieure à 7.
"SELECT DISTINCT artist_name FROM artist WHERE country = ""Bangladesh"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7",Quels sont les noms des différents artistes du Bangladesh qui n'ont jamais reçu une note supérieure à 7 ?
"SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",quel est le nom complet et l'identifiant de l'université avec le plus grand nombre de joueurs de baseball ?
"SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",Trouvez le nom complet et l'identifiant du collège qui compte le plus de joueurs de baseball.
SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings',Quel est le salaire moyen des joueurs de l'équipe 'Boston Red Stockings' ?
SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings',Calculez le salaire moyen des joueurs de l'équipe appelée 'Boston Red Stockings'.
"SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998",Quels sont les noms et prénoms des joueurs ayant participé au All Star Game en 1998 ?
"SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998",Indiquez le prénom et le nom des joueurs qui ont participé au All Star Game en 1998.
"SELECT T1.name_first , T1.name_last , T1.player_id , count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;","Quels sont le prénom, le nom et l'identifiant du joueur avec le plus d'expériences All Star Game ? Indiquez également le décompte."
"SELECT T1.name_first , T1.name_last , T1.player_id , count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;","Quel joueur a le plus d'expériences All Star Game ? Donnez-moi le prénom, le nom et l'identifiant du joueur, ainsi que le nombre de fois où le joueur a participé au All Star Game."
"SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid;",Combien de joueurs entrent au Hall of Fame chaque année ?
"SELECT yearid , count(*) FROM hall_of_fame GROUP BY yearid;",Comptez le nombre de joueurs qui entrent au Hall of Fame chaque année.
"SELECT YEAR , avg(attendance) FROM home_game GROUP BY YEAR;",Quel est le nombre moyen de spectateurs aux matchs à domicile chaque année ?
"SELECT YEAR , avg(attendance) FROM home_game GROUP BY YEAR;","Pour chaque année, indiquez l'année et le nombre moyen de présences aux matchs à domicile."
"SELECT T2.team_id , T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;","En 2014, quels sont l'identifiant et le rang de l'équipe qui a le plus grand nombre moyen d'assiduité ?"
"SELECT T2.team_id , T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;",Trouvez l'identifiant et le rang de l'équipe qui a le taux de participation moyen le plus élevé en 2014.
"SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;","Quels sont le prénom, le nom et l'identifiant du manager qui a remporté le plus de prix de manager ?"
"SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;","Quel manager a remporté le plus de prix de manager ? Donnez-moi le prénom, le nom et l'identifiant du responsable."
SELECT count(*) FROM park WHERE state = 'NY';,Combien y a-t-il de parcs dans l'état de NY ?
SELECT count(*) FROM park WHERE state = 'NY';,Montrez-moi le nombre de parcs dont dispose l'État de New York.
"SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",Quels sont les 3 joueurs qui ont remporté le plus de prix de joueur ? Indiquez leur nom complet et leur identifiant.
"SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;","Trouvez le prénom, le nom et l'identifiant des trois meilleurs joueurs qui ont remporté le plus de récompenses."
SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;,Citez trois pays qui sont les origines du moins de joueurs.
SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;,Quels sont les trois pays d'où viennent le moins de joueurs ?
"SELECT name_first , name_last FROM player WHERE death_year = '';",Trouvez le prénom et le nom de tous les joueurs dont l'enregistrement de décès est vide.
"SELECT name_first , name_last FROM player WHERE death_year = '';",Quels sont le prénom et le nom des joueurs dont la fiche de décès est vide ?
SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats = 'R';,"Combien de joueurs nés aux États-Unis sont des frappeurs droitiers ? C'est-à-dire, avoir la valeur de pâte 'R'."
SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats = 'R';,Comptez le nombre de joueurs qui sont nés aux États-Unis et qui ont des informations sur les chauves-souris 'R'.
SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University';,Quelle est la taille moyenne des joueurs du collège nommé 'Yale University' ?
SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University';,Trouvez la taille moyenne des joueurs qui appartiennent au collège appelé 'Yale University'.
"SELECT T1.name , T1.team_id , max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id;","Quel est le salaire le plus élevé de chaque équipe ? Indiquez le nom de l'équipe, l'identifiant et le salaire maximum."
"SELECT T1.name , T1.team_id , max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id;","Pour chaque équipe, renvoyez le nom de l'équipe, l'identifiant et le salaire maximum parmi l'équipe."
"SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",Quels sont le nom et l'identifiant de l'équipe offrant le salaire moyen le plus bas ?
"SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",Quelle équipe offre le salaire moyen le plus bas ? Donnez-moi le nom et l'identifiant de l'équipe.
"SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year = 1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year = 1961",Trouvez le prénom et le nom des joueurs qui ont remporté le prix en 1960 et en 1961.
"SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year = 1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year = 1961",Quels joueurs ont remporté des prix en 1960 et 1961 ? Renvoyez leurs prénoms et noms de famille.
"SELECT name_first , name_last FROM player WHERE weight > 220 OR height < 75",Indiquez le prénom et le nom des joueurs qui ont un poids supérieur à 220 ou une taille inférieure à 75.
"SELECT name_first , name_last FROM player WHERE weight > 220 OR height < 75",Quels sont le prénom et le nom des joueurs qui ont un poids supérieur à 220 ou une taille inférieure à 75 ?
SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings';,Énumérez les scores maximum de l'équipe Boston Red Stockings lorsque l'équipe a gagné en séries éliminatoires ?
SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings';,Quels sont les scores maximum que l'équipe des Boston Red Stockings a obtenus lorsque l'équipe a gagné en séries éliminatoires ?
SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2009;,Combien de fois les Boston Red Stockings ont-ils perdu en séries éliminatoires en 2009 ?
SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2009;,"Comptez le nombre de fois que l'équipe ""Boston Red Stockings"" a perdu en séries éliminatoires 2009."
"SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;",Quels sont le nom et l'identifiant de l'équipe avec le plus de victoires en séries éliminatoires 2008 ?
"SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;",Trouvez le nom et l'identifiant de l'équipe qui a gagné le plus de fois en séries éliminatoires 2008.
"SELECT count(*) , T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year",Quel est le nombre de victoires de l'équipe Boston Red Stockings en séries éliminatoires chaque année dans l'histoire ?
"SELECT count(*) , T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year","Pour chaque année, indiquez l'année et le nombre de victoires de l'équipe Boston Red Stockings en séries éliminatoires."
SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' );,Quel est le nombre total de matchs d'après-saison auxquels l'équipe des Boston Red Stockings a participé ?
SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' );,Combien de fois au total l'équipe des Boston Red Stockings a-t-elle participé aux matchs d'après-saison ?
SELECT count(*) FROM postseason WHERE YEAR = 1885 AND ties = 1;,"Combien de matchs en séries éliminatoires de 1885 ont abouti à des égalités (c'est-à-dire que la valeur des ""égalités"" est de '1') ?"
SELECT count(*) FROM postseason WHERE YEAR = 1885 AND ties = 1;,"Trouvez le nombre de matchs à égalité (la valeur des ""égalités"" est '1') en séries éliminatoires de 1885."
SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2010,Quel est le salaire total payé par l'équipe Boston Red Stockings en 2010 ?
SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2010,Quel est le total des dépenses salariales de l'équipe des Boston Red Stockings en 2010 ?
SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000,Combien y avait-il de joueurs dans l'équipe des Boston Red Stockings en 2000 ?
SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000,Combien de joueurs les Boston Red Stockings avaient-ils en 2000 ?
SELECT salary FROM salary WHERE YEAR = 2001 ORDER BY salary DESC LIMIT 3;,Lister les 3 plus hauts salaires des joueurs en 2001 ?
SELECT salary FROM salary WHERE YEAR = 2001 ORDER BY salary DESC LIMIT 3;,Quel salaire les 3 meilleurs joueurs les mieux payés ont-ils reçu en 2001 ?
SELECT salary FROM salary WHERE YEAR = 2010 UNION SELECT salary FROM salary WHERE YEAR = 2001,Quelles étaient toutes les valeurs salariales des joueurs en 2010 et 2001 ?
SELECT salary FROM salary WHERE YEAR = 2010 UNION SELECT salary FROM salary WHERE YEAR = 2001,Énumérez toutes les valeurs salariales que les joueurs ont reçues en 2010 et 2001.
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;,En quelle année le moins de personnes sont-elles entrées au Temple de la renommée ?
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;,Trouvez l'année au cours de laquelle le moins de personnes entrent au Temple de la renommée.
SELECT count(*) FROM park WHERE city = 'Atlanta';,Combien y a-t-il de parcs dans la ville d'Atlanta ?
SELECT count(*) FROM park WHERE city = 'Atlanta';,Combien de parcs compte la ville d'Atlanta ?
SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';,"Combien de jeux ont été joués dans le parc ""Columbia Park"" en 1907 ?"
SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';,"Comptez le nombre de jeux qui ont eu lieu dans le parc ""Columbia Park"" en 1907."
SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2000 AND T2.city = 'Atlanta';,Combien de matchs ont été joués dans la ville d'Atlanta en 2000 ?
SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2000 AND T2.city = 'Atlanta';,Trouver le nombre de matchs ayant eu lieu dans la ville d'Atlanta en 2000.
SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;,Quelle est la fréquentation totale des matchs à domicile de l'équipe Boston Red Stockings de 2000 à 2010 ?
SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;,À combien de matchs au total l'équipe des Boston Red Stockings a-t-elle assisté de 2000 à 2010 ?
SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first = 'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;,Combien le joueur avec le prénom Len et le nom de famille Barker a-t-il gagné entre 1985 et 1990 au total ?
SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first = 'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;,Calculez le salaire total que le joueur avec le prénom Len et le nom de famille Barker a reçu entre 1985 et 1990.
"SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'",Indiquez le prénom et le nom des joueurs qui ont reçu un salaire de l'équipe des Nationals de Washington en 2005 et 2007.
"SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'",Quels sont le prénom et le nom des joueurs qui ont été payés par l'équipe des Nationals de Washington en 2005 et 2007 ?
SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;,Combien de matchs à domicile l'équipe des Boston Red Stockings a-t-elle disputés entre 1990 et 2000 au total ?
SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;,Comptez le nombre total de matchs auxquels l'équipe des Boston Red Stockings a assisté de 1990 à 2000.
SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;,Quelle équipe a eu le moins de présences dans les matchs à domicile en 1980 ?
SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;,Trouvez l'équipe qui a assisté au moins de matchs à domicile en 1980.
SELECT state FROM park GROUP BY state HAVING count(*) > 2;,Énumérez les noms des États qui ont plus de 2 parcs.
SELECT state FROM park GROUP BY state HAVING count(*) > 2;,Quels États ont plus de 2 parcs ?
SELECT count(*) FROM team_franchise WHERE active = 'Y';,"Combien de franchises d'équipe sont actives, avec une valeur active « Y » ?"
SELECT count(*) FROM team_franchise WHERE active = 'Y';,"Trouver le nombre de franchises d'équipe qui sont actives (avoir 'Y' comme information ""active"")."
SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;,Quelles villes ont 2 à 4 parcs ?
SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;,Trouvez toutes les villes qui ont 2 à 4 parcs.
SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;,Quel parc a eu le plus de fréquentation en 2008 ?
SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;,Quel parc a été le plus visité en 2008 ?
SELECT count(*) FROM camera_lens WHERE focal_length_mm > 15,Combien d'objectifs d'appareil photo ont une distance focale supérieure à 15 mm ?
"SELECT brand , name FROM camera_lens ORDER BY max_aperture DESC",Trouvez la marque et le nom de chaque objectif d'appareil photo et triez-les par ordre décroissant d'ouverture maximale.
"SELECT id , color , name FROM photos","Indiquez l'identifiant, le jeu de couleurs et le nom de toutes les photos."
"SELECT max(height) , avg(height) FROM mountain",Quelle est la hauteur maximale et moyenne des montagnes ?
SELECT avg(prominence) FROM mountain WHERE country = 'Morocco',Quelle est la proéminence moyenne des montagnes dans le pays 'Maroc' ?
"SELECT name , height , prominence FROM mountain WHERE range != 'Aberdare Range'","Quels sont le nom, la hauteur et la proéminence des montagnes qui n'appartiennent pas à la chaîne ""Aberdare Range"" ?"
"SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.height > 4000",Quels sont l'identifiant et le nom des photos pour les montagnes ?
"SELECT T1.id , T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING count(*) >= 2",Quels sont l'identifiant et le nom des montagnes qui ont au moins 2 photos ?
SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1,Quels sont les noms des appareils photo qui ont photographié le plus de montagnes ?
SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus',Comment s'appellent les photos prises avec la marque d'objectif 'Sigma' ou 'Olympus' ?
SELECT count(DISTINCT brand) FROM camera_lens,Combien y a-t-il de types différents de marques de lentilles ?
SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos ),Combien d'objectifs d'appareil photo ne sont pas utilisés pour prendre des photos ?
SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country = 'Ethiopia',Combien de types distincts d'objectifs d'appareils photo sont utilisés pour prendre des photos de montagnes dans le pays « Éthiopie » ?
SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Lasta Massif',Lister les marques d'objectifs qui ont pris à la fois une photo de montagne avec la gamme 'Toubkal Atlas' et une photo de montagne avec la gamme 'Lasta Massif'
"SELECT name , prominence FROM mountain EXCEPT SELECT T1.name , T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T3.brand = 'Sigma'",Montrez le nom et l'importance des montagnes dont la photo n'est pas prise par un objectif de marque 'Sigma'.
"SELECT name FROM camera_lens WHERE name LIKE ""%Digital%""","Répertoriez les noms d'objectifs de caméra contenant la sous-chaîne ""Digital""."
"SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",Quel est le nom de chaque objectif d'appareil photo et le nombre de photos prises par celui-ci ? Triez le résultat par le nombre de photos.
SELECT name FROM channel WHERE OWNER != 'CCTV',Trouvez les noms des chaînes qui n'appartiennent pas à CCTV.
SELECT name FROM channel WHERE OWNER != 'CCTV',Quelles chaînes n'appartiennent pas à CCTV ? Donnez-moi les noms des chaînes.
SELECT name FROM channel ORDER BY rating_in_percent DESC,"Répertoriez tous les noms de chaînes classés par classement en pourcentage, du plus grand au plus petit."
SELECT name FROM channel ORDER BY rating_in_percent DESC,Donnez-moi une liste de tous les noms de chaînes triés par classement des chaînes dans l'ordre décroissant.
SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1,Quel est le propriétaire de la chaîne qui a le taux d'audience le plus élevé ?
SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1,Montrez-moi le propriétaire de la chaîne avec la note la plus élevée.
SELECT count(*) FROM program,combien y a-t-il de programmes ?
SELECT count(*) FROM program,Comptez le nombre de programmes.
SELECT name FROM program ORDER BY launch,"répertorier tous les noms de programmes, classés par heure de lancement."
SELECT name FROM program ORDER BY launch,"Quelle est la liste des noms de programmes, triés par ordre de date de lancement ?"
"SELECT name , origin , OWNER FROM program","Indiquez le nom, l'origine et le propriétaire de chaque programme."
"SELECT name , origin , OWNER FROM program","Quels sont le nom, l'origine et le propriétaire de chaque programme ?"
SELECT name FROM program ORDER BY launch DESC LIMIT 1,trouver le nom du programme qui a été lancé le plus récemment.
SELECT name FROM program ORDER BY launch DESC LIMIT 1,Quel programme a été lancé le plus récemment ? Renvoie le nom du programme.
SELECT sum(Share_in_percent) FROM channel WHERE OWNER = 'CCTV',trouver la part totale en pourcentage de toutes les chaînes détenues par CCTV.
SELECT sum(Share_in_percent) FROM channel WHERE OWNER = 'CCTV',Quelle est la part totale (en pourcentage) de toutes les chaînes détenues par CCTV ?
SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning',Retrouvez les noms des chaînes qui sont diffusées le matin.
SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning',Quelles chaînes sont diffusées le matin ? Donnez-moi les noms des chaînes.
SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night',quels sont les noms des chaînes qui diffusent le matin et le soir ?
SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night',Quelles chaînes diffusent à la fois le matin et le soir ? Donnez-moi les noms des chaînes.
"SELECT count(*) , time_of_day FROM broadcast GROUP BY time_of_day",combien de programmes sont diffusés dans chaque tranche horaire de la journée ?
"SELECT count(*) , time_of_day FROM broadcast GROUP BY time_of_day",Comptez le nombre de programmes diffusés pour chaque tranche horaire d'une journée.
SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day = 'Night',trouver le nombre de programmes différents qui sont diffusés pendant la nuit.
SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day = 'Night',"Combien de programmes distincts sont diffusés à l'heure ""Nuit"" ?"
"SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = ""Morning""",Retrouvez les noms des programmes qui ne sont jamais diffusés le matin.
"SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = ""Morning""",Quels programmes ne sont jamais diffusés le matin ? Donnez-moi les noms des programmes.
"SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = ""Morning"" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = ""Night""",trouver les propriétaires de programmes qui ont des programmes à la fois le matin et le soir.
"SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = ""Morning"" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = ""Night""",Qui sont les propriétaires des programmes diffusés à la fois le matin et le soir ?
SELECT origin FROM program ORDER BY origin,Listez toutes les origines des programmes dans l'ordre alphabétique.
SELECT origin FROM program ORDER BY origin,Quelle est la liste des origines des programmes classées par ordre alphabétique ?
SELECT count(DISTINCT OWNER) FROM channel,quel est le nombre de propriétaires de chaînes différents ?
SELECT count(DISTINCT OWNER) FROM channel,Comptez le nombre de propriétaires de canaux distincts.
SELECT name FROM program WHERE origin != 'Beijing',trouver les noms de programmes dont l'origine n'est pas à Pékin.
SELECT name FROM program WHERE origin != 'Beijing',"Quels programmes ne sont pas originaires de ""Pékin"" ? Donnez-moi les noms des programmes."
SELECT name FROM channel WHERE OWNER = 'CCTV' OR OWNER = 'HBS',Quels sont les noms des chaînes détenues par CCTV ou HBS ?
SELECT name FROM channel WHERE OWNER = 'CCTV' OR OWNER = 'HBS',Répertorier les noms de toutes les chaînes détenues par CCTV ou HBS
"SELECT sum(Rating_in_percent) , OWNER FROM channel GROUP BY OWNER",Trouvez le ratio de classement total pour chaque propriétaire de chaîne.
"SELECT sum(Rating_in_percent) , OWNER FROM channel GROUP BY OWNER",Quelle est la note totale de la chaîne pour chaque propriétaire de chaîne ?
SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom du programme qui est diffusé le plus fréquemment.
SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1,Quelle émission est diffusée le plus souvent ? Donnez-moi le nom du programme.
SELECT count(*) FROM COURSES,Combien y a-t-il de cours au total ?
SELECT count(*) FROM COURSES,Trouver le nombre total de cours offerts.
SELECT count(*) FROM COURSES,Combien de cours au total sont répertoriés ?
SELECT count(*) FROM COURSES,Combien y a-t-il de cours ?
"SELECT course_description FROM COURSES WHERE course_name = ""database""","Quelles sont les descriptions des cours avec le nom ""base de données"" ?"
"SELECT course_description FROM COURSES WHERE course_name = ""database""","Renvoie la description des cours nommés ""base de données""."
"SELECT course_description FROM COURSES WHERE course_name = ""database""",Comment est décrit le cours de mathématiques ?
"SELECT course_description FROM COURSES WHERE course_name = ""database""",Quelles sont les descriptions de tous les cours de mathématiques ?
"SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = ""Cathrine""","Quelles sont les adresses des auteurs de cours ou des tuteurs avec le nom personnel ""Cathrine"""
"SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = ""Cathrine""","Renvoyez les adresses des auteurs de cours ou tuteurs dont le nom personnel est ""Cathrine""."
SELECT address_line_1 FROM Course_Authors_and_Tutors,Indiquez les adresses de tous les auteurs ou tuteurs du cours.
SELECT address_line_1 FROM Course_Authors_and_Tutors,Quelle est l'adresse de chaque auteur ou tuteur de cours ?
"SELECT login_name , family_name FROM Course_Authors_and_Tutors",Dressez la liste de tous les noms de connexion et noms de famille de l'auteur du cours et des tuteurs.
"SELECT login_name , family_name FROM Course_Authors_and_Tutors",Quels sont les noms de connexion et les noms de famille de l'auteur du cours et des tuteurs ?
"SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",Indiquez toutes les dates d'inscription et d'achèvement des étudiants.
"SELECT date_of_enrolment , date_of_completion FROM Student_Course_Enrolment",Quelles sont toutes les dates d'inscription et d'achèvement enregistrées ?
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment,Combien d'étudiants distincts sont inscrits aux cours?
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment,Trouver le nombre d'étudiants distincts inscrits à des cours.
SELECT count(course_id) FROM Student_Course_Enrolment,À combien de cours distincts les étudiants sont-ils inscrits?
SELECT count(course_id) FROM Student_Course_Enrolment,Trouvez le nombre de cours distincts qui ont des étudiants inscrits.
"SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = ""Pass""","Retrouvez les dates des tests passés avec le résultat ""Pass""."
"SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = ""Pass""","Quels tests ont des résultats ""réussis"" ? Indiquez les dates auxquelles les tests ont été passés."
"SELECT count(*) FROM Student_Tests_Taken WHERE test_result = ""Fail""","Combien de tests ont le résultat ""Échec"" ?"
"SELECT count(*) FROM Student_Tests_Taken WHERE test_result = ""Fail""","Comptez le nombre de tests avec le résultat ""Fail""."
"SELECT login_name FROM Students WHERE family_name = ""Ward""","Quels sont les noms de connexion des étudiants dont le nom de famille est ""Ward"" ?"
"SELECT login_name FROM Students WHERE family_name = ""Ward""","Renvoie les noms de connexion des étudiants dont le nom de famille est ""Ward""."
"SELECT date_of_latest_logon FROM Students WHERE family_name = ""Jaskolski"" OR family_name = ""Langosh""","Quelles sont les dates de la dernière connexion des étudiants avec le nom de famille ""Jaskolski"" ou ""Langosh"" ?"
"SELECT date_of_latest_logon FROM Students WHERE family_name = ""Jaskolski"" OR family_name = ""Langosh""","Retrouvez la dernière date de connexion des élèves dont le nom de famille est ""Jaskolski"" ou ""Langosh""."
"SELECT COUNT(*) FROM Students WHERE personal_name LIKE ""%son%""",Combien d'étudiants ont des noms personnels qui contiennent le mot « fils » ?
"SELECT COUNT(*) FROM Students WHERE personal_name LIKE ""%son%""","Trouvez le nombre d'élèves qui ont le mot ""fils"" dans leur nom personnel."
SELECT subject_name FROM SUBJECTS,Listez tous les noms de sujets.
SELECT subject_name FROM SUBJECTS,Quels sont les noms de tous les sujets.
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name,Listez toutes les informations sur les auteurs de cours et les tuteurs dans l'ordre alphabétique du nom personnel.
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name,Triez les informations sur les auteurs de cours et les tuteurs par ordre alphabétique du nom personnel.
"SELECT personal_name , family_name FROM Students ORDER BY family_name",Énumérez les noms personnels et les noms de famille de tous les élèves dans l'ordre alphabétique des noms de famille.
"SELECT personal_name , family_name FROM Students ORDER BY family_name",Quels sont les noms personnels et les noms de famille des étudiants? Triez le résultat par ordre alphabétique du nom de famille.
"SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",Énumérez chaque résultat de test et son nombre dans l'ordre décroissant du nombre.
"SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC","Pour chaque résultat de test distinct, trouvez le nombre d'étudiants qui ont obtenu le résultat."
"SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = ""advanced database""","Trouvez le nom de connexion de l'auteur du cours qui enseigne le cours avec le nom ""base de données avancée""."
"SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = ""advanced database""","Quel auteur de cours enseigne le cours ""base de données avancée"" ? Donnez-moi son identifiant."
"SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = ""operating system"" OR T2.course_name = ""data structure""","Trouver les adresses des auteurs du cours qui enseignent le cours dont le nom est ""système d'exploitation"" ou ""structure de données""."
"SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = ""operating system"" OR T2.course_name = ""data structure""","Quelles sont les adresses des auteurs du cours qui enseignent soit le cours ""système d'exploitation"" soit le cours ""structure de données""."
"SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1","Trouvez le nom personnel, le nom de famille et l'identifiant de l'auteur du cours qui enseigne le plus de cours."
"SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1","Quels sont le nom personnel, le nom de famille et l'identifiant de l'auteur du cours qui enseigne le plus de cours ?"
"SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count(*) >= 2",Recherchez les adresses et les ID d'auteur des auteurs de cours qui enseignent au moins deux cours.
"SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count(*) >= 2",Quels auteurs de cours enseignent deux cours ou plus ? Donnez-moi leurs adresses et identifiants d'auteur.
"SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = ""Julio""","Trouvez les noms des cours enseignés par le tuteur qui porte le nom personnel ""Julio""."
"SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = ""Julio""","Quels sont les noms des cours dispensés par le tuteur dont le nom personnel est ""Julio"" ?"
"SELECT T1.course_name , T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = ""Computer Science""","Trouvez les noms et les descriptions des cours qui appartiennent au sujet nommé ""Informatique""."
"SELECT T1.course_name , T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = ""Computer Science""","Quels sont les noms et les descriptions de tous les cours de la matière ""Informatique"" ?"
"SELECT T1.subject_id , T2.subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id","Recherchez l'identifiant du sujet, le nom du sujet et le nombre correspondant de cours disponibles pour chaque sujet."
"SELECT T1.subject_id , T2.subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id","Quels sont l'identifiant du sujet, le nom du sujet et le nombre de cours disponibles pour chaque sujet ?"
"SELECT T1.subject_id , T2.subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC","Trouvez l'identifiant du sujet, le nom du sujet et le nombre correspondant de cours pour chaque sujet, et triez par nombre de cours dans l'ordre croissant."
"SELECT T1.subject_id , T2.subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC","Indiquez l'identifiant du sujet, le nom du sujet et le nombre de cours disponibles pour chaque sujet dans l'ordre croissant du nombre de cours."
"SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""","Quelle est la date d'inscription au cours intitulé ""Espagnol"" ?"
"SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""Spanish""","Trouvez la date d'inscription au cours ""Espagnol""."
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1,Quel est le nom du cours qui a le plus d'inscriptions d'étudiants ?
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1,À quel cours est inscrit le plus d'étudiants ? Donnez-moi le nom du cours.
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1,Quels sont les noms des cours qui ont exactement 1 étudiant inscrit ?
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1,Trouvez les noms des cours qui n'ont qu'un seul étudiant inscrit.
"SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",Quels sont les descriptions et les noms des cours dont le nombre d'étudiants est supérieur à 2 ?
"SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",Renvoyez les descriptions et les noms des cours auxquels plus de deux étudiants sont inscrits.
"SELECT T1.course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",Quel est le nom de chaque cours et le nombre d'inscriptions d'étudiants correspondant ?
"SELECT T1.course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",Indiquez le nom et le nombre d'étudiants inscrits pour chaque cours.
"SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""","Quelles sont les dates d'inscription de tous les tests qui ont le résultat ""Pass"" ?"
"SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Pass""","Trouvez la date d'inscription pour tous les tests qui ont le résultat ""Réussite""."
"SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""","Quelles sont les dates d'achèvement de tous les tests dont le résultat est ""Échec"" ?"
"SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = ""Fail""","Renvoie la date d'achèvement de tous les tests dont le résultat est ""Échec""."
"SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = ""Karson""","Indiquez les dates d'inscription et d'achèvement de l'étudiant avec le nom personnel ""Karson""."
"SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = ""Karson""",À quelles dates l'étudiant dont le nom personnel est « Karson » s'est-il inscrit et a-t-il terminé les cours ?
"SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = ""Zieme"" AND T2.personal_name = ""Bernie""","Indiquez les dates d'inscription et d'achèvement de l'étudiant avec le nom de famille ""Zieme"" et le nom personnel ""Bernie""."
"SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = ""Zieme"" AND T2.personal_name = ""Bernie""",À quelles dates l'étudiant dont le nom de famille est « Zieme » et le nom personnel « Bernie » s'est-il inscrit et a-t-il terminé les cours ?
"SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",Trouvez l'identifiant étudiant et le nom de connexion de l'étudiant avec le plus d'inscriptions aux cours
"SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",Quels sont l'identifiant étudiant et le nom de connexion de l'étudiant inscrit au plus grand nombre de cours ?
"SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2",Trouvez la carte d'étudiant et le nom personnel de l'étudiant avec au moins deux inscriptions.
"SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2",Quels étudiants sont inscrits à au moins deux cours? Donnez-moi la carte d'étudiant et le nom personnel.
"SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2",Trouvez la carte d'étudiant et le deuxième prénom de tous les étudiants ayant au plus deux inscriptions.
"SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2",Quels sont les numéros d'identification et les deuxièmes prénoms des étudiants inscrits à au plus deux cours ?
SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id,Trouvez les noms personnels des étudiants qui ne sont inscrits à aucun cours.
SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id,Quels étudiants ne sont inscrits à aucun cours? Trouvez leurs noms personnels.
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment),Combien d'étudiants n'avaient aucune inscription à un cours ?
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment),Comptez le nombre d'étudiants qui ne se sont inscrits à aucun cours.
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students,Trouvez le nom de connexion commun des auteurs de cours et des étudiants.
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students,Quels sont les noms de connexion utilisés à la fois par certains auteurs de cours et certains étudiants ?
SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students,Trouvez le nom personnel commun des auteurs de cours et des étudiants.
SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students,Quels sont les noms personnels utilisés à la fois par certains auteurs de cours et certains étudiants ?
"SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.Claim_id HAVING count(*) > 2 UNION SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id WHERE T1.Amount_Claimed = ( SELECT max(Amount_Claimed) FROM Claims )",Quelles réclamations ont causé plus de 2 règlements ou ont la valeur de réclamation maximale ? Indiquez la date à laquelle la réclamation a été faite et l'identifiant de la réclamation.
"SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.Claim_id HAVING count(*) > 2 UNION SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id WHERE T1.Amount_Claimed = ( SELECT max(Amount_Claimed) FROM Claims )","Trouvez les réclamations qui ont donné lieu à plus de deux règlements ou qui ont la valeur de réclamation maximale. Pour chacun d'eux, renvoyez la date à laquelle la réclamation a été faite et l'identifiant de la réclamation."
"SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2 EXCEPT SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.customer_id JOIN Claims AS T3 ON T2.policy_id = T3.policy_id",Quel client avait au moins 2 polices mais n'a déposé aucune réclamation ? Indiquez les détails et l'identifiant du client.
"SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2 EXCEPT SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.customer_id JOIN Claims AS T3 ON T2.policy_id = T3.policy_id",Donnez-moi les détails et l'identifiant du client pour les clients qui avaient deux polices ou plus mais qui n'ont déposé aucune réclamation.
"SELECT Payment_Method_Code , Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC","Indiquez la méthode, la date et le montant de tous les paiements, par ordre croissant de date."
"SELECT Payment_Method_Code , Date_Payment_Made , Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC","Quels sont le mode, la date et le montant de chaque paiement ? Trier la liste par ordre croissant de date."
"SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1","Parmi toutes les réclamations, quel est le montant du règlement de la réclamation dont le montant est le plus élevé ? Indiquez à la fois le montant du règlement et le montant de la réclamation."
"SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",Trouvez le montant du règlement de la réclamation avec le montant de réclamation le plus élevé. Indiquez à la fois le montant du règlement et le montant de la réclamation.
"SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1","Parmi toutes les réclamations, quel est le montant réclamé dans la réclamation la moins réglée ? Indiquez à la fois le montant du règlement et le montant de la réclamation."
"SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1",Trouvez le montant réclamé dans la réclamation avec le moins de montant réglé. Indiquez à la fois le montant du règlement et le montant de la réclamation.
"SELECT Date_Claim_Made , Date_Claim_Settled FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )","Parmi toutes les réclamations, lesquelles ont un montant réclamé supérieur à la moyenne ? Indiquez la date à laquelle la réclamation a été faite et la date à laquelle elle a été réglée."
"SELECT Date_Claim_Made , Date_Claim_Settled FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )","Donnez-moi la date de réclamation, la date de règlement pour toutes les réclamations dont le montant réclamé est supérieur à la moyenne."
SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims ),"Parmi toutes les réclamations, quels règlements ont un montant réclamé qui n'est pas supérieur à la moyenne ? Indiquez la date de début de la réclamation."
SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled <= ( SELECT avg(Amount_Settled) FROM Claims ),Renvoyer la date de début de réclamation pour les réclamations dont le montant réclamé n'est pas supérieur à la moyenne
"SELECT T1.Claim_id , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",A combien de règlements correspond chaque sinistre ? Indiquez l'identifiant de la réclamation et le nombre de règlements.
"SELECT T1.Claim_id , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id",Trouvez le nombre de règlements auquel correspond chaque réclamation. Montrez le numéro avec l'identifiant de la réclamation.
"SELECT T1.claim_id , T1.date_claim_made , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1","Quelle réclamation a entraîné le plus grand nombre de règlements ? Indiquez l'identifiant de la réclamation, la date à laquelle la réclamation a été faite et le numéro."
"SELECT T1.claim_id , T1.date_claim_made , count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1",Trouvez l'identifiant et la date de réclamation de la réclamation qui a entraîné le plus grand nombre de règlements. Dites-moi aussi le compte.
"SELECT count(*) , T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",Combien de règlements ont été effectués sur la réclamation avec la date de règlement de la réclamation la plus récente ? Indiquez le numéro et l'identifiant de la réclamation.
"SELECT count(*) , T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",Recherchez l'identifiant de la réclamation et le nombre de règlements effectués pour la réclamation avec la date de règlement la plus récente.
SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1,"De toutes les réclamations, quelle est la première date à laquelle une réclamation a été faite ?"
SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1,Dites-moi la date à laquelle la première réclamation a été faite.
SELECT sum(Amount_Settled) FROM Settlements,Quel est le montant total des règlements effectués pour tous les règlements ?
SELECT sum(Amount_Settled) FROM Settlements,Calculez le montant total du règlement pour tous les règlements.
"SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count(*) > 1",Qui sont les clients qui avaient plus d'une police ? Indiquez les détails et l'identifiant du client.
"SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count(*) > 1",Recherchez les détails et l'identifiant du client pour les clients qui avaient plus d'une police.
"SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",Quelles sont les dates de réclamation et les dates de règlement de tous les règlements ?
"SELECT Date_Claim_Made , Date_Claim_Settled FROM Settlements",Dites-moi la date de réclamation et la date de règlement pour chaque cas de règlement.
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1,Quelle est la méthode de paiement la plus populaire ?
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1,Quel mode de paiement est utilisé le plus souvent ?
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1,Avec quel type de mode de paiement le plus petit nombre de paiements a-t-il été traité ?
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1,Quel est le mode de paiement qui a été utilisé le moins souvent ?
SELECT sum(Amount_Payment) FROM Payments,Quel est le montant total du paiement ?
SELECT sum(Amount_Payment) FROM Payments,Calculez le montant total du paiement traité.
SELECT DISTINCT customer_details FROM Customers,Quels sont tous les détails distincts des clients ?
SELECT DISTINCT customer_details FROM Customers,Renvoyez les détails distincts du client.
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1,Quel type de police a été choisi par le plus de clients ?
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1,Trouvez le type de police que la plupart des clients choisissent.
SELECT count(*) FROM Settlements,Combien y a-t-il de colonies au total ?
SELECT count(*) FROM Settlements,Comptez le nombre total de règlements effectués.
"SELECT Payment_ID , Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'","Quels paiements ont été traités avec Visa ? Indiquez l'identifiant de paiement, la date et le montant."
"SELECT Payment_ID , Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'","Donnez-moi l'identifiant de paiement, la date et le montant de tous les paiements traités avec Visa."
SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id,Dressez la liste des détails des clients qui n'ont pas de politiques.
SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id,Quels clients n'ont aucune politique ? Retrouvez les coordonnées de ces clients.
"SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count(*) = 1","Indiquez la date à laquelle la réclamation a été faite, la date à laquelle elle a été réglée et le montant réglé pour toutes les réclamations qui ont eu exactement un règlement."
"SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count(*) = 1","Quelles réclamations ont eu exactement un règlement ? Pour chacun, indiquez-moi la date à laquelle la réclamation a été faite, la date à laquelle elle a été réglée et le montant réglé."
SELECT sum(Amount_Claimed) FROM Claims,Trouver le montant total réclamé de toutes les réclamations.
SELECT sum(Amount_Claimed) FROM Claims,Quel est le montant total réclamé pour toutes les réclamations ?
SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;,Quel département a le plus grand nombre d'employés ?
SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;,Trouvez le département avec le plus d'employés.
SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;,Quel est l'identifiant d'employé du chef dont le service compte le moins d'employés ?
SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;,Dites-moi l'identifiant d'employé du chef du département avec le moins d'employés.
"SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",quel est le nom et le poste du chef dont le service compte le moins d'employés ?
"SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",Trouvez le nom et la fonction du chef du département avec le moins d'employés.
SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn,Comment s'appellent les patients qui ont pris rendez-vous ?
SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn,Dressez la liste des noms des patients qui ont pris rendez-vous.
"SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count(*) > 1",quels sont le nom et le numéro de téléphone des patients qui ont eu plus d'un rendez-vous ?
"SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count(*) > 1",Quels patients ont pris plus d'un rendez-vous ? Dites-moi le nom et le numéro de téléphone de ces patients.
SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1,Trouver l'identifiant du rendez-vous avec la date de début la plus récente ?
SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1,Quel est l'identifiant du rendez-vous qui a commencé le plus récemment ?
SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID,Indiquez le nom des médecins qui ont pris un rendez-vous.
SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID,Quels sont les noms de tous les médecins qui ont pris des rendez-vous.
SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID,Indiquez le nom des médecins qui n'ont jamais pris de rendez-vous.
SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID,Quels médecins n'ont jamais pris de rendez-vous ? Trouvez leurs noms.
"SELECT T1.name , T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1",Trouvez les noms de tous les médecins et les noms de leurs principaux départements affiliés.
"SELECT T1.name , T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1",Quels sont le nom et le nom du département principalement affilié de chaque médecin ?
SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1,Quel est le nom du patient qui a pris le dernier rendez-vous ?
SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1,Trouvez le nom du patient qui a pris rendez-vous avec la date de début la plus récente.
SELECT count(patient) FROM stay WHERE room = 112,Combien de patients séjournent dans la chambre 112 ?
SELECT count(patient) FROM stay WHERE room = 112,Comptez le nombre de patients qui ont séjourné dans la chambre 112.
"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = ""John Dorian""",Combien de prescriptions de patients sont faites par le médecin John Dorian ?
"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = ""John Dorian""",Trouvez le nombre de prescriptions de patients faites par le médecin John Dorian.
SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE room = 111,Trouver le nom du médicament utilisé sur le patient qui séjourne dans la chambre 111 ?
SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE room = 111,Quel est le nom du médicament utilisé pour le patient séjournant dans la chambre 111 ?
SELECT patient FROM stay WHERE room = 111 ORDER BY staystart DESC LIMIT 1,Trouvez le patient qui a séjourné le plus récemment dans la chambre 111.
SELECT patient FROM stay WHERE room = 111 ORDER BY staystart DESC LIMIT 1,Quelle est l'identité du patient qui a séjourné dans la chambre 111 le plus récemment ?
SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'infirmière qui a le plus de rendez-vous ?
SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de l'infirmière qui a le plus grand nombre de rendez-vous.
"SELECT T1.name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Combien de patients chaque médecin prend-il en charge ? Indiquez leurs noms et le nombre de patients dont ils s'occupent.
"SELECT T1.name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",Indiquez le nom de chaque médecin et le nombre de patients qu'il traite.
SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count(*) > 1,Trouvez le nom des médecins qui sont en charge de plus d'un patient.
SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid HAVING count(*) > 1,Quels médecins sont en charge de plusieurs patients ? Donnez-moi leurs noms.
"SELECT count(*) , T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockfloor",Trouvez le nombre de chambres situées à chaque étage du bloc.
"SELECT count(*) , T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockfloor",Combien de chambres compte chaque étage du bloc ?
"SELECT count(*) , T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode",Trouver le nombre de chambres pour différents codes de bloc ?
"SELECT count(*) , T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode",Combien de chambres sont situées pour chaque code de bloc ?
SELECT DISTINCT blockcode FROM room WHERE unavailable = 0,Quels sont les codes de bloc uniques qui ont des chambres disponibles ?
SELECT DISTINCT blockcode FROM room WHERE unavailable = 0,Dites-moi les codes de bloc distincts où certaines chambres sont disponibles.
SELECT count(DISTINCT roomtype) FROM room,Combien y a-t-il de types de chambres différents ?
SELECT count(DISTINCT roomtype) FROM room,Trouvez le nombre de types de chambres distincts disponibles.
"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = ""Thesisin""",Comment s'appellent les médecins qui prescrivent le médicament Thesisin ?
"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = ""Thesisin""",Énumérez les noms de tous les médecins qui prescrivent Thesisin comme médicament.
"SELECT DISTINCT T1.name , T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = ""X""",Trouver le nom et la fonction des médecins qui prescrivent des médicaments dont la marque est X ?
"SELECT DISTINCT T1.name , T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = ""X""",Quels médecins prescrivent un médicament de marque X ? Dites-moi le nom et la fonction de ces médecins.
"SELECT count(*) , T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Trouvez le nombre de médicaments prescrits pour chaque marque.
"SELECT count(*) , T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",Combien de médicaments sont prescrits pour chaque marque ?
SELECT name FROM physician WHERE POSITION LIKE '%senior%',Trouvez le nom des médecins dont le titre de poste contient le mot « senior ».
SELECT name FROM physician WHERE POSITION LIKE '%senior%',"Comment s'appellent les médecins qui ont ""senior"" dans leurs titres ?"
SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,Trouver le patient qui a le traitement en cours le plus récent ?
SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,Quel patient suit le traitement le plus récent ?
SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111,Retrouvez les noms de tous les patients en cours de traitement et hébergés en chambre 111.
SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111,Quels sont les noms des patients qui séjournent dans la chambre 111 et qui suivent un traitement ?
SELECT DISTINCT name FROM nurse ORDER BY name,Lister les noms de toutes les infirmières distinctes classées par ordre alphabétique ?
SELECT DISTINCT name FROM nurse ORDER BY name,Quelle est la liste par ordre alphabétique de tous les noms distincts d'infirmières ?
SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse = T2.EmployeeID,Trouvez les noms des infirmières qui soignent un traitement en cours.
SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse = T2.EmployeeID,Quelles infirmières sont en charge des patients sous traitement ?
SELECT DISTINCT name FROM medication ORDER BY name,"Énumérez les noms de tous les médicaments distincts, classés par ordre alphabétique."
SELECT DISTINCT name FROM medication ORDER BY name,Quelle est la liste par ordre alphabétique de tous les médicaments distincts ?
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1,Quels sont les noms du médecin qui a prescrit la dose la plus élevée ?
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1,Trouvez le médecin qui a prescrit la dose la plus élevée. Quel est son nom ?
"SELECT physician , department FROM affiliated_with WHERE primaryaffiliation = 1",Répertoriez les identifiants des employés des médecins ainsi que les identifiants de leurs principaux départements d'affiliation.
"SELECT physician , department FROM affiliated_with WHERE primaryaffiliation = 1",Quels sont l'identifiant d'employé et l'identifiant de service de chaque médecin principalement affilié.
SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation = 1,Énumérez les noms des départements auxquels certains médecins sont principalement affiliés.
SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation = 1,Quels sont les noms des départements qui ont principalement des médecins affiliés.
SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1,Quelles infirmières sont de garde avec l'étage du bloc 1 et le code du bloc 1 ? Dites-moi leurs noms.
SELECT nurse FROM on_call WHERE blockfloor = 1 AND blockcode = 1,Trouvez les identifiants des infirmières qui sont de garde à l'étage du bloc 1 et le code du bloc 1.
"SELECT MAX(cost) , MIN(cost) , AVG(cost) FROM procedures","Quels sont le coût le plus élevé, le coût le plus bas et le coût moyen des procédures ?"
"SELECT MAX(cost) , MIN(cost) , AVG(cost) FROM procedures","Dites-moi le coût le plus élevé, le plus bas et le coût moyen des procédures."
"SELECT name , cost FROM procedures ORDER BY cost DESC",Indiquez le nom et le coût de toutes les procédures triées par le coût du plus élevé au plus bas.
"SELECT name , cost FROM procedures ORDER BY cost DESC",Triez la liste des noms et des coûts de toutes les procédures dans l'ordre décroissant des coûts.
SELECT name FROM procedures ORDER BY cost LIMIT 3,Trouvez les trois procédures les plus chères.
SELECT name FROM procedures ORDER BY cost LIMIT 3,Quelles sont les trois procédures les plus coûteuses ?
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000,Trouvez les médecins formés à une procédure qui coûte plus de 5000.
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000,Quels médecins sont formés aux procédures qui coûtent plus de 5000 ?
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment ORDER BY T3.cost DESC LIMIT 1,Trouver le médecin qui a été formé à la procédure la plus coûteuse ?
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment ORDER BY T3.cost DESC LIMIT 1,Quel médecin a été formé à la procédure qui coûte le plus cher.
"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Quel est le coût moyen des procédures auxquelles le médecin John Wen a été formé ?
"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Calculez le prix moyen des procédures pour lesquelles le médecin John Wen a été formé.
"SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Trouvez les noms des procédures auxquelles le médecin John Wen a été formé.
"SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Quels sont les noms des procédures auxquelles le médecin John Wen a été formé ?
"SELECT name FROM procedures WHERE cost > 1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Trouvez toutes les procédures qui coûtent plus de 1000 ou pour lesquelles le médecin John Wen a été formé.
"SELECT name FROM procedures WHERE cost > 1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Quelles sont les procédures qui coûtent plus de 1000 ou sont spécialisées par le médecin John Wen ?
"SELECT name FROM procedures WHERE cost > 1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Trouvez les noms de toutes les procédures qui coûtent plus de 1000 mais pour quel médecin John Wen n'a pas été formé ?
"SELECT name FROM procedures WHERE cost > 1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""","Parmi les procédures qui coûtent plus de 1000, lesquelles n'ont pas été spécialisées par le médecin John Wen ?"
"SELECT name FROM procedures WHERE cost < 5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Trouvez les noms de toutes les procédures telles que le coût est inférieur à 5000 et pour lesquelles le médecin John Wen a été formé.
"SELECT name FROM procedures WHERE cost < 5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = ""John Wen""",Quelles procédures coûtent moins de 5000 et ont John Wen comme médecin qualifié ?
SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry',Trouvez le nom des médecins affiliés aux départements de chirurgie et de psychiatrie.
SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry',Quels médecins sont affiliés aux départements de chirurgie et de psychiatrie ? Dites-moi leurs noms.
SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry',Trouvez le nom des médecins affiliés au département de chirurgie ou de psychiatrie.
SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry',Quels médecins sont affiliés au département de chirurgie ou de psychiatrie ? Donnez-moi leurs noms.
SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient = T1.SSN JOIN Medication AS T3 ON T2.Medication = T3.Code WHERE T3.name = 'Procrastin-X',Trouvez les noms des patients qui n'utilisent pas le médicament de Procrastin-X.
SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient = T1.SSN JOIN Medication AS T3 ON T2.Medication = T3.Code WHERE T3.name = 'Procrastin-X',Quels sont les noms des patients qui ne prennent pas les médicaments de Procrastin-X.
SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' ),Trouvez le nombre de patients qui n'utilisent pas le médicament de Procrastin-X.
SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' ),Combien de patients n'utilisent pas Procrastin-X comme médicament ?
SELECT count(*) FROM appointment,Combien y a-t-il de rendez-vous ?
SELECT count(*) FROM appointment,Comptez le nombre de rendez-vous pris au total.
SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID = T2.nurse,Trouvez les noms des infirmières qui sont de garde.
SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID = T2.nurse,Quels sont les noms distincts des infirmières de garde ?
SELECT count(*) FROM ship,Combien y a-t-il de navires ?
SELECT count(*) FROM ship,Quel est le nombre de navires ?
SELECT count(*) FROM ship,combien y a-t-il de bateaux ?
SELECT count(*) FROM ship,Comptez le nombre de navires.
SELECT Name FROM ship ORDER BY Tonnage ASC,Indiquez le nom des navires par ordre croissant de tonnage.
SELECT Name FROM ship ORDER BY Tonnage ASC,quels sont les noms des navires classés par tonnage croissant ?
"SELECT TYPE , Nationality FROM ship",Quels sont le type et la nationalité des navires ?
"SELECT TYPE , Nationality FROM ship",Quels sont les types et les nationalités de chaque navire ?
"SELECT Name FROM ship WHERE Nationality != ""United States""","Indiquez le nom des navires dont la nationalité n'est pas ""États-Unis""."
"SELECT Name FROM ship WHERE Nationality != ""United States""",Quels sont les noms des navires qui ne viennent pas des États-Unis ?
"SELECT Name FROM ship WHERE Nationality = ""United States"" OR Nationality = ""United Kingdom""","Afficher le nom des navires dont la nationalité est soit les États-Unis, soit le Royaume-Uni."
"SELECT Name FROM ship WHERE Nationality = ""United States"" OR Nationality = ""United Kingdom""",Quels sont les noms des navires qui viennent des États-Unis ou du Royaume-Uni ?
SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1,Quel est le nom du navire avec le plus gros tonnage ?
SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1,Comment s'appelle le navire qui a le plus de tonnage ?
"SELECT TYPE , COUNT(*) FROM ship GROUP BY TYPE",Montrez différents types de navires et le nombre de navires de chaque type.
"SELECT TYPE , COUNT(*) FROM ship GROUP BY TYPE","Pour chaque type, combien y a-t-il de navires ?"
SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer le type de navire le plus courant.
SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1,Quel est le type de navires le plus courant ?
SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*) > 2,Énumérez les nations qui ont plus de deux navires.
SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*) > 2,Quelles sont les nations qui ont plus de deux navires ?
"SELECT TYPE , avg(Tonnage) FROM ship GROUP BY TYPE",Montrez différents types de navires et le tonnage moyen des navires de chaque type.
"SELECT TYPE , avg(Tonnage) FROM ship GROUP BY TYPE","Pour chaque type, quel est le tonnage moyen ?"
"SELECT T1.Code , T1.Fate , T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID","Afficher les codes et les destins des missions, ainsi que les noms des navires impliqués."
"SELECT T1.Code , T1.Fate , T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID","Quels sont les codes de mission, les destins et les noms des navires impliqués ?"
SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928,Afficher les noms des navires impliqués dans une mission lancée après 1928.
SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928,Quels sont les noms des navires qui ont participé à une mission lancée après 1928 ?
"SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = ""United States""","Montrer le sort distinct des missions qui impliquent des navires de nationalité ""États-Unis"""
"SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = ""United States""",Quels sont les différents destins de la mission qui a impliqué des navires en provenance des États-Unis ?
SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission),Indiquez le nom des navires qui ne sont impliqués dans aucune mission
SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission),Quels sont les noms des navires qui ne sont impliqués dans aucune mission ?
SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000,Montrez les types de navires qui ont à la fois des navires d'un tonnage supérieur à 6000 et des navires d'un tonnage inférieur à 4000.
SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000,Quels sont les types de navires qui ont à la fois des navires d'un tonnage supérieur à 6000 et des navires d'un tonnage inférieur à 4000 ?
SELECT count(*) FROM list,Trouver le nombre d'élèves au total.
SELECT count(*) FROM list,Combien d'étudiants sont là?
SELECT lastname FROM list WHERE classroom = 111,Trouvez les noms de famille des étudiants qui étudient dans la salle 111.
SELECT lastname FROM list WHERE classroom = 111,Quels sont les noms de famille des élèves de la chambre 111 ?
SELECT firstname FROM list WHERE classroom = 108,Trouvez les prénoms des étudiants qui étudient dans la salle 108.
SELECT firstname FROM list WHERE classroom = 108,Quels sont les prénoms des élèves de la chambre 108 ?
SELECT DISTINCT firstname FROM list WHERE classroom = 107,Quels sont les prénoms des étudiants qui étudient dans la chambre 107 ?
SELECT DISTINCT firstname FROM list WHERE classroom = 107,Dressez la liste des prénoms de tous les élèves de la salle 107.
"SELECT DISTINCT classroom , grade FROM list","Pour chaque classe, indiquez la classe qui y est enseignée. Indiquez uniquement le numéro de classe et le numéro de classe."
"SELECT DISTINCT classroom , grade FROM list",Quels sont le numéro d'année et le numéro de classe de chaque classe dans la liste ?
SELECT DISTINCT grade FROM list WHERE classroom = 103,Quelle classe étudie dans la classe 103 ?
SELECT DISTINCT grade FROM list WHERE classroom = 103,Trouvez la note enseignée dans la classe 103.
SELECT DISTINCT grade FROM list WHERE classroom = 105,Trouvez la classe qui étudie dans la salle 105.
SELECT DISTINCT grade FROM list WHERE classroom = 105,Quelle classe étudie dans la salle 105 ?
SELECT DISTINCT classroom FROM list WHERE grade = 4,Quelles salles de classe sont utilisées par la 4e année?
SELECT DISTINCT classroom FROM list WHERE grade = 4,Trouvez les salles de classe dans lesquelles la 4e année étudie.
SELECT DISTINCT classroom FROM list WHERE grade = 4,Quelles salles de classe sont utilisées par la 5e année?
SELECT DISTINCT classroom FROM list WHERE grade = 4,Montrez-moi les salles de classe utilisées par la 5e année.
SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 5,Trouvez les noms de famille des enseignants qui enseignent la cinquième année.
SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 5,Quels sont les noms de famille des enseignants qui enseignent en 5e année ?
SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 1,Trouvez les prénoms des enseignants qui enseignent en première année.
SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 1,Quels sont les prénoms des professeurs qui enseignent en 1ère année ?
SELECT firstname FROM teachers WHERE classroom = 110,Trouvez les prénoms de tous les professeurs qui enseignent dans la classe 110.
SELECT firstname FROM teachers WHERE classroom = 110,Quels enseignants enseignent dans la classe 110 ? Donnez-moi leurs prénoms.
SELECT lastname FROM teachers WHERE classroom = 109,Trouvez les noms de famille des enseignants qui enseignent dans la classe 109.
SELECT lastname FROM teachers WHERE classroom = 109,Quels professeurs enseignent dans la classe 109 ? Donnez-moi leurs noms de famille.
"SELECT DISTINCT firstname , lastname FROM teachers",Indiquez le prénom et le nom de tous les enseignants.
"SELECT DISTINCT firstname , lastname FROM teachers",Quels sont le nom et le prénom de tous les enseignants ?
"SELECT DISTINCT firstname , lastname FROM list",Indiquez le prénom et le nom de tous les élèves.
"SELECT DISTINCT firstname , lastname FROM list",Indiquez le prénom et le nom de chaque élève.
"SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""OTHA"" AND T2.lastname = ""MOYER""",Retrouvez tous les élèves enseignés par OTHA MOYER. Affichez les noms et prénoms des élèves.
"SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""OTHA"" AND T2.lastname = ""MOYER""",Quels élèves étudient sous la direction du professeur nommé OTHA MOYER ? Donnez-moi les noms et prénoms des élèves.
"SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""OTHA"" AND T2.lastname = ""MOYER""",Retrouvez tous les élèves enseignés par MARROTTE KIRK. Sortir les noms et prénoms des étudiants.
"SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""OTHA"" AND T2.lastname = ""MOYER""",Quels sont les noms et prénoms des élèves enseignés par MARROTTE KIRK ?
"SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""EVELINA"" AND T1.lastname = ""BROMLEY""",Trouvez le prénom et le nom de tous les professeurs qui enseignent à EVELINA BROMLEY.
"SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""EVELINA"" AND T1.lastname = ""BROMLEY""",Quels professeurs enseignent à l'élève nommée EVELINA BROMLEY ? Donnez-moi le prénom et le nom des professeurs.
"SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""GELL"" AND T1.lastname = ""TAMI""",Trouvez les noms de famille de tous les professeurs qui enseignent GELL TAMI.
"SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""GELL"" AND T1.lastname = ""TAMI""",Quels sont les noms de famille des professeurs qui enseignent à l'élève qui s'appelle GELL TAMI ?
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""LORIA"" AND T2.lastname = ""ONDERSMA""",A combien d'élèves LORIA ONDERSMA enseigne-t-elle ?
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""LORIA"" AND T2.lastname = ""ONDERSMA""",Comptez le nombre d'élèves que l'enseignante LORIA ONDERSMA enseigne.
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""LORIA"" AND T2.lastname = ""ONDERSMA""",Combien d'élèves KAWA GORDON enseigne-t-il ?
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""LORIA"" AND T2.lastname = ""ONDERSMA""",Retrouvez le nombre d'élèves encadrés par le professeur KAWA GORDON.
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""LORIA"" AND T2.lastname = ""ONDERSMA""",Trouver le nombre d'élèves enseignés par TARRING LEIA.
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""LORIA"" AND T2.lastname = ""ONDERSMA""",Combien d'élèves sont enseignés par le professeur TARRING LEIA ?
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""CHRISSY"" AND T1.lastname = ""NABOZNY""",Combien de professeurs l'élève nommé CHRISSY NABOZNY a-t-il ?
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""CHRISSY"" AND T1.lastname = ""NABOZNY""",Trouver le nombre de professeurs qui enseignent à l'élève appelé CHRISSY NABOZNY.
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""CHRISSY"" AND T1.lastname = ""NABOZNY""",Combien de professeurs l'élève nommé MADLOCK RAY a-t-il ?
"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = ""CHRISSY"" AND T1.lastname = ""NABOZNY""",Trouver le nombre de professeurs qui enseignent à l'élève appelé MADLOCK RAY.
"SELECT DISTINCT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""OTHA"" AND T2.lastname = ""MOYER""",Trouvez tous les élèves de première année qui ne sont PAS enseignés par OTHA MOYER. Indiquez leurs noms et prénoms.
"SELECT DISTINCT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = ""OTHA"" AND T2.lastname = ""MOYER""",Quels sont les noms et prénoms des élèves de première année qui ne sont PAS enseignés par l'enseignante OTHA MOYER ?
"SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""",Retrouvez les noms de famille des élèves de troisième qui ne sont pas enseignés par COVIN JEROME.
"SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""",Quels élèves de CE2 ne sont pas encadrés par le professeur COVIN JEROME ? Donnez-moi les noms de famille des élèves.
"SELECT grade , count(DISTINCT classroom) , count(*) FROM list GROUP BY grade","Pour chaque niveau, indiquez le niveau, le nombre de salles de classe dans lesquelles il est enseigné et le nombre total d'élèves dans le niveau."
"SELECT grade , count(DISTINCT classroom) , count(*) FROM list GROUP BY grade","Pour chaque niveau, indiquez le numéro du niveau, le nombre de salles de classe utilisées pour le niveau et le nombre total d'élèves inscrits dans le niveau."
"SELECT classroom , count(DISTINCT grade) FROM list GROUP BY classroom","Pour chaque salle de classe, indiquez le numéro de la salle de classe et le nombre d'années qui l'utilisent."
"SELECT classroom , count(DISTINCT grade) FROM list GROUP BY classroom","Pour chaque classe, indiquez le numéro de la classe et comptez le nombre de classes distinctes qui utilisent la salle."
SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1,Quelle classe a le plus d'élèves ?
SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1,Trouvez la salle de classe que le plus d'élèves utilisent.
"SELECT classroom , count(*) FROM list GROUP BY classroom",Déclarez le nombre d'élèves dans chaque classe.
"SELECT classroom , count(*) FROM list GROUP BY classroom","Pour chaque salle de classe, indiquez le numéro de la salle de classe et trouvez combien d'élèves l'utilisent."
"SELECT classroom , count(*) FROM list GROUP BY classroom",Trouver le nombre d'élèves dans une classe.
"SELECT classroom , count(*) FROM list GROUP BY classroom",Combien d'élèves compte une classe ?
"SELECT classroom , count(*) FROM list WHERE grade = ""0"" GROUP BY classroom","Pour chaque classe de 0e année, indiquez le nombre total d'élèves."
"SELECT classroom , count(*) FROM list WHERE grade = ""0"" GROUP BY classroom","Pour chaque classe de 0e année, indiquez le numéro de la classe et le nombre d'élèves."
"SELECT classroom , count(*) FROM list WHERE grade = ""0"" GROUP BY classroom",Déclarez le nombre total d'élèves pour chaque classe de quatrième année.
"SELECT classroom , count(*) FROM list WHERE grade = ""0"" GROUP BY classroom","Pour chaque classe de quatrième année, indiquez le numéro de la salle de classe et le nombre total d'élèves qui l'utilisent."
"SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count(*) DESC LIMIT 1",Trouvez le nom de l'enseignant qui enseigne au plus grand nombre d'élèves.
"SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count(*) DESC LIMIT 1",Quel professeur enseigne le plus d'élèves ? Donnez-moi le prénom et le nom du professeur.
SELECT count(*) FROM company WHERE Headquarters = 'USA',Combien d'entreprises ont leur siège social aux États-Unis ?
SELECT Name FROM company ORDER BY Sales_in_Billion ASC,Dressez la liste des noms d'entreprises par nombre croissant de ventes.
"SELECT Headquarters , Industry FROM company",Quels sont les sièges sociaux et les industries de toutes les entreprises ?
"SELECT Name FROM company WHERE Industry = ""Banking"" OR Industry = ""Retailing""",Afficher les noms d'entreprises du secteur bancaire ou du commerce de détail ?
"SELECT max(Market_Value_in_Billion) , min(Market_Value_in_Billion) FROM company",Quelle est la valeur marchande maximale et minimale des entreprises?
SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1,Quel est le siège social de l'entreprise qui réalise le plus gros chiffre d'affaires ?
SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1,Afficher le siège social le plus courant pour les entreprises.
SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*) >= 2,Montrez les sièges sociaux qui ont au moins deux entreprises.
"SELECT Headquarters FROM company WHERE Industry = ""Banking"" INTERSECT SELECT Headquarters FROM company WHERE Industry = ""Oil and gas""",Montrez les sièges sociaux qui ont à la fois des sociétés du secteur bancaire et des sociétés du secteur pétrolier et gazier.
"SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID",Afficher les noms des entreprises et des employés.
"SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID ORDER BY T1.Year_working",Afficher les noms des entreprises et celui des employés par ordre décroissant du nombre d'années de travail pour cet employé.
SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200,Affichez les noms des employés qui travaillent pour des entreprises dont le chiffre d'affaires est supérieur à 200.
"SELECT T3.Name , COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID GROUP BY T3.Name",Afficher les noms des entreprises et le nombre d'employés qu'elles ont
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment),Listez les noms des personnes qui ne sont employées par aucune entreprise
"SELECT name FROM company WHERE Sales_in_Billion > 200 ORDER BY Sales_in_Billion , Profits_in_Billion DESC",énumérez les noms des entreprises ayant réalisé plus de 200 ventes dans l'ordre décroissant des ventes et des bénéfices.
SELECT count(*) FROM film,Combien y a-t-il de films ?
SELECT count(*) FROM film,Comptez le nombre de films.
SELECT DISTINCT Director FROM film,Indiquez le réalisateur distinct de tous les films.
SELECT DISTINCT Director FROM film,Quels sont les différents réalisateurs ?
SELECT avg(Gross_in_dollar) FROM film,Quelle est la moyenne des ventes brutes de billets en dollars de films ?
SELECT avg(Gross_in_dollar) FROM film,Renvoie les ventes brutes moyennes en dollars pour tous les films.
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Quelles sont les estimations basses et hautes des marchés du film ?
"SELECT Low_Estimate , High_Estimate FROM film_market_estimation",Renvoie les estimations basses et hautes pour tous les marchés du film.
SELECT TYPE FROM film_market_estimation WHERE YEAR = 1995,Quels sont les types d'estimations du marché du film en 1995 ?
SELECT TYPE FROM film_market_estimation WHERE YEAR = 1995,Restituer les types d'estimations du marché du film en 1995.
"SELECT max(Number_cities) , min(Number_cities) FROM market",Quel est le nombre maximum et minimum de villes sur tous les marchés.
"SELECT max(Number_cities) , min(Number_cities) FROM market",Renvoie le nombre maximum et minimum de villes sur tous les marchés.
SELECT count(*) FROM market WHERE Number_cities < 300,Combien de marchés ont un nombre de villes inférieur à 300 ?
SELECT count(*) FROM market WHERE Number_cities < 300,Comptez le nombre de marchés qui ont un nombre de villes inférieur à 300.
SELECT Country FROM market ORDER BY Country ASC,Énumérez tous les pays des marchés par ordre alphabétique croissant.
SELECT Country FROM market ORDER BY Country ASC,"Quels sont les pays pour chaque marché, classés par ordre alphabétique ?"
SELECT Country FROM market ORDER BY Number_cities DESC,Énumérez tous les pays des marchés par ordre décroissant du nombre de villes.
SELECT Country FROM market ORDER BY Number_cities DESC,Quels sont les pays pour chaque marché classés par nombre décroissant de villes ?
"SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",Veuillez indiquer les titres des films et les types d'estimations du marché.
"SELECT T1.Title , T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",Quels sont les titres des films et les types d'estimations de marché correspondants ?
SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Year = 1995,Montrez le réalisateur distinct de films avec une estimation du marché en 1995.
SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Year = 1995,Qui sont les différents réalisateurs de films qui ont eu une cote de marché en 1995 ?
SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Low_Estimate > 10000,Quel est le nombre moyen de villes de marchés dont l'estimation du marché du film est supérieure à 10 000 ?
SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Low_Estimate > 10000,Donnez le nombre moyen de villes au sein des marchés qui avaient une estimation de marché faible supérieure à 10 000 ?
"SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",Veuillez énumérer les pays et les années d'estimations du marché du film.
"SELECT T2.Country , T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",Quels sont les pays des marchés et leurs années d'estimation de marché correspondantes ?
"SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan"" ORDER BY T1.Year DESC","Veuillez énumérer les années d'estimations du marché du film lorsque le marché est dans le pays ""Japon"" par ordre décroissant."
"SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = ""Japan"" ORDER BY T1.Year DESC","Quelles sont les années d'estimation du marché du film pour le marché du Japon, classées par année décroissante ?"
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Énumérez les studios de chaque film et le nombre de films produits par ce studio.
"SELECT Studio , COUNT(*) FROM film GROUP BY Studio",Comment les films sont produits par chaque studio ?
SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1,Indiquez le nom du studio de cinéma qui a le plus grand nombre de films.
SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1,Comment s'appelle le studio qui a créé le plus de films ?
SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*) >= 2,Énumérez les noms des studios qui ont au moins deux films.
SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*) >= 2,Quels sont les noms des studios qui ont réalisé deux films ou plus ?
SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation),Énumérez le titre des films qui n'ont pas d'estimation de marché.
SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation),Quels sont les titres des films qui n'ont pas d'estimation du marché du film ?
"SELECT Studio FROM film WHERE Director = ""Nicholas Meyer"" INTERSECT SELECT Studio FROM film WHERE Director = ""Walter Hill""","Montrez les studios qui ont produit des films avec le réalisateur ""Nicholas Meyer"" et ""Walter Hill""."
"SELECT Studio FROM film WHERE Director = ""Nicholas Meyer"" INTERSECT SELECT Studio FROM film WHERE Director = ""Walter Hill""",Quels sont les noms des studios qui ont produit des films avec Nicholas Meyer et Walter Hill ?
"SELECT title , Studio FROM film WHERE Studio LIKE ""%Universal%""","Trouvez les titres et les studios des films produits par certains studios de cinéma contenant le mot ""Universal""."
"SELECT title , Studio FROM film WHERE Studio LIKE ""%Universal%""","Quels sont les titres et les studios des films qui ont été produits par un studio dont le nom contient ""Universal"" ?"
"SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director = ""Walter Hill""","Montrez les studios qui n'ont pas produit de films avec le réalisateur ""Walter Hill""."
"SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director = ""Walter Hill""",Quels studios n'ont jamais travaillé avec le réalisateur Walter Hill ?
SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar) >= 4500000,Listez les studios dont le brut moyen est supérieur à 4500000.
SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar) >= 4500000,Quels studios ont un brut moyen de plus de 4500000 ?
SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID ORDER BY high_estimate DESC LIMIT 1,Quel est le titre du film qui a la plus haute estimation du marché.
SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID ORDER BY high_estimate DESC LIMIT 1,Rendre le titre du film avec l'estimation haute la plus élevée ?
"SELECT title , director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China')",Quels sont les titres et réalisateurs des films qui n'ont jamais été présentés en Chine ?
"SELECT title , director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China')",Renvoyez les titres et réalisateurs de films qui n'ont jamais été sur le marché chinois.
SELECT count(*) FROM Ref_calendar,Combien d'éléments de calendrier avons-nous ?
SELECT count(*) FROM Ref_calendar,Comptez le nombre de tous les éléments du calendrier.
"SELECT calendar_date , day_Number FROM Ref_calendar",Afficher toutes les dates du calendrier et les numéros de jour.
"SELECT calendar_date , day_Number FROM Ref_calendar",Quelles sont toutes les dates du calendrier et les numéros de jour ?
SELECT count(*) FROM Ref_document_types,Afficher le nombre de types de documents.
SELECT count(*) FROM Ref_document_types,Combien y a-t-il de types de documents ?
"SELECT document_type_code , document_type_name FROM Ref_document_types",Répertorier tous les codes de type de document et les noms de type de document.
"SELECT document_type_code , document_type_name FROM Ref_document_types",Quels sont tous les codes de type de document et les noms de type de document ?
"SELECT document_type_name , document_type_description FROM Ref_document_types WHERE document_type_code = ""RV""",Quel est le nom et la description du code de type de document RV ?
"SELECT document_type_name , document_type_description FROM Ref_document_types WHERE document_type_code = ""RV""",Donnez-moi le nom et la description du code de type de document RV.
"SELECT document_type_code FROM Ref_document_types WHERE document_type_name = ""Paper""","Quel est le code de type de document pour le type de document ""Papier"" ?"
"SELECT document_type_code FROM Ref_document_types WHERE document_type_name = ""Paper""","Trouver le code du type de document ""Papier""."
"SELECT count(*) FROM All_documents WHERE document_type_code = ""CV"" OR document_type_code = ""BK""",Afficher le nombre de documents avec le code de type de document CV ou BK.
"SELECT count(*) FROM All_documents WHERE document_type_code = ""CV"" OR document_type_code = ""BK""",Combien de documents ont le code de type de document CV ou BK ?
"SELECT date_stored FROM All_documents WHERE Document_name = ""Marry CV""","Quelle est la date à laquelle le document ""Marry CV"" a été stocké ?"
"SELECT date_stored FROM All_documents WHERE Document_name = ""Marry CV""","Quand le document nommé ""Marry CV"" a-t-il été stocké ? Donnez-moi la date."
"SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",Quel est le numéro de jour et la date de tous les documents ?
"SELECT T2.day_Number , T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",Renvoie le numéro du jour et la date de stockage pour tous les documents.
"SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = ""How to read a book""","Quel est le nom du type de document pour le document nommé ""Comment lire un livre"" ?"
"SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = ""How to read a book""","Recherchez le nom du type de document du document nommé ""Comment lire un livre""."
SELECT count(*) FROM Ref_locations,Afficher le nombre d'emplacements.
SELECT count(*) FROM Ref_locations,Combien d'emplacements sont répertoriés dans la base de données ?
"SELECT location_code , location_name FROM Ref_locations",Répertoriez tous les codes d'emplacement et les noms d'emplacement.
"SELECT location_code , location_name FROM Ref_locations",Quels sont tous les codes d'emplacement et les noms d'emplacement ?
"SELECT location_name , location_description FROM Ref_locations WHERE location_code = ""x""",Quels sont le nom et la description du code d'emplacement x ?
"SELECT location_name , location_description FROM Ref_locations WHERE location_code = ""x""",Donnez-moi le nom et la description de l'emplacement avec le code x.
"SELECT location_code FROM Ref_locations WHERE location_name = ""Canada""","Quel est le code de localisation du pays ""Canada"" ?"
"SELECT location_code FROM Ref_locations WHERE location_name = ""Canada""","Afficher le code de localisation du pays ""Canada""."
SELECT count(*) FROM ROLES,Combien y a-t-il de rôles ?
SELECT count(*) FROM ROLES,Comptez le nombre total de rôles répertoriés.
"SELECT role_code , role_name , role_description FROM ROLES","Répertoriez tous les codes de rôle, les noms de rôle et les descriptions de rôle."
"SELECT role_code , role_name , role_description FROM ROLES","Quels sont tous les codes de rôle, les noms de rôle et les descriptions de rôle ?"
"SELECT role_name , role_description FROM ROLES WHERE role_code = ""MG""","Quels sont le nom et la description du code de rôle ""MG"" ?"
"SELECT role_name , role_description FROM ROLES WHERE role_code = ""MG""","Trouvez le nom et la description du rôle avec le code ""MG""."
"SELECT role_description FROM ROLES WHERE role_name = ""Proof Reader""","Affichez la description du nom de rôle ""Relecteur d'épreuves""."
"SELECT role_description FROM ROLES WHERE role_name = ""Proof Reader""","Quelle est la description du rôle nommé ""Relecteur d'épreuves"" ?"
"SELECT employee_name , role_code , date_of_birth FROM Employees WHERE employee_Name = 'Armani'","Affichez le nom, le code de rôle et la date de naissance de l'employé portant le nom « Armani »."
"SELECT employee_name , role_code , date_of_birth FROM Employees WHERE employee_Name = 'Armani'","Quels sont le nom, le code de poste et la date de naissance de l'employé nommé « Armani » ?"
"SELECT employee_ID FROM Employees WHERE employee_name = ""Ebba""",Quel est l'identifiant de l'employé appelé Ebba ?
"SELECT employee_ID FROM Employees WHERE employee_name = ""Ebba""",Afficher l'identifiant de l'employé nommé Ebba.
"SELECT employee_name FROM Employees WHERE role_code = ""HR""","Afficher les noms de tous les employés avec le rôle ""RH""."
"SELECT employee_name FROM Employees WHERE role_code = ""HR""","Quels employés ont le rôle avec le code ""HR"" ? Trouvez leurs noms."
"SELECT role_code , count(*) FROM Employees GROUP BY role_code",Afficher tous les codes de rôle et le nombre d'employés dans chaque rôle.
"SELECT role_code , count(*) FROM Employees GROUP BY role_code",Quel est le code de chaque rôle et le nombre d'employés dans chaque rôle ?
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de rôle avec le plus grand nombre d'employés ?
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1,Trouvez le code du rôle qui compte le plus d'employés.
SELECT role_code FROM Employees GROUP BY role_code HAVING count(*) >= 3,Afficher tous les codes de rôle avec au moins 3 employés.
SELECT role_code FROM Employees GROUP BY role_code HAVING count(*) >= 3,Quels sont les rôles avec trois employés ou plus ? Donnez-moi les codes de rôle.
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1,Afficher le code de rôle avec le moins d'employés.
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1,Quel est le rôle avec le plus petit nombre d'employés ? Trouvez les codes de rôle.
"SELECT T2.role_name , T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T1.employee_name = ""Ebba""",Quel est le nom et la description du rôle de l'employé appelé Ebba ?
"SELECT T2.role_name , T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T1.employee_name = ""Ebba""",Montrez le nom et la description du rôle joué par l'employé nommé Ebba.
"SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = ""Editor""",Afficher les noms des employés avec le nom de rôle Éditeur.
"SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = ""Editor""",Trouvez les noms de tous les employés dont le nom de rôle est « Éditeur ».
"SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = ""Human Resource"" OR T2.role_name = ""Manager""","Afficher les identifiants des employés pour tous les employés avec le nom de rôle ""Ressources humaines"" ou ""Manager""."
"SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = ""Human Resource"" OR T2.role_name = ""Manager""","Quels sont les identifiants des employés dont le nom de rôle est ""Ressources humaines"" ou ""Manager"" ?"
SELECT DISTINCT location_code FROM Document_locations,Quels sont les différents codes d'emplacement pour les documents ?
SELECT DISTINCT location_code FROM Document_locations,Donnez-moi tous les codes d'emplacement distincts pour les documents.
"SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = ""Robin CV""","Afficher le nom de l'emplacement pour le document ""Robin CV""."
"SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = ""Robin CV""","Quel est le nom de l'emplacement du document ""Robin CV"" ?"
"SELECT location_code , date_in_location_from , date_in_locaton_to FROM Document_locations","Afficher le code d'emplacement, la date de début et les données de fin à cet emplacement pour tous les documents."
"SELECT location_code , date_in_location_from , date_in_locaton_to FROM Document_locations","Quels sont le code d'emplacement de chaque document, ainsi que la date de début et les données de fin à cet emplacement ?"
"SELECT T1.date_in_location_from , T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Robin CV""","Quelle est la ""date de lieu de"" et ""la date de lieu de"" pour le document portant le nom ""Robin CV"" ?"
"SELECT T1.date_in_location_from , T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Robin CV""","Trouvez la date de début et les données de fin dans l'emplacement du document nommé ""Robin CV""."
"SELECT location_code , count(*) FROM Document_locations GROUP BY location_code",Afficher les codes d'emplacement et le nombre de documents dans chaque emplacement.
"SELECT location_code , count(*) FROM Document_locations GROUP BY location_code",Quel est le code de chaque emplacement et le nombre de documents dans cet emplacement ?
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de localisation avec le plus de documents ?
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1,Trouvez le code de l'emplacement avec le plus grand nombre de documents.
SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*) >= 3,Afficher les codes de localisation avec au moins 3 documents.
SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*) >= 3,Quels sont les codes des lieux avec au moins trois documents ?
"SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1",Afficher le nom et le code de l'emplacement avec le moins de documents.
"SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1",Quels sont le nom et le code de l'emplacement avec le plus petit nombre de documents ?
"SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;",Quels sont les noms des employés qui ont autorisé la destruction et des employés qui ont détruit les documents correspondants ?
"SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;",Dressez la liste des noms des employés qui ont autorisé la destruction des documents et des employés qui ont détruit les documents correspondants.
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Afficher l'identifiant de chaque employé et le nombre de destructions de documents autorisées par cet employé.
"SELECT Destruction_Authorised_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",Quels sont l'identifiant de chaque employé et le nombre de destructions de documents autorisées par cet employé ?
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Afficher les identifiants des employés et le nombre de documents détruits par chaque employé.
"SELECT Destroyed_by_Employee_ID , count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",Quels sont l'identifiant de chaque employé et le nombre de documents détruits par cet employé ?
SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,Afficher les identifiants des employés qui n'autorisent la destruction d'aucun document.
SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,Quels employés n'autorisent la destruction d'aucun document ? Donnez-moi leurs identifiants d'employés.
SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,Afficher les identifiants de tous les employés qui ont autorisé la destruction.
SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,Quels sont les identifiants de tous les employés qui autorisent la destruction de documents ?
SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,Afficher les identifiants de tous les employés qui ont détruit un document.
SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,Quels sont les identifiants de tous les employés qui ont détruit des documents ?
SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,Afficher les identifiants de tous les employés qui ne détruisent aucun document.
SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,Quels employés ne détruisent aucun document ? Trouvez leurs identifiants d'employés.
SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,Afficher les identifiants de tous les employés qui ont détruit un document ou donné une autorisation pour le faire.
SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,"Quels employés ont soit détruit un document, soit donné une autorisation pour le faire ? Renvoyez leurs identifiants d'employé."
SELECT clubname FROM club,Comment s'appellent tous les clubs ?
SELECT clubname FROM club,Donnez-moi le nom de chaque club.
SELECT count(*) FROM student,Combien d'étudiants sont là?
SELECT count(*) FROM student,Comptez le nombre total d'élèves.
SELECT count(*) FROM student,Trouver le nombre d'élèves au total.
SELECT count(*) FROM student,Combien y a-t-il d'élèves au total ?
SELECT count(*) FROM student,Combien d'étudiants sont là?
SELECT count(*) FROM student,Combien y a-t-il d'étudiants ?
SELECT DISTINCT fname FROM student,Quels sont les prénoms de tous les élèves ?
SELECT DISTINCT fname FROM student,Trouvez le prénom de chaque élève.
"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Retrouvez les noms de famille des membres du club ""Bootup Baltimore""."
"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Qui sont les membres du club nommé ""Bootup Baltimore"" ? Donnez-moi leurs noms de famille."
"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Qui sont les membres du club nommé ""Hopkins Student Enterprises"" ? Afficher le nom de famille."
"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Renvoyez le nom de famille des membres du club nommé ""Hopkins Student Enterprises""."
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Tennis Club""","Combien de membres compte le club ""Tennis Club"" ?"
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Tennis Club""","Comptez les membres du club ""Tennis Club""."
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Tennis Club""","Retrouvez le nombre de membres du club ""Pen and Paper Gaming""."
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Tennis Club""","Combien de personnes sont membres du club ""Pen and Paper Gaming"" ?"
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Linda"" AND t3.lname = ""Smith""","À combien de clubs appartient ""Linda Smith"" ?"
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Linda"" AND t3.lname = ""Smith""","Pour combien de clubs ""Linda Smith"" est-elle membre ?"
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Linda"" AND t3.lname = ""Smith""","Trouver le nombre de clubs dont ""Tracy Kim"" est membre."
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Linda"" AND t3.lname = ""Smith""","Pour combien de clubs ""Tracy Kim"" est-elle membre ?"
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.sex = ""F""","Retrouvez toutes les membres féminines du club ""Bootup Baltimore"". Afficher le prénom et le nom de famille."
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.sex = ""F""","Donnez-moi le prénom et le nom de toutes les femmes membres du club ""Bootup Baltimore""."
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.sex = ""F""","Retrouvez tous les membres masculins du club ""Hopkins Student Enterprises"". Afficher le prénom et le nom de famille."
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.sex = ""F""","Quels sont le prénom et le nom de chaque membre masculin du club ""Hopkins Student Enterprises"" ?"
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.major = ""600""","Retrouvez tous les membres de ""Bootup Baltimore"" dont le majeur est ""600"". Afficher le prénom et le nom de famille."
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.major = ""600""","Quels membres de ""Bootup Baltimore"" major dans ""600"" ? Donnez-moi leurs noms et prénoms."
"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.major = ""600"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",Quel club compte le plus de membres se spécialisant en « 600 » ?
"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.major = ""600"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1","Trouvez le club qui compte le plus grand nombre de membres se spécialisant en ""600""."
"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.sex = ""F"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",Trouvez le nom du club qui compte le plus d'étudiantes.
"SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.sex = ""F"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",Quel club compte le plus d'étudiantes parmi ses membres ? Donnez-moi le nom du club.
"SELECT clubdesc FROM club WHERE clubname = ""Tennis Club""","Quelle est la description du club nommé ""Tennis Club"" ?"
"SELECT clubdesc FROM club WHERE clubname = ""Tennis Club""","Retrouvez la description du club ""Tennis Club""."
"SELECT clubdesc FROM club WHERE clubname = ""Tennis Club""","Retrouvez la description du club ""Pen and Paper Gaming""."
"SELECT clubdesc FROM club WHERE clubname = ""Tennis Club""",Quelle est la description du club « Pen and Paper Gaming » ?
"SELECT clublocation FROM club WHERE clubname = ""Tennis Club""","Quel est l'emplacement du club nommé ""Tennis Club"" ?"
"SELECT clublocation FROM club WHERE clubname = ""Tennis Club""","Où se trouve le club nommé ""Tennis Club"" ?"
"SELECT clublocation FROM club WHERE clubname = ""Tennis Club""","Trouver l'emplacement du club ""Pen and Paper Gaming""."
"SELECT clublocation FROM club WHERE clubname = ""Tennis Club""",Où est situé le club « Pen and Paper Gaming » ?
"SELECT clublocation FROM club WHERE clubname = ""Tennis Club""","Où se trouve le club ""Hopkins Student Enterprises"" ?"
"SELECT clublocation FROM club WHERE clubname = ""Tennis Club""","Dites-moi où se trouve le club ""Hopkins Student Enterprises""."
"SELECT clubname FROM club WHERE clublocation = ""AKW""","Retrouvez le nom de tous les clubs sur ""AKW""."
"SELECT clubname FROM club WHERE clublocation = ""AKW""","Quels clubs sont situés à ""AKW"" ? Renvoyez les noms des clubs."
"SELECT count(*) FROM club WHERE clublocation = ""HHH""","Combien de clubs sont situés à ""HHH"" ?"
"SELECT count(*) FROM club WHERE clublocation = ""HHH""","Comptez le nombre de clubs situés à ""HHH""."
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t2.position = ""President""",Quels sont le prénom et le nom du président du club « Bootup Baltimore » ?
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t2.position = ""President""",Qui est le président du club « Bootup Baltimore » ? Donnez-moi le prénom et le nom.
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t2.position = ""President""","Qui est le ""CTO"" du club ""Hopkins Student Enterprises"" ? Afficher le prénom et le nom de famille."
"SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t2.position = ""President""","Trouver le prénom et le nom du ""CTO"" du club ""Hopkins Student Enterprises"" ?"
"SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid WHERE t1.clubname = ""Bootup Baltimore""","Combien y a-t-il de rôles différents dans le club ""Bootup Baltimore"" ?"
"SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid WHERE t1.clubname = ""Bootup Baltimore""","Comptez le nombre de postes différents dans le club ""Bootup Baltimore""."
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.age > 18","Combien de membres de ""Bootup Baltimore"" ont plus de 18 ans ?"
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.age > 18","Comptez le nombre de membres du club ""Bootup Baltimore"" dont l'âge est supérieur à 18 ans."
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.age < 18","Combien de membres du club ""Bootup Baltimore"" ont moins de 18 ans ?"
"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore"" AND t3.age < 18","Comptez le nombre de membres du club ""Bootup Baltimore"" dont l'âge est inférieur à 18 ans."
"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = ""BAL""","Trouvez les noms de tous les clubs qui ont au moins un membre de la ville avec le code de ville ""BAL""."
"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = ""BAL""","Quels clubs ont un ou plusieurs membres de la ville avec le code ""BAL"" ? Donnez-moi les noms des clubs."
"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = ""BAL""","Trouvez les noms des clubs qui ont au moins un membre de la ville avec le code de ville ""HOU""."
"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = ""BAL""","Quels clubs ont un ou plusieurs membres de la ville avec le code ""HOU"" ? Donnez-moi les noms des clubs."
"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Eric"" AND t3.lname = ""Tai""","À combien de clubs appartient l'étudiant nommé ""Eric Tai"" ?"
"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Eric"" AND t3.lname = ""Tai""","Comptez le nombre de clubs dont l'étudiant nommé ""Eric Tai"" est membre."
"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Davis"" AND t3.lname = ""Steven""","Dressez la liste des clubs ayant ""Davis Steven"" comme membre."
"SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = ""Davis"" AND t3.lname = ""Steven""","Quels sont les noms des clubs qui ont ""Davis Steven"" comme membre ?"
SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.advisor = 1121,"Listez les clubs qui ont au moins un membre avec le conseiller ""1121""."
SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.advisor = 1121,Quels clubs ont un ou plusieurs membres dont le conseiller est « 1121 » ?
"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""",Quel est l'âge moyen des membres du club « Bootup Baltimore » ?
"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Retrouvez la moyenne d'âge des membres du club ""Bootup Baltimore""."
"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Retrouvez la moyenne d'âge des membres du club ""Hopkins Student Enterprises""."
"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""",Quel âge ont en moyenne les membres du club « Hopkins Student Enterprises » ?
"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Récupérer la moyenne d'âge des membres du club ""Tennis Club""."
"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = ""Bootup Baltimore""","Calculez l'âge moyen des membres du club ""Tennis Club""."
SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id WHERE T2.sent_date < '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date > '1989-03-16 18:27:16',Quel est le montant distinct de la subvention pour les subventions où les documents ont été envoyés avant le '1986-08-26 20:49:27' et la subvention a pris fin après le '1989-03-16 18:27:16' ?
SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id WHERE T2.sent_date < '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date > '1989-03-16 18:27:16',Quels sont les différents montants de subvention pour les documents envoyés avant le '1986-08-26 20:49:27' et après la fin de la subvention le '1989-03-16 18:27:16' ?
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent',Énumérez les détails du projet du projet produisant à la fois un brevet et un document en tant que résultats.
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent',Quels sont les détails du projet qui produit à la fois des brevets et des documents en tant que résultats ?
SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research',Quel est le montant total des subventions des organisations qualifiées de recherche ?
SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research',Quel est le montant total des subventions pour la recherche ?
"SELECT date_from , date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'leader'",Liste à partir de quelle date et jusqu'à quelle date ce personnel travaille : personnel du projet du projet qui embauche le plus de personnel
"SELECT date_from , date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'leader'",À partir de quelle date et jusqu'à quelle date le personnel travaille-t-il sur un projet qui a le plus de personnel et qui a du personnel dans un rôle de leader ?
"SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount) > 6000",Trouvez les identifiants d'organisation et les détails des organisations qui sont impliquées dans
"SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount) > 6000",Quels sont les identifiants et les détails de toutes les organisations qui ont des subventions de plus de 6000 dollars ?
"SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",Quel est le type d'organisation et l'identifiant de l'organisation qui compte le plus de personnel de recherche ?
"SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",Quel est le type et l'identifiant de l'organisation qui a le plus de personnel de recherche ?
SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1,Quel type d'organisation embauche le plus de personnel de recherche ?
SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1,Quel est le type d'organisation qui compte le plus de personnel de recherche ?
SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type = T4.organisation_type WHERE T2.grant_amount > 5000 AND T4.organisation_type_description = 'Research',Découvrez les dates d'envoi des documents avec le montant de la subvention de plus de 5000 ont été accordés par type d'organisation décrit
SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type = T4.organisation_type WHERE T2.grant_amount > 5000 AND T4.organisation_type_description = 'Research',Quelles sont les dates d'envoi de tous les documents dont le montant de la subvention est supérieur à 5000 et qui sont impliqués dans la recherche ?
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100,Quelles sont les dates de réception des réponses pour les documents qualifiés de « Réguliers » ou délivrés à plus de 100 ?
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100,Quelle est la date de réception de la réponse pour le document décrit comme Régulier qui a été accordé plus de 100 dollars ?
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ),Énumérez les détails du projet des projets qui n'ont pas embauché de personnel pour un rôle de chercheur.
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ),Quels sont les détails de tous les projets qui n'ont pas embauché de personnel dans un rôle de recherche ?
"SELECT T1.task_details , T1.task_id , T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis' UNION SELECT T1.task_details , T1.task_id , T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.project_id HAVING count(*) > 2","Quels sont les détails de la tâche, l'ID de la tâche et l'ID du projet pour les projets qui sont détaillés comme ""omnis"" ou qui ont plus de 2 résultats ?"
"SELECT T1.task_details , T1.task_id , T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis' UNION SELECT T1.task_details , T1.task_id , T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.project_id HAVING count(*) > 2","Quels sont les détails de la tâche, les identifiants de tâche et les identifiants de projet pour les projets qui sont détaillés comme ""omnis"" ou qui ont au moins 3 résultats ?"
"SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'researcher'",Quand tous les membres du personnel de recherche commencent-ils à travailler et quand cessent-ils de travailler ?
"SELECT date_from , date_to FROM Project_Staff WHERE role_code = 'researcher'",Quand les chercheurs ont-ils commencé et cessé de travailler ?
SELECT count(DISTINCT role_code) FROM Project_Staff,Combien de types de rôles existe-t-il pour le personnel ?
SELECT count(DISTINCT role_code) FROM Project_Staff,Combien de rôles différents y a-t-il dans le personnel du projet ?
"SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id",Quel est le montant total des subventions accordées par chaque organisation ? Indiquez également l'identifiant de l'organisation.
"SELECT sum(grant_amount) , organisation_id FROM Grants GROUP BY organisation_id",Quel est le montant total de la subvention accordée à chaque organisation et quel est son identifiant ?
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%',Énumérez les détails du projet des projets avec le résultat de la recherche décrit avec la sous-chaîne 'Publié'.
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%',Quels sont les détails du projet dont les recherches ont été publiées ?
"SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",Combien d'employés chaque projet compte-t-il ? Indiquez l'ID du projet et le numéro dans l'ordre croissant.
"SELECT T1.project_id , count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC","Pour chaque identifiant de projet, combien d'employés compte-t-il ? Énumérez-les par ordre croissant."
SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher',Quelle est la description complète du rôle de chercheur.
SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher',Quelle est la description complète du travail d'un chercheur?
SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1,Quand le premier personnel des projets a-t-il commencé à travailler ?
SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1,Quand le premier membre du personnel a-t-il commencé à travailler ?
"SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1",Quel projet a généré le plus grand nombre de résultats ? Répertoriez les détails du projet et l'ID du projet.
"SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1",Quels sont les détails et l'identité du projet avec le plus de résultats ?
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes ),Quels projets n'ont pas de résultat ? Listez les détails du projet.
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes ),Quels sont les détails du projet sans résultats ?
"SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1","Quelle organisation a embauché le plus de personnel de recherche ? Indiquez l'ID, le type et les détails de l'organisation."
"SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1","Quels sont les identifiants, les types et les détails de l'organisation avec le plus de personnel de recherche ?"
"SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",Montrer la description du rôle et l'identifiant du personnel du projet impliqué dans la plupart des résultats du projet ?
"SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1","Pour chaque ID de personnel, quelle est la description du rôle impliqué dans le plus grand nombre de projets ?"
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%',"Quel type de document est décrit avec le préfixe ""Initial"" ?"
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%',Quel est le type de document dont la description commence par le mot « Initial » ?
SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application',"Pour les subventions avec à la fois des documents décrits comme « réguliers » et des documents décrits comme « demande initiale », indiquez sa date de début."
SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application',"Pour les subventions qui ont des descriptions de demandes régulières et initiales, quelles sont leurs dates de début ?"
"SELECT grant_id , count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",Combien de documents une subvention peut-elle avoir au maximum ? Indiquez l'identifiant et le numéro de la subvention.
"SELECT grant_id , count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1","Pour chaque ID de subvention, combien de documents possède-t-il et lequel en contient-il le plus ?"
SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo',Trouvez la description du type d'organisation de l'organisation détaillée comme « quo ».
SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo',Quelle est la description type de l'organisation dont les détails sont répertoriés comme « quo » ?
SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details,Quels sont tous les détails des organisations qualifiées de 'sponsor' ? Triez le résultat par ordre croissant.
SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details,Quels sont les détails de toutes les organisations décrites comme sponsors et triez les résultats par ordre croissant ?
SELECT count(*) FROM Project_outcomes WHERE outcome_code = 'Patent',Combien de résultats de brevets sont générés à partir de tous les projets ?
SELECT count(*) FROM Project_outcomes WHERE outcome_code = 'Patent',Combien de résultats de brevets ont été répertoriés pour tous les projets ?
SELECT count(*) FROM Project_Staff WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54',Combien de membres du personnel du projet ont travaillé en tant que leaders ou ont commencé à travailler avant le '1989-04-24 23:51:54' ?
SELECT count(*) FROM Project_Staff WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54',Combien de membres du projet étaient des leaders ou ont commencé à travailler avant le '1989-04-24 23:51:54' ?
SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1,Quelle est la dernière date à laquelle le personnel quitte les projets ?
SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1,Quelle est la dernière date à laquelle un membre du personnel a quitté un projet ?
SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint',Quelle est la description du résultat du projet dont le détail est 'sint'?
SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint',Quelle est la description des résultats dont le détail du projet est « sint » ?
"SELECT T1.organisation_id , count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",Indiquez l'ID de l'organisation avec le nombre maximal de résultats et le nombre.
"SELECT T1.organisation_id , count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant de l'organisation avec le nombre maximum de résultats et combien y a-t-il de résultats ?
SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),Lister les détails du projet des projets lancés par l'organisation
SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),Quels sont les détails des projets qui ont été lancés par l'organisation avec le plus de projets ?
SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC,Énumérez les détails du personnel de recherche et classez-les par ordre croissant.
SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC,Quels détails y a-t-il sur le personnel de recherche? Classez le résultat par ordre alphabétique croissant.
SELECT count(*) FROM Tasks,Combien y a-t-il de tâches au total ?
SELECT count(*) FROM Tasks,Combien y a-t-il de tâches ?
"SELECT count(*) , T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id",Combien de tâches comporte chaque projet ? Indiquez le nombre de tâches et les détails du projet.
"SELECT count(*) , T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id","Pour chaque identifiant de projet, combien y a-t-il de tâches ?"
SELECT role_code FROM Project_Staff WHERE date_from > '2003-04-19 15:06:20' AND date_to < '2016-03-15 00:33:18',Quels sont les rôles du personnel qui
SELECT role_code FROM Project_Staff WHERE date_from > '2003-04-19 15:06:20' AND date_to < '2016-03-15 00:33:18',Quels rôles les membres du personnel ont-ils joué entre le '2003-04-19 15:06:20' et le '2016-03-15 00:33:18' ?
SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code,Quelles sont les descriptions de tous les résultats du projet ?
SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code,Énumérez la description des résultats pour tous les projets.
SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1,Quel rôle est le plus courant pour le personnel ?
SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1,Quel est le rôle le plus courant pour le personnel ?
SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan',Combien d'amis Dan a-t-il ?
SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan',Combien d'amis Dan a-t-il ?
SELECT count(*) FROM Person WHERE gender = 'female',Combien de femmes ce réseau compte-t-il ?
SELECT count(*) FROM Person WHERE gender = 'female',Combien y a-t-il de femmes dans le réseau ?
SELECT avg(age) FROM Person,Quel est l'âge moyen de toute personne ?
SELECT avg(age) FROM Person,Quel est l'âge moyen de toutes les personnes du tableau ?
SELECT count(DISTINCT city) FROM Person,De combien de villes différentes viennent-ils ?
SELECT count(DISTINCT city) FROM Person,De combien de villes différentes les gens sont-ils originaires ?
SELECT count(DISTINCT job) FROM Person,Combien de types d'emplois ont-ils?
SELECT count(DISTINCT job) FROM Person,Combien d'emplois différents sont répertoriés ?
SELECT name FROM Person WHERE age = (SELECT max(age) FROM person),Qui est la personne la plus âgée ?
SELECT name FROM Person WHERE age = (SELECT max(age) FROM person),Comment s'appelle la personne la plus âgée ?
SELECT name FROM Person WHERE job = 'student' AND age = (SELECT max(age) FROM person WHERE job = 'student' ),Qui est la personne la plus âgée dont le travail est étudiant ?
SELECT name FROM Person WHERE job = 'student' AND age = (SELECT max(age) FROM person WHERE job = 'student' ),Comment s'appelle l'élève le plus âgé ?
SELECT name FROM Person WHERE gender = 'male' AND age = (SELECT min(age) FROM person WHERE gender = 'male' ),Qui est le plus jeune mâle ?
SELECT name FROM Person WHERE gender = 'male' AND age = (SELECT min(age) FROM person WHERE gender = 'male' ),Comment s'appelle le plus jeune mâle ?
SELECT age FROM Person WHERE job = 'doctor' AND name = 'Zach',Quel âge a le docteur nommé Zach ?
SELECT age FROM Person WHERE job = 'doctor' AND name = 'Zach',Quel âge a le docteur nommé Zach ?
SELECT name FROM Person WHERE age < 30,Qui est la personne dont l'âge est inférieur à 30 ans ?
SELECT name FROM Person WHERE age < 30,Comment s'appelle la personne dont l'âge est inférieur à 30 ans ?
SELECT count(*) FROM Person WHERE age > 30 AND job = 'engineer',Combien de personnes dont l'âge est supérieur à 30 ans et dont le métier est ingénieur ?
SELECT count(*) FROM Person WHERE age > 30 AND job = 'engineer',COMBIEN d'ingénieurs ont plus de 30 ans ?
"SELECT avg(age) , gender FROM Person GROUP BY gender",Quel est l'âge moyen pour chaque sexe ?
"SELECT avg(age) , gender FROM Person GROUP BY gender","Quel âge a chaque sexe, en moyenne ?"
"SELECT avg(age) , job FROM Person GROUP BY job",Quel est l'âge moyen pour les différents titres de poste ?
"SELECT avg(age) , job FROM Person GROUP BY job",Quel âge a la personne moyenne pour chaque emploi ?
"SELECT avg(age) , job FROM Person WHERE gender = 'male' GROUP BY job",Quel est l'âge moyen des hommes pour les différents titres de poste ?
"SELECT avg(age) , job FROM Person WHERE gender = 'male' GROUP BY job",Quel est l'âge moyen d'un homme dans chaque emploi ?
"SELECT min(age) , job FROM Person GROUP BY job",Quel est l'âge minimum pour les différents titres de poste ?
"SELECT min(age) , job FROM Person GROUP BY job",Quel âge a la personne la plus jeune pour chaque emploi ?
"SELECT count(*) , gender FROM Person WHERE age < 40 GROUP BY gender",Trouvez le nombre de personnes de moins de 40 ans pour chaque sexe.
"SELECT count(*) , gender FROM Person WHERE age < 40 GROUP BY gender",Combien de personnes ont moins de 40 ans pour chaque sexe ?
SELECT name FROM Person WHERE age > (SELECT min(age) FROM person WHERE job = 'engineer') ORDER BY age,Trouvez le nom de personnes dont l'âge est supérieur à n'importe quel ingénieur trié par leur âge.
SELECT name FROM Person WHERE age > (SELECT min(age) FROM person WHERE job = 'engineer') ORDER BY age,Comment s'appellent toutes les personnes qui sont plus âgées qu'au moins un ingénieur ? Classez-les par âge.
SELECT count(*) FROM Person WHERE age > (SELECT max(age) FROM person WHERE job = 'engineer'),Trouvez le nombre de personnes dont l'âge est supérieur à l'ensemble des ingénieurs.
SELECT count(*) FROM Person WHERE age > (SELECT max(age) FROM person WHERE job = 'engineer'),Combien de personnes sont plus âgées que chaque ingénieur ?
"SELECT name , job FROM Person ORDER BY name","indiquez le nom, le titre du poste de toutes les personnes classées par leurs noms."
"SELECT name , job FROM Person ORDER BY name",Quels sont les noms et titres de poste de chaque personne classés par ordre alphabétique de nom ?
SELECT name FROM Person ORDER BY age DESC,Trouvez les noms de toutes les personnes triés dans l'ordre décroissant en utilisant l'âge.
SELECT name FROM Person ORDER BY age DESC,Quels sont les noms de tout le monde triés par âge dans l'ordre décroissant ?
SELECT name FROM Person WHERE gender = 'male' ORDER BY age,Trouvez le nom et l'âge de tous les hommes dans l'ordre de leur âge.
SELECT name FROM Person WHERE gender = 'male' ORDER BY age,Quel est le nom et l'âge de chaque homme ? Classez les résultats par âge.
"SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'",Trouvez le nom et l'âge de la personne qui est un ami à la fois de Dan et d'Alice.
"SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'",Quels sont les noms et les âges de chaque personne qui est un ami à la fois de Dan et d'Alice ?
"SELECT DISTINCT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' OR T2.friend = 'Alice'",Trouvez le nom et l'âge de la personne qui est un ami de Dan ou d'Alice.
"SELECT DISTINCT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' OR T2.friend = 'Alice'",Quels sont les différents noms et âges de chaque ami de Dan ou d'Alice ?
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30),Trouver le nom de la personne qui a des amis âgés de plus de 40 ans et de moins de 30 ans ?
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30),Comment s'appelle chaque personne qui a un ami de plus de 40 ans et de moins de 30 ans ?
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30),Trouver le nom de la personne qui a des amis âgés de plus de 40 ans mais pas moins de 30 ans ?
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30),Comment s'appellent les personnes qui ont plus de 40 ans mais qui n'ont pas d'amis de moins de 30 ans ?
SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.job = 'student',Trouvez le nom de la personne qui n'a pas d'amis étudiants.
SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.job = 'student',Comment s'appellent les personnes qui n'ont pas d'amis qui sont étudiants ?
SELECT name FROM PersonFriend GROUP BY name HAVING count(*) = 1,Trouvez la personne qui a exactement un ami.
SELECT name FROM PersonFriend GROUP BY name HAVING count(*) = 1,Comment s'appellent tous ceux qui ont exactement un ami ?
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob',Qui sont les amis de Bob ?
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob',Qui sont les amis de Bob ?
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob',Trouvez le nom des personnes qui sont amies avec Bob.
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob',Comment s'appellent tous les amis de Bob ?
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' AND T1.gender = 'female',Trouvez les noms des femmes qui sont amies avec Zach
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' AND T1.gender = 'female',Comment s'appellent toutes les femmes qui sont amies avec Zach ?
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female',Retrouvez les amies d'Alice.
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female',Quels sont tous les amis d'Alice qui sont des femmes ?
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'male' AND T1.job = 'doctor',Trouver l'ami masculin d'Alice dont le métier est médecin ?
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'male' AND T1.job = 'doctor',Qui sont les amis d'Alice qui sont médecins ?
SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city',Qui a un ami qui vient de New York ?
SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city',Comment s'appellent tous les amis qui viennent de New York ?
SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age < (SELECT avg(age) FROM person),Qui a des amis plus jeunes que la moyenne d'âge ?
SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age < (SELECT avg(age) FROM person),Quels sont les différents noms d'amis qui sont plus jeunes que l'âge moyen d'un ami ?
"SELECT DISTINCT T2.name , T2.friend , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)",Qui a des amis plus âgés que la moyenne d'âge ? Imprimez leurs amis et leurs âges aussi
"SELECT DISTINCT T2.name , T2.friend , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)","Quels sont les noms, amis et âges de toutes les personnes qui sont plus âgées que l'âge moyen d'une personne ?"
SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = (SELECT max(YEAR) FROM PersonFriend WHERE name = 'Zach'),Qui est l'ami de Zach avec la relation la plus longue ?
SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = (SELECT max(YEAR) FROM PersonFriend WHERE name = 'Zach'),Quel ami de Zach a la plus longue amitié ?
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year = (SELECT max(YEAR) FROM PersonFriend WHERE name = 'Zach'),Quel est l'âge de l'ami de Zach avec la relation la plus longue ?
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year = (SELECT max(YEAR) FROM PersonFriend WHERE name = 'Zach'),Quel âge ont tous les amis de Zach qui sont dans la plus longue relation ?
SELECT name FROM PersonFriend WHERE friend = 'Alice' AND YEAR = (SELECT min(YEAR) FROM PersonFriend WHERE friend = 'Alice'),Trouvez le nom des personnes qui sont amies avec Alice depuis les années les plus courtes.
SELECT name FROM PersonFriend WHERE friend = 'Alice' AND YEAR = (SELECT min(YEAR) FROM PersonFriend WHERE friend = 'Alice'),Comment s'appellent toutes les personnes qui sont amies avec Alice depuis le moins longtemps ?
"SELECT T1.name , T1.age , T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice' AND T2.year = (SELECT max(YEAR) FROM PersonFriend WHERE friend = 'Alice')","Trouvez le nom, l'âge et la fonction des personnes qui sont amies avec Alice depuis les plus longues années."
"SELECT T1.name , T1.age , T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice' AND T2.year = (SELECT max(YEAR) FROM PersonFriend WHERE friend = 'Alice')","Quels sont les noms, âges et emplois de toutes les personnes qui sont amies avec Alice depuis le plus longtemps ?"
SELECT name FROM person EXCEPT SELECT name FROM PersonFriend,Quelle est la personne qui n'a pas d'ami ?
SELECT name FROM person EXCEPT SELECT name FROM PersonFriend,Comment s'appellent toutes les personnes qui n'ont pas d'amis ?
"SELECT T2.name , avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1",Quelle personne dont les amis ont l'âge moyen le plus élevé ?
"SELECT T2.name , avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1","Comment s'appelle la personne qui a l'âge moyen le plus élevé pour ses amis, et quel est cet âge moyen ?"
SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city = 'Austin'),Quel est le nombre total de personnes qui n'ont aucun ami vivant dans la ville d'Austin.
SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city = 'Austin'),Quel est le nombre total de personnes qui n'ont pas d'amis vivant à Austin ?
SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name = T2.name JOIN PersonFriend AS T3 ON T1.friend = T3.name JOIN PersonFriend AS T4 ON T3.friend = T4.name WHERE T2.name = 'Alice' AND T4.name != 'Alice',Trouvez les amis d'amis d'Alice.
SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name = T2.name JOIN PersonFriend AS T3 ON T1.friend = T3.name JOIN PersonFriend AS T4 ON T3.friend = T4.name WHERE T2.name = 'Alice' AND T4.name != 'Alice',Comment s'appellent tous les amis d'amis d'Alice ?
SELECT count(*) FROM member,Combien y a-t-il de membres ?
SELECT Name FROM member ORDER BY Name ASC,Listez les noms des membres par ordre alphabétique croissant.
"SELECT Name , Country FROM member",Quels sont les noms et pays des membres ?
"SELECT Name FROM member WHERE Country = ""United States"" OR Country = ""Canada""","Afficher les noms des membres dont le pays est ""États-Unis"" ou ""Canada""."
"SELECT Country , COUNT(*) FROM member GROUP BY Country",Indiquez les différents pays et le nombre de membres de chacun.
SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1,Afficher le pays le plus courant parmi les membres.
SELECT Country FROM member GROUP BY Country HAVING COUNT(*) > 2,Quels pays ont plus de deux membres ?
"SELECT Leader_Name , College_Location FROM college",Afficher les noms des dirigeants et les emplacements des collèges.
"SELECT T2.Name , T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID",Montrez les noms des membres et les noms des collèges qu'ils fréquentent.
"SELECT T2.Name , T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID ORDER BY T2.Name ASC",Affichez les noms des membres et les emplacements des collèges auxquels ils se rendent dans l'ordre alphabétique croissant des noms des membres.
"SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Country = ""Canada""","Afficher les noms distincts des dirigeants des collèges associés aux membres du pays ""Canada""."
"SELECT T1.Name , T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID",Affichez les noms des membres et les thèmes de décoration qu'ils ont.
SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Rank_in_Round > 3,Afficher les noms des membres qui ont un rang dans la manche supérieur à 3.
SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC,Afficher les noms des membres dans l'ordre croissant de leur rang dans les tours.
SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round),Dressez la liste des noms des membres qui n'ont participé à aucune ronde.
"SELECT document_name , access_count FROM documents ORDER BY document_name","Trouvez le nom et le nombre d'accès de tous les documents, dans l'ordre alphabétique du nom du document."
"SELECT document_name , access_count FROM documents ORDER BY document_name","Quels sont les noms de tous les documents, ainsi que le nombre d'accès de chacun, classés par ordre alphabétique ?"
"SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1","Trouver le nom du document qui a été consulté le plus grand nombre de fois, ainsi que le nombre de fois qu'il a été consulté ?"
"SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1","Quel est le nom du document qui a été consulté le plus de fois, ainsi que le nombre de fois où il a été consulté ?"
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*) > 4,Trouvez les types de documents avec plus de 4 documents.
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*) > 4,Quels sont les codes des types de documents dont il existe pour ou plus ?
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*) > 4,Quels types de documents ont plus de 2 documents correspondants ?
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*) > 4,Donnez les codes des types de documents qui ont plus de 2 documents correspondants.
SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1,Trouvez le nombre total d'accès de tous les documents dans le type de document le plus populaire.
SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1,Quel est le nombre total d'accès aux documents appartenant au type de document le plus courant ?
SELECT avg(access_count) FROM documents,Quel est le nombre moyen d'accès aux documents ?
SELECT avg(access_count) FROM documents,Trouver le nombre moyen d'accès pour tous les documents ?
SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code = t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1,Quelle est la structure du document avec le moins d'accès ?
SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code = t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1,Renvoie la description de la structure du document qui a été consulté le moins de fois.
"SELECT document_type_code FROM documents WHERE document_name = ""David CV""","Quel est le type de document nommé ""David CV"" ?"
"SELECT document_type_code FROM documents WHERE document_name = ""David CV""","Renvoie le code type du document nommé ""David CV""."
SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3,Trouvez la liste des documents qui sont à la fois dans les trois types les plus populaires et qui ont les trois structures les plus populaires.
SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3,Quels sont les noms des documents qui ont à la fois l'un des trois types les plus courants et l'une des trois structures les plus courantes ?
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count) > 10000,Quels types de documents ont plus de 10 000 numéros d'accès au total.
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count) > 10000,Renvoie les codes des types de documents qui n'ont pas un nombre total d'accès supérieur à 10 000.
"SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = ""David CV""","Quels sont tous les titres de section du document intitulé ""David CV"" ?"
"SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = ""David CV""","Donnez les titres des sections du document avec le nom ""David CV""."
SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections),Trouver tous les noms de documents sans aucune section.
SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections),Quels sont les noms des documents qui n'ont pas de sections ?
"SELECT user_name , password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",Répertoriez tous les noms d'utilisateur et mots de passe des utilisateurs ayant le rôle le plus populaire.
"SELECT user_name , password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",Quels sont les noms d'utilisateur et les mots de passe des utilisateurs qui ont le rôle le plus courant ?
"SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code WHERE t3.functional_area_description = ""Acknowledgement""",Trouvez le nombre moyen d'accès aux documents avec le domaine fonctionnel « Accusé de réception ».
"SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code WHERE t3.functional_area_description = ""Acknowledgement""",Quel est le nombre moyen d'accès aux documents qui ont la description de domaine fonctionnel « Accusé de réception » ?
SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id,Trouver les noms du document sans aucune image.
SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id,Quels sont les noms des documents qui n'ont pas d'images ?
SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1,Quel est le nom du document avec le plus grand nombre de sections ?
SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1,Renvoie le nom du document qui contient le plus de sections.
"SELECT document_name FROM documents WHERE document_name LIKE ""%CV%""","Listez tous les noms de documents qui contiennent ""CV""."
"SELECT document_name FROM documents WHERE document_name LIKE ""%CV%""","Quels sont les noms des documents contenant la sous-chaîne ""CV"" ?"
SELECT count(*) FROM users WHERE user_login = 1,Combien d'utilisateurs sont connectés ?
SELECT count(*) FROM users WHERE user_login = 1,Comptez le nombre d'utilisateurs connectés.
SELECT role_description FROM ROLES WHERE role_code = (SELECT role_code FROM users WHERE user_login = 1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1),Trouvez la description du rôle le plus populaire parmi les utilisateurs qui se sont connectés.
SELECT role_description FROM ROLES WHERE role_code = (SELECT role_code FROM users WHERE user_login = 1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1),Quelle est la description du rôle le plus populaire parmi les utilisateurs qui se sont connectés ?
SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1,Trouvez le nombre moyen d'accès aux documents avec la structure la moins populaire.
SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1,Quel est le nombre moyen d'accès aux documents qui ont la structure la moins commune ?
"SELECT image_name , image_url FROM images ORDER BY image_name",Répertoriez tous les noms d'images et URL dans l'ordre de leurs noms.
"SELECT image_name , image_url FROM images ORDER BY image_name","Quels sont les noms et urls des images, triés par ordre alphabétique ?"
"SELECT count(*) , role_code FROM users GROUP BY role_code",Trouvez le nombre d'utilisateurs dans chaque rôle.
"SELECT count(*) , role_code FROM users GROUP BY role_code",Quels sont les différents codes de rôle pour les utilisateurs et combien d'utilisateurs ont chacun ?
SELECT count(*) FROM Companies,Combien y a-t-il d'entreprises ?
SELECT count(*) FROM Companies,Comptez le nombre d'entreprises.
SELECT name FROM Companies ORDER BY Market_Value_billion DESC,Énumérez les noms des entreprises par ordre décroissant de valeur marchande.
SELECT name FROM Companies ORDER BY Market_Value_billion DESC,Triez les noms d'entreprises par ordre décroissant de la valeur marchande de l'entreprise.
SELECT name FROM Companies WHERE Headquarters != 'USA',"Quels sont les noms des entreprises dont le siège social n'est pas ""USA"" ?"
SELECT name FROM Companies WHERE Headquarters != 'USA',"Trouver les noms des sociétés dont le siège social n'est pas situé aux ""USA""."
"SELECT name , Assets_billion FROM Companies ORDER BY name ASC","Quels sont le nom et les actifs de chaque société, triés par ordre croissant de nom de société ?"
"SELECT name , Assets_billion FROM Companies ORDER BY name ASC",Énumérez le nom et les actifs de chaque entreprise dans l'ordre croissant du nom de l'entreprise.
SELECT avg(Profits_billion) FROM Companies,Quels sont les bénéfices moyens des entreprises ?
SELECT avg(Profits_billion) FROM Companies,Calculez les profits moyens des entreprises.
"SELECT max(Sales_billion) , min(Sales_billion) FROM Companies WHERE Industry != ""Banking""","Quels sont les ventes maximales et minimales des entreprises dont les industries ne sont pas ""bancaires""."
"SELECT max(Sales_billion) , min(Sales_billion) FROM Companies WHERE Industry != ""Banking""","Trouvez les ventes maximales et minimales des entreprises qui ne sont pas dans le secteur ""Banque""."
SELECT count(DISTINCT Industry) FROM Companies,Dans combien d'industries différentes les entreprises sont-elles présentes ?
SELECT count(DISTINCT Industry) FROM Companies,Comptez le nombre d'industries distinctes de l'entreprise.
SELECT name FROM buildings ORDER BY Height DESC,Énumérez les noms des bâtiments par ordre décroissant de hauteur de bâtiment.
SELECT name FROM buildings ORDER BY Height DESC,Quels sont les noms des bâtiments classés par ordre décroissant de hauteur de bâtiment ?
SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1,Trouvez les étages du bâtiment avec la plus grande hauteur.
SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1,Quelles sont les histoires du plus haut bâtiment ?
"SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id",Indiquez le nom d'un bâtiment ainsi que le nom d'une entreprise dont le bureau est dans le bâtiment.
"SELECT T3.name , T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id","Pour chaque entreprise, retournez le nom de l'entreprise et le nom de l'immeuble dans lequel se trouve son bureau."
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id HAVING COUNT(*) > 1,Afficher les noms des bâtiments qui ont plus d'un siège social.
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id HAVING COUNT(*) > 1,Quels bâtiments ont plus d'un siège social ? Donnez-moi les noms des bâtiments.
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1,Indiquez le nom du bâtiment qui compte le plus de bureaux de l'entreprise.
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1,Quel bâtiment compte le plus grand nombre de bureaux d'entreprise ? Donnez-moi le nom du bâtiment.
"SELECT name FROM buildings WHERE Status = ""on-hold"" ORDER BY Stories ASC","Veuillez indiquer les noms des bâtiments dont le statut est ""en attente"", par ordre croissant d'étages."
"SELECT name FROM buildings WHERE Status = ""on-hold"" ORDER BY Stories ASC","Trouvez les noms des bâtiments en état ""en attente"" et triez-les par ordre croissant d'étages de bâtiment."
"SELECT Industry , COUNT(*) FROM Companies GROUP BY Industry",Veuillez indiquer chaque industrie et le nombre correspondant d'entreprises dans cette industrie.
"SELECT Industry , COUNT(*) FROM Companies GROUP BY Industry",Quel est le nom de chaque industrie et le nombre d'entreprises dans cette industrie ?
SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC,Veuillez indiquer les secteurs d'activité des entreprises par ordre décroissant du nombre d'entreprises.
SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC,Trier toutes les industries par ordre décroissant du nombre d'entreprises dans chaque industrie
SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1,Énumérez l'industrie partagée par le plus d'entreprises.
SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1,Quel secteur compte le plus d'entreprises ?
SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations),Énumérez les noms des bâtiments qui n'ont pas de siège social.
SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations),Quels bâtiments n'ont pas de siège social ? Donnez-moi les noms des bâtiments.
"SELECT Industry FROM Companies WHERE Headquarters = ""USA"" INTERSECT SELECT Industry FROM Companies WHERE Headquarters = ""China""","Affichez les industries partagées par les entreprises dont le siège social est ""États-Unis"" et les entreprises dont le siège social est ""Chine""."
"SELECT Industry FROM Companies WHERE Headquarters = ""USA"" INTERSECT SELECT Industry FROM Companies WHERE Headquarters = ""China""",Quels secteurs ont à la fois des entreprises dont le siège est aux « États-Unis » et des entreprises dont le siège est en « Chine » ?
"SELECT count(*) FROM Companies WHERE Industry = ""Banking"" OR Industry = ""Conglomerate""","Trouver le nombre d'entreprises dont le secteur est ""Banque"" ou ""Conglomérat"","
"SELECT count(*) FROM Companies WHERE Industry = ""Banking"" OR Industry = ""Conglomerate""","Combien y a-t-il d'entreprises dans l'industrie ""bancaire"" ou dans l'industrie ""conglomérat"" ?"
SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*) > 2,Afficher le siège social partagé par plus de deux sociétés.
SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*) > 2,Quels sièges sociaux sont utilisés par plus de 2 entreprises ?
SELECT count(*) FROM Products,Combien y a-t-il de produits ?
SELECT count(*) FROM Products,Combien y a-t-il de produits ?
SELECT count(*) FROM Products,Comptez le nombre de produits.
SELECT Product_Name FROM Products ORDER BY Product_Price ASC,Indiquez le nom des produits par ordre croissant de prix.
SELECT Product_Name FROM Products ORDER BY Product_Price ASC,Listez tous les noms de produits par ordre croissant de prix.
SELECT Product_Name FROM Products ORDER BY Product_Price ASC,Triez les noms des produits par ordre croissant de leur prix.
"SELECT Product_Name , Product_Type_Code FROM Products",Quels sont les noms et les codes types des produits ?
"SELECT Product_Price FROM Products WHERE Product_Name = ""Dining"" OR Product_Name = ""Trading Policy""","Afficher les prix des produits nommés ""Restauration"" ou ""Politique commerciale""."
SELECT avg(Product_Price) FROM Products,Quel est le prix moyen des produits ?
"SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code",Afficher différents codes de type de produits et le nombre de produits avec chaque code de type.
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1,Afficher le code de type le plus courant dans les produits.
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*) >= 2,Afficher les codes de type de produit qui ont au moins deux produits.
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*) >= 2,Afficher les codes de type de produit qui ont au moins deux produits.
SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000,Afficher les codes de type de produit qui ont à la fois des produits avec un prix supérieur à 4500 et des produits avec un prix inférieur à 3000.
"SELECT T1.Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name",Affichez les noms des produits et le nombre d'événements auxquels ils participent.
"SELECT T1.Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC","Affichez les noms des produits et le nombre d'événements auxquels ils participent, triés par nombre d'événements dans l'ordre décroissant."
SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*) >= 2,Afficher les noms des produits qui sont dans au moins deux événements.
SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*) >= 2 ORDER BY T1.Product_Name,Afficher les noms des produits qui sont dans au moins deux événements dans l'ordre alphabétique croissant du nom du produit.
SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events),Lister les noms de produits qui ne le sont en aucun cas.
SELECT count(*) FROM artwork,Combien y a-t-il d'oeuvres d'art ?
SELECT Name FROM artwork ORDER BY Name ASC,Indiquez le nom des œuvres par ordre alphabétique croissant.
"SELECT Name FROM artwork WHERE TYPE != ""Program Talent Show""","Indiquez le nom des œuvres dont le type n'est pas ""Program Talent Show""."
"SELECT Festival_Name , LOCATION FROM festival_detail",Quels sont les noms et lieux des festivals ?
SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC,"Quels sont les noms des chaires de festivals, triées par ordre croissant de l'année tenue ?"
SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1,Quel est le lieu du festival avec le plus grand nombre de spectateurs ?
SELECT Festival_Name FROM festival_detail WHERE YEAR = 2007,Quels sont les noms des festivals organisés en 2007 ?
SELECT avg(Num_of_Audience) FROM festival_detail,Quel est le nombre moyen de spectateurs pour les festivals ?
SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3,Afficher les noms des trois festivals les plus récents.
"SELECT T2.Name , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID","Pour chaque nomination, indiquez le nom de l'œuvre et le nom du festival où elle est nominée."
SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T3.Year = 2007,Présentez différents types d'œuvres d'art nominées dans des festivals en 2007.
SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Year,Affichez les noms des œuvres d'art par ordre croissant de l'année dans laquelle elles sont nominées.
"SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T2.Type = ""Program Talent Show""","Afficher les noms des festivals qui ont nominé des œuvres de type ""Program Talent Show""."
"SELECT T1.Festival_ID , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*) >= 2",Affichez les identifiants et les noms des festivals qui ont au moins deux nominations pour des œuvres d'art.
"SELECT T1.Festival_ID , T3.Festival_Name , COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID","Affichez l'identifiant, le nom de chaque festival et le nombre d'œuvres qu'il a nominées."
"SELECT TYPE , COUNT(*) FROM artwork GROUP BY TYPE",Veuillez montrer différents types d'œuvres d'art avec le nombre correspondant d'œuvres d'art de chaque type.
SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1,Énumérez les types d'œuvres d'art les plus courants.
SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*) > 1,Indiquez l'année au cours de laquelle il y a plus d'un festival.
SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination),Indiquez le nom des œuvres d'art qui ne sont pas nominées.
SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010,Afficher le nombre d'audience en 2008 ou 2010.
SELECT sum(Num_of_Audience) FROM festival_detail,Quel est le nombre total de spectateurs qui ont visité l'un des festivals ?
SELECT YEAR FROM festival_detail WHERE LOCATION = 'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != 'United States',En quelle année y a-t-il des festivals aux « États-Unis » et à l'extérieur des « États-Unis » ?
SELECT count(*) FROM premises,Combien y a-t-il de locaux ?
SELECT DISTINCT premises_type FROM premises,Quels sont tous les types de prémisses distincts ?
"SELECT premises_type , premise_details FROM premises ORDER BY premises_type",Trouvez les types et les détails pour tous les locaux et commandez par type de local.
"SELECT premises_type , count(*) FROM premises GROUP BY premises_type",Indiquez chaque type de local et le nombre de locaux dans ce type.
"SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category",Affichez toutes les catégories de produits distinctes ainsi que le nombre de publipostages dans chaque catégorie.
"SELECT customer_name , customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)",Afficher le nom et le téléphone du client sans aucun mailing.
"SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.outcome_code = 'No Response'","Affichez le nom et le téléphone des clients avec un e-mail avec le code de résultat ""Pas de réponse""."
"SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code",Affichez le code de résultat des publipostages ainsi que le nombre de publipostages dans chaque code de résultat.
SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE outcome_code = 'Order' GROUP BY T1.customer_id HAVING count(*) >= 2,Afficher les noms des clients qui ont au moins 2 mailings avec le code de résultat 'Commande'.
SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Afficher les noms des clients qui ont le plus de mailings.
"SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order' INTERSECT SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'No Response'","Quels sont le nom et le mode de paiement des clients qui ont à la fois des mailings dans le résultat ""Commande"" et des mailings dans le résultat ""Pas de réponse""."
"SELECT T2.premises_type , T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",Afficher le type de site et le code de type d'adresse pour toutes les adresses des clients.
SELECT DISTINCT address_type_code FROM customer_addresses,Quels sont les codes de type d'adresse distincts pour toutes les adresses client ?
"SELECT order_shipping_charges , customer_id FROM customer_orders WHERE order_status_code = 'Cancelled' OR order_status_code = 'Paid'",Afficher les frais d'expédition et l'identifiant client pour les commandes client avec le statut de commande Annulé ou Payé.
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE shipping_method_code = 'FedEx' AND order_status_code = 'Paid',Afficher les noms des clients ayant une commande avec la méthode d'expédition FedEx et le statut de la commande Payé.
SELECT count(*) FROM COURSE,Combien y a-t-il de cours au total ?
SELECT count(*) FROM COURSE,Comptez le nombre de cours.
SELECT count(*) FROM COURSE WHERE Credits > 2,Combien de cours comptent plus de 2 crédits?
SELECT count(*) FROM COURSE WHERE Credits > 2,Comptez le nombre de cours de plus de 2 crédits.
SELECT CName FROM COURSE WHERE Credits = 1,Lister tous les noms de cours avec 1 crédit ?
SELECT CName FROM COURSE WHERE Credits = 1,Comment s'appellent les cours à 1 crédit ?
"SELECT CName FROM COURSE WHERE Days = ""MTW""",Quels cours sont dispensés les jours MTW ?
"SELECT CName FROM COURSE WHERE Days = ""MTW""",Quels sont les noms de cours pour les cours enseignés sur MTW ?
"SELECT count(*) FROM DEPARTMENT WHERE Division = ""AS""","Quel est le nombre de départements dans la Division ""AS"" ?"
"SELECT count(*) FROM DEPARTMENT WHERE Division = ""AS""",Combien y a-t-il de départements dans la division AS ?
SELECT DPhone FROM DEPARTMENT WHERE Room = 268,Quels sont les téléphones des services de la salle 268 ?
SELECT DPhone FROM DEPARTMENT WHERE Room = 268,Donnez les téléphones des services de la chambre 268.
"SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade = ""B""","Trouvez le nombre d'élèves qui ont au moins une note ""B""."
"SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade = ""B""","Combien d'élèves ont eu au moins une note ""B"" ?"
"SELECT max(gradepoint) , min(gradepoint) FROM GRADECONVERSION",Trouvez le point de note maximum et minimum pour toutes les notes de lettre.
"SELECT max(gradepoint) , min(gradepoint) FROM GRADECONVERSION",Quels sont les points de note maximum et minimum?
SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%',"Trouvez les prénoms des élèves dont les prénoms contiennent la lettre ""a""."
SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%',"Quels sont les prénoms des élèves qui ont un ""a"" dans leur prénom ?"
"SELECT Fname , Lname FROM FACULTY WHERE sex = ""M"" AND Building = ""NEB""",Trouvez les noms et prénoms des facultés masculines (le sexe est M) qui vivent dans le bâtiment NEB.
"SELECT Fname , Lname FROM FACULTY WHERE sex = ""M"" AND Building = ""NEB""",Quels sont les noms complets des facultés de sexe M et qui habitent l'immeuble NEB ?
"SELECT Room FROM FACULTY WHERE Rank = ""Professor"" AND Building = ""NEB""",Retrouvez les chambres des facultés de rang professeur qui habitent le bâtiment NEB.
"SELECT Room FROM FACULTY WHERE Rank = ""Professor"" AND Building = ""NEB""",Quelles sont les chambres pour les membres de la faculté qui sont professeurs et qui vivent dans le bâtiment NEB ?
"SELECT DName FROM DEPARTMENT WHERE Building = ""Mergenthaler""","Trouvez le nom du département qui se trouve dans le bâtiment ""Mergenthaler""."
"SELECT DName FROM DEPARTMENT WHERE Building = ""Mergenthaler""",Comment s'appelle le département du bâtiment Mergenthaler ?
SELECT * FROM COURSE ORDER BY Credits,Listez toutes les informations sur les cours triées par crédits dans l'ordre croissant.
SELECT * FROM COURSE ORDER BY Credits,"Quelles sont toutes les informations sur les cours, classées par crédits croissants ?"
SELECT CName FROM COURSE ORDER BY Credits,Indiquez le nom du cours des cours triés par crédits.
SELECT CName FROM COURSE ORDER BY Credits,"Quels sont les noms des cours, classés par crédits ?"
SELECT Fname FROM STUDENT ORDER BY Age DESC,Trouvez le prénom des élèves par ordre décroissant d'âge.
SELECT Fname FROM STUDENT ORDER BY Age DESC,"Quels sont les prénoms des élèves, classés par âge du plus grand au plus petit ?"
"SELECT LName FROM STUDENT WHERE Sex = ""F"" ORDER BY Age DESC",Trouvez le nom de famille des étudiantes (le sexe est F) par ordre décroissant d'âge.
"SELECT LName FROM STUDENT WHERE Sex = ""F"" ORDER BY Age DESC","Quels sont les noms de famille des étudiantes, classés par âge décroissant ?"
"SELECT Lname FROM FACULTY WHERE Building = ""Barton"" ORDER BY Lname",Retrouvez les noms de famille des facultés du bâtiment Barton par ordre alphabétique.
"SELECT Lname FROM FACULTY WHERE Building = ""Barton"" ORDER BY Lname","Quels sont les noms de famille des professeurs du bâtiment Barton, triés par nom de famille ?"
"SELECT Fname FROM FACULTY WHERE Rank = ""Professor"" ORDER BY Fname",Retrouvez les prénoms des facultés de rang Professeur par ordre alphabétique.
"SELECT Fname FROM FACULTY WHERE Rank = ""Professor"" ORDER BY Fname","Quels sont les prénoms de tous les professeurs de faculté, classés par prénom ?"
SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1,Trouver le nom du département qui compte le plus grand nombre d'étudiants en mineure ?
SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1,Quel est le nom du département avec le plus d'étudiants en mineure ?
SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO,Trouver le nom du département qui n'a pas d'étudiants en mineur ?
SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO,Quel est le nom du département dans lequel aucun étudiant ne fait de mineure ?
SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1,Trouvez le nom du département qui a le moins de membres.
SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1,Quel est le nom du département avec le moins de membres ?
SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1,Trouvez le rang de la faculté à laquelle appartiennent le moins de facultés.
SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1,Quel est le rang de faculté le moins courant ?
"SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3",Quels sont les noms et prénoms des instructeurs qui enseignent le top 3 des cours ?
"SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3",Quels sont les noms complets des 3 instructeurs qui enseignent le plus de cours ?
SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1,Dans quel bâtiment habite l'instructeur qui enseigne le plus de cours ?
SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1,Donnez le bâtiment dans lequel habite l'instructeur qui enseigne le plus grand nombre de cours.
SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT(*) >= 5,Comment s'appellent les cours qui comptent au moins cinq inscriptions ?
SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT(*) >= 5,Donnez les noms des cours avec au moins cinq inscriptions.
"SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = ""COMPUTER LITERACY""",Trouvez le prénom et le nom de l'instructeur du cours qui a le nom du cours
"SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = ""COMPUTER LITERACY""",Quel est le nom complet de l'instructeur qui a un cours nommé COMPUTER LITERACY ?
"SELECT T2.Dname , T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = ""INTRODUCTION TO COMPUTER SCIENCE""",Retrouvez le nom du département et la salle du cours INITIATION A L'INFORMATIQUE.
"SELECT T2.Dname , T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = ""INTRODUCTION TO COMPUTER SCIENCE""",Quels sont le nom du département et la salle du cours INITIATION À L'INFORMATIQUE ?
"SELECT T3.Fname , T3.LName , T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID",Trouvez les noms et prénoms des étudiants et les notes de toutes les inscriptions.
"SELECT T3.Fname , T3.LName , T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID",Quels sont les noms complets et les notes pour toutes les inscriptions ?
SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T2.gradepoint >= 3.8,"Trouvez les prénoms distincts de tous les étudiants qui ont au moins 3,8 dans un cours."
SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T2.gradepoint >= 3.8,"Quels sont les prénoms distincts des étudiants ayant obtenu une note de 3,8 ou plus dans au moins un cours ?"
"SELECT T1.Fname , T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520",Trouvez les noms complets des facultés qui sont membres du département avec le numéro de département 520.
"SELECT T1.Fname , T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520",Quels sont les noms complets des membres du corps professoral qui font partie du département 520 ?
"SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140",Quels sont les prénoms et noms de famille des étudiants qui sont mineurs dans le département avec DNO 140.
"SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140",Quels sont les noms complets des étudiants en mineure dans le département 140 ?
"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = ""Computer Science""",Trouvez les noms de famille des facultés membres du département d'informatique.
"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = ""Computer Science""",Quels sont les noms de famille des professeurs qui font partie du département d'informatique ?
"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = ""Smith""",Trouvez la note moyenne d'un étudiant dont le nom de famille est Smith.
"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = ""Smith""",Quelle est la note moyenne des étudiants dont le nom de famille est Smith ?
"SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = ""NYC""",Quelle est la note maximale et minimale des étudiants qui vivent à New York ?
"SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = ""NYC""",Donnez les notes maximales et minimales pour les étudiants vivant à New York ?
SELECT CName FROM COURSE WHERE Credits = 3 UNION SELECT CName FROM COURSE WHERE Credits = 1 AND Hours = 4,Trouvez les noms des cours qui ont soit 3 crédits ou 1 crédit mais 4 heures.
SELECT CName FROM COURSE WHERE Credits = 3 UNION SELECT CName FROM COURSE WHERE Credits = 1 AND Hours = 4,"Comment s'appellent les cours qui donnent soit 3 crédits, soit 1 crédit et 4 heures ?"
"SELECT DName FROM DEPARTMENT WHERE Division = ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division = ""EN"" AND Building = ""NEB""",Trouver les noms des départements qui sont soit dans la division AS soit dans la division EN et dans le bâtiment NEB.
"SELECT DName FROM DEPARTMENT WHERE Division = ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division = ""EN"" AND Building = ""NEB""","Quels sont les noms des départements soit dans la division AS, soit dans la division EN et dans le bâtiment NEB ?"
SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN),Trouver le prénom des étudiants qui ne sont inscrits à aucun cours.
SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN),Quels sont les prénoms de tous les étudiants qui ne sont pas inscrits aux cours ?
SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3,Quels sont les identifiants des trois principaux produits qui ont été achetés en plus grande quantité ?
SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3,Donnez les identifiants des trois produits achetés en plus grandes quantités.
"SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",Quels sont l'identifiant et le type de produit du produit le moins cher ?
"SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1",Donnez l'identifiant et le type de produit du produit avec le prix le plus bas.
SELECT count(DISTINCT product_type_code) FROM products,Trouvez le nombre de types de produits différents.
SELECT count(DISTINCT product_type_code) FROM products,Comptez le nombre de types de produits distincts.
SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.customer_id = 10,Renvoyer l'adresse du client 10.
SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.customer_id = 10,Quelle est l'adresse du client avec l'identifiant 10 ?
"SELECT T1.staff_id , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Department Manager""",Quels sont les identifiants et les sexes de tous les membres du personnel dont le titre de poste est directeur de département ?
"SELECT T1.staff_id , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Department Manager""",Renvoyez les identifiants et les sexes du personnel pour tout membre du personnel portant le titre de directeur de service.
"SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code","Pour chaque mode de paiement, indiquez le nombre de clients qui l'utilisent."
"SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code",Combien de clients utilisent chaque mode de paiement ?
SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1,Quel est l'identifiant du produit qui a été commandé le plus souvent ?
SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1,Indiquez l'identifiant du produit qui a été commandé le plus souvent.
"SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1","Quels sont le nom, le numéro de téléphone et l'adresse e-mail du client qui a effectué le plus grand nombre de commandes ?"
"SELECT T1.customer_name , T1.customer_phone , T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1","Renvoyez le nom, le numéro de téléphone et l'adresse e-mail du client avec le plus de commandes."
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code",Quel est le prix moyen de chaque type de produit ?
"SELECT product_type_code , avg(product_price) FROM products GROUP BY product_type_code",Renvoie le prix moyen pour chaque type de produit.
"SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = ""South""",Combien de grands magasins compte la chaîne de magasins South ?
"SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = ""South""",Comptez le nombre de magasins de la chaîne South.
"SELECT T1.staff_name , T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1",Quels sont le nom et la fonction du personnel qui a été affecté en dernier ?
"SELECT T1.staff_name , T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1",Renvoyez le nom et le titre du poste du personnel avec la dernière date attribuée.
"SELECT T2.product_type_code , T2.product_name , T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3","Donnez-moi le type de produit, le nom et le prix de tous les produits fournis par l'identifiant du fournisseur 3."
"SELECT T2.product_type_code , T2.product_name , T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3","Renvoyez le type de produit, le nom et le prix des produits fournis par le fournisseur 3."
"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = ""Pending"" ORDER BY T2.customer_id","Renvoie le nom distinct des clients dont le statut de commande est En attente, dans l'ordre de l'ID client."
"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = ""Pending"" ORDER BY T2.customer_id","Quels sont les noms distincts des clients dont le statut de commande est En attente, triés par numéro de client ?"
"SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = ""New"" INTERSECT SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = ""Pending""",Recherchez le nom et l'adresse des clients qui ont à la fois des commandes nouvelles et en attente.
"SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = ""New"" INTERSECT SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = ""Pending""",Quels sont les noms et adresses des clients qui ont à la fois de nouvelles commandes et des commandes en attente ?
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > (SELECT avg(product_price) FROM products),Renvoie les identifiants de tous les produits qui sont fournis par l'identifiant de fournisseur 2 et qui sont plus chers que le prix moyen de tous les produits.
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > (SELECT avg(product_price) FROM products),"Quels sont les identifiants des produits du fournisseur avec l'identifiant 2, qui sont plus chers que le prix moyen de tous les produits ?"
"SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = ""marketing"" INTERSECT SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = ""managing""",Quels sont l'identifiant et le nom du grand magasin qui possède à la fois un service marketing et un service de gestion ?
"SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = ""marketing"" INTERSECT SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = ""managing""",Quels sont les identifiants et les noms des grands magasins dotés à la fois de services marketing et de gestion ?
SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2,Quels sont les identifiants des deux chaînes de grands magasins avec le plus grand nombre de grands magasins ?
SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2,Renvoie les identifiants des deux chaînes de grands magasins avec le plus grand nombre de grands magasins.
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1,Quel est l'identifiant du département avec le moins d'employés ?
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1,Renvoie l'identifiant du département avec le moins d'affectations de personnel.
"SELECT product_type_code , max(product_price) , min(product_price) FROM products GROUP BY product_type_code","Pour chaque type de produit, retournez le prix maximum et minimum."
"SELECT product_type_code , max(product_price) , min(product_price) FROM products GROUP BY product_type_code",Quels sont les prix maximum et minimum des produits pour chaque type de produit ?
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price) > (SELECT avg(product_price) FROM products),Trouvez le type de produit dont le prix moyen est supérieur au prix moyen de tous les produits.
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price) > (SELECT avg(product_price) FROM products),Quel est le code du type de produit dont le prix moyen est supérieur au prix moyen de tous les produits ?
"SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",Trouvez l'identifiant et le nom du personnel qui a été affecté pour la période la plus courte.
"SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",Quel est l'identifiant et le nom du personnel qui a été affecté le moins longtemps ?
"SELECT product_name , product_id FROM products WHERE product_price BETWEEN 600 AND 700",Renvoie les noms et identifiants de tous les produits dont le prix est compris entre 600 et 700.
"SELECT product_name , product_id FROM products WHERE product_price BETWEEN 600 AND 700",Quels sont les noms et identifiants des produits coûtant entre 600 et 700 ?
"SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code = ""Cancelled"")",Trouvez les identifiants de tous les clients distincts qui ont passé commande après certaines commandes annulées.
"SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code = ""Cancelled"")",Quels sont les identifiants distincts des clients qui ont passé une commande après une commande annulée ?
SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to < (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff'),Quel est l'identifiant du personnel qui a eu une affectation de département du personnel avant tout personnel de bureau ?
SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to < (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff'),Renvoie l'identifiant du personnel dont l'affectation au département du personnel était antérieure à celle de tout personnel de bureau.
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%""",Quels sont les noms et identifiants des clients dont l'adresse contient TN ?
"SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE ""%TN%""",Renvoie les noms et identifiants des clients qui ont TN dans leur adresse.
"SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""",Renvoyez le nom et le sexe du personnel qui a été affecté en 2016.
"SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""",Quels sont les noms et les sexes des membres du personnel qui ont été affectés en 2016 ?
SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*) > 1,Indiquez le nom du personnel qui a été affecté à plusieurs tâches.
SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*) > 1,Quels sont les noms des membres du personnel qui ont été affectés à plusieurs tâches ?
"SELECT T1.supplier_name , T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details",Inscrivez le nom et le numéro de téléphone de tous les fournisseurs dans l'ordre alphabétique de leurs adresses.
"SELECT T1.supplier_name , T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details","Quels sont les noms et numéros de téléphone de tous les fournisseurs, classés par ordre alphabétique de leurs destinataires ?"
SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers,Quels sont les numéros de téléphone de tous les clients et fournisseurs.
SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers,Renvoyez les numéros de téléphone de tous les clients et fournisseurs.
SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*) > 3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased) > 80000,Renvoie les identifiants de tous les produits qui ont été commandés plus de trois fois ou fournis à plus de 80 000.
SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*) > 3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased) > 80000,Quels sont les identifiants de tous les produits qui ont été commandés plus de 3 fois ou dont le montant cumulé acheté est supérieur à 80 000 ?
"SELECT product_id , product_name FROM products WHERE product_price < 600 OR product_price > 900",Quels sont l'identifiant et le nom des produits dont le prix est inférieur à 600 ou supérieur à 900 ?
"SELECT product_id , product_name FROM products WHERE product_price < 600 OR product_price > 900",Donnez les identifiants et les noms des produits dont le prix est inférieur à 600 ou supérieur à 900.
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased) > 50000 OR avg(total_amount_purchased) < 30000,Trouvez l'identifiant des fournisseurs dont le montant moyen acheté pour chaque produit est supérieur à 50000 ou inférieur à 30000.
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased) > 50000 OR avg(total_amount_purchased) < 30000,Quels sont les identifiants des fournisseurs dont la quantité moyenne achetée est supérieure à 50 000 ou inférieure à 30 000 ?
"SELECT avg(total_amount_purchased) , avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",Quels sont le montant moyen acheté et la valeur achetée pour le fournisseur qui fournit le plus de produits.
"SELECT avg(total_amount_purchased) , avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",Renvoie le montant total moyen acheté et la valeur totale achetée pour le fournisseur qui fournit le plus grand nombre de produits.
"SELECT max(customer_code) , min(customer_code) FROM Customers",Quels sont les codes clients les plus grands et les plus petits ?
"SELECT max(customer_code) , min(customer_code) FROM Customers",Renvoyer les codes client maximum et minimum.
"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id JOIN products AS T4 ON T3.product_id = T4.product_id WHERE T4.product_name = ""keyboard""",Dressez la liste des noms de tous les clients distincts qui ont acheté un clavier.
"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id JOIN products AS T4 ON T3.product_id = T4.product_id WHERE T4.product_name = ""keyboard""",Quels sont les noms distincts des clients qui ont acheté un clavier ?
"SELECT DISTINCT T1.supplier_name , T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id = T2.supplier_id JOIN products AS T3 ON T2.product_id = T3.product_id WHERE T3.product_name = ""red jeans""",Dressez la liste des noms et numéros de téléphone de tous les fournisseurs distincts qui fournissent des jeans rouges.
"SELECT DISTINCT T1.supplier_name , T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id = T2.supplier_id JOIN products AS T3 ON T2.product_id = T3.product_id WHERE T3.product_name = ""red jeans""",Quels sont les noms et numéros de téléphone distincts des fournisseurs qui ont des jeans rouges ?
"SELECT max(product_price) , min(product_price) , product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code","Quels sont les prix les plus élevés et les plus bas des produits, regroupés et classés par ordre alphabétique par type de produit ?"
"SELECT max(product_price) , min(product_price) , product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code","Donnez les prix maximum et minimum des produits pour chaque type de produit, regroupés et classés par type de produit."
"SELECT order_id , customer_id FROM customer_orders WHERE order_status_code = ""Cancelled"" ORDER BY order_date","Indiquez l'identifiant de la commande, l'identifiant du client pour les commandes en statut Annulé, classés par leurs dates de commande."
"SELECT order_id , customer_id FROM customer_orders WHERE order_status_code = ""Cancelled"" ORDER BY order_date","Quels sont les identifiants de commande et les identifiants client pour les commandes qui ont été annulées, triées par leurs dates de commande ?"
SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id JOIN products AS T3 ON T2.product_id = T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id) >= 2,Trouvez les noms des produits qui ont été achetés par au moins deux clients distincts.
SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id JOIN products AS T3 ON T2.product_id = T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id) >= 2,Quels sont les noms distincts des produits achetés par au moins deux clients différents ?
SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id) >= 3,Trouvez les noms des clients qui ont acheté au moins trois produits distincts.
SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id) >= 3,Quels sont les noms distincts des clients qui ont acheté au moins trois produits différents ?
"SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Sales Person"" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Clerical Staff""","Trouvez le nom et le sexe du personnel qui a été affecté au poste de vendeur, mais jamais de personnel de bureau."
"SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Sales Person"" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = ""Clerical Staff""","Quels sont les noms et les sexes des membres du personnel qui ont occupé le titre de vendeur, mais jamais de personnel de bureau ?"
"SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""",Trouvez l'identifiant et le nom des clients dont l'adresse contient l'état WY et n'utilisez pas de carte de crédit pour le paiement.
"SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""",Quels sont les identifiants et noms des clients dont l'adresse contient WY et qui n'utilisent pas de carte de crédit pour le paiement ?
SELECT avg(product_price) FROM products WHERE product_type_code = 'Clothes',Trouvez le prix moyen de tous les vêtements du produit.
SELECT avg(product_price) FROM products WHERE product_type_code = 'Clothes',Quel est le prix moyen des vêtements ?
SELECT product_name FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1,Trouvez le nom du produit matériel le plus cher.
SELECT product_name FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1,Quel est le nom du produit matériel dont le prix est le plus élevé ?
SELECT Description FROM aircraft,Énumérez la description de tous les aéronefs.
SELECT Description FROM aircraft,Quelles sont les descriptions des avions ?
SELECT avg(International_Passengers) FROM airport,Quel est le nombre moyen de passagers internationaux de tous les aéroports ?
SELECT avg(International_Passengers) FROM airport,Quel est le nombre moyen de passagers internationaux pour un aéroport ?
"SELECT International_Passengers , Domestic_Passengers FROM airport WHERE Airport_Name = ""London Heathrow""","Quel est le nombre de passagers internationaux et nationaux de l'aéroport de Londres ""Heathrow"" ?"
"SELECT International_Passengers , Domestic_Passengers FROM airport WHERE Airport_Name = ""London Heathrow""",Combien y a-t-il de passagers internationaux et nationaux à l'aéroport de Londres Heathrow ?
"SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""","Quel est le nombre total de passagers domestiques des aéroports qui contiennent le mot ""Londres""."
"SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""",Quel est le nombre total de passagers domestiques dans tous les aéroports de Londres ?
"SELECT max(Transit_Passengers) , min(Transit_Passengers) FROM airport",Quel est le nombre maximum et minimum de passagers en transit de tous les aéroports.
"SELECT max(Transit_Passengers) , min(Transit_Passengers) FROM airport",Quel est le nombre maximum et minimum de passagers en transit pour tous les aéroports ?
SELECT Name FROM pilot WHERE Age >= 25,Comment s'appellent les pilotes âgés de 25 ans ou plus ?
SELECT Name FROM pilot WHERE Age >= 25,quel est le nom de chaque pilote âgé d'au moins 25 ans ?
SELECT Name FROM pilot ORDER BY Name ASC,Dressez la liste de tous les noms de pilotes par ordre alphabétique croissant.
SELECT Name FROM pilot ORDER BY Name ASC,Quels sont les noms des pilotes par ordre alphabétique ?
SELECT Name FROM pilot WHERE Age <= 30 ORDER BY Name DESC,Dressez la liste des noms de tous les pilotes âgés de 30 ans ou moins par ordre alphabétique décroissant.
SELECT Name FROM pilot WHERE Age <= 30 ORDER BY Name DESC,Quels sont les noms de tous les pilotes de 30 ans ou jeunes par ordre alphabétique décroissant ?
"SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = ""London Gatwick""","Veuillez indiquer les noms des aéronefs associés à l'aéroport portant le nom ""London Gatwick""."
"SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = ""London Gatwick""",Quels sont les noms de tous les avions associés à l'aéroport de Londres Gatwick ?
"SELECT T1.Aircraft , T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Total_Passengers > 10000000",Veuillez indiquer les noms et les descriptions des aéronefs associés aux aéroports qui ont un nombre total de passagers supérieur à 1 000 000.
"SELECT T1.Aircraft , T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Total_Passengers > 10000000",Quels sont les noms et les descriptions des aéronefs associés à un aéroport qui compte plus de 1 000 000 de passagers au total ?
"SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = ""Robinson R-22""","Quel est le nombre total moyen de passagers des aéroports associés à l'avion ""Robinson R-22"" ?"
"SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = ""Robinson R-22""","Quel est le nombre total moyen de passagers pour tous les aéroports visités par l'avion ""Robinson R-22"" ?"
"SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",Veuillez indiquer l'emplacement et le nom de l'avion gagnant.
"SELECT T2.Location , T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",Quel est l'emplacement et le nom de l'avion gagnant ?
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1,Indiquez le nom de l'avion qui a été nommé avion gagnant le plus de fois.
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1,Quel est le nom de l'avion qui a le plus remporté de prix ?
"SELECT T1.Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",Énumérez les noms des avions et le nombre de fois qu'ils ont remporté des matchs.
"SELECT T1.Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft","Pour chaque avion qui a remporté un prix, quel est son nom et combien de fois a-t-il gagné ?"
SELECT Name FROM pilot ORDER BY Age DESC,Dressez la liste des noms de tous les pilotes par ordre décroissant d'âge.
SELECT Name FROM pilot ORDER BY Age DESC,Quels sont les noms de tous les pilotes répertoriés par âge décroissant ?
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*) >= 2,Énumérez les noms des avions et qui ont remporté des matchs au moins deux fois.
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*) >= 2,Quels sont les noms de tous les avions qui ont remporté un match au moins deux fois ?
SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH),Listez les noms d'avions et qui n'ont remporté aucun match.
SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH),Quels sont les noms de tous les avions qui n'ont jamais remporté de match ?
"SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = ""London Heathrow"" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = ""London Gatwick""","Afficher les noms des avions associés à la fois à un aéroport nommé ""London Heathrow"" et à un aéroport nommé ""London Gatwick"""
"SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = ""London Heathrow"" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = ""London Gatwick""",Quels sont les noms de tous les avions associés aux aéroports de Londres Heathrow et de Gatwick ?
SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1,Afficher toutes les informations sur l'aéroport qui a le plus grand nombre de passagers internationaux.
SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1,Quelles sont toutes les informations sur l'aéroport avec le plus grand nombre de passagers internationaux ?
"SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1",trouver le nom et l'âge du pilote qui a gagné le plus de fois parmi les pilotes de moins de 30 ans.
"SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1",Quel est le nom et l'âge du pilote de moins de 30 ans qui a gagné le plus de fois ?
"SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot ORDER BY t1.age LIMIT 1",quel est le nom et l'âge du plus jeune pilote gagnant ?
"SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot ORDER BY t1.age LIMIT 1",Quel âge a le plus jeune pilote vainqueur et comment s'appelle-t-il ?
SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot FROM MATCH WHERE country = 'Australia'),trouver le nom des pilotes qui n'ont pas remporté les matchs organisés dans le pays de l'Australie.
SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot FROM MATCH WHERE country = 'Australia'),Comment s'appellent les pilotes qui n'ont remporté aucun match en Australie ?
"SELECT T1.property_id , count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id",Combien d'habitants chaque propriété compte-t-elle ? Indiquez l'identifiant de la propriété et le nombre de résidents.
SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party',Quels sont les types de services distincts fournis par l'organisation qui a le détail «Denesik and Sons Party»?
"SELECT T1.resident_id , T1.other_details , count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC","Combien de services chaque résident a-t-il demandés ? Indiquez l'identifiant du résident, les détails et le nombre dans l'ordre décroissant du nombre."
"SELECT T1.service_id , T1.service_details , count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1","Quel est le nombre maximum qu'un certain service est fourni ? Indiquez l'identifiant du service, les détails et le numéro."
"SELECT T1.thing_id , T1.type_of_Thing_Code , T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id","Indiquez l'identifiant et le type de chaque chose, ainsi que les détails de l'organisation qui en est propriétaire."
"SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 3",Quels sont l'identifiant et les coordonnées des clients qui ont au moins 3 événements ?
"SELECT T2.date_moved_in , T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id","Quelle est la date d'emménagement de chaque client, ainsi que l'identifiant et les détails du client correspondant ?"
"SELECT T1.Customer_Event_ID , T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3",Quels événements ont le nombre de notes entre un et trois ? Indiquez l'ID d'événement et l'ID de propriété.
"SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21'","Quels sont l'identifiant et le type distincts de la chose qui a le statut ""Fermer"" ou qui a un enregistrement de statut avant la date ""2017-06-19 02:59:21"""
SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.service_details = 'Unsatisfied',"Dans combien d'emplacements distincts les choses avec le détail de service ""Insatisfait"" ont-elles été localisées ?"
SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things,Combien y a-t-il de codes d'état différents pour les choses ?
SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations,Quelles organisations ne sont pas une organisation mère d'autres ? Indiquez l'identifiant de l'organisation.
SELECT max(date_moved_in) FROM Residents,Quel est le dernier jour où un résident a emménagé ?
SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%',Quels sont les détails du résident contenant la sous-chaîne « Miss » ?
"SELECT customer_event_id , date_moved_in , property_id FROM customer_events","Indiquez l'identifiant de l'événement client, la date d'emménagement et l'identifiant de propriété correspondants."
SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events ),Combien de clients n'ont pas eu d'événement ?
SELECT DISTINCT date_moved_in FROM residents,Quelles sont les différentes dates de déménagement des résidents ?
SELECT LOCATION FROM school ORDER BY Enrollment ASC,Énumérez les emplacements des écoles par ordre croissant d'inscription.
SELECT LOCATION FROM school ORDER BY Enrollment ASC,Quelle est la liste des emplacements scolaires triés par ordre croissant d'inscription scolaire ?
SELECT LOCATION FROM school ORDER BY Founded DESC,Dressez la liste des emplacements des écoles par ordre décroissant de l'année de fondation.
SELECT LOCATION FROM school ORDER BY Founded DESC,Quelle est la liste des emplacements scolaires triés par ordre décroissant de l'année de fondation de l'école ?
"SELECT Enrollment FROM school WHERE Denomination != ""Catholic""",Quels sont les effectifs des écoles dont la dénomination n'est pas « catholique » ?
"SELECT Enrollment FROM school WHERE Denomination != ""Catholic""",Dressez la liste des inscriptions pour chaque école qui n'a pas «catholique» comme dénomination.
SELECT avg(Enrollment) FROM school,Quel est l'effectif moyen des écoles ?
SELECT avg(Enrollment) FROM school,Prendre la moyenne des effectifs scolaires.
SELECT Team FROM player ORDER BY Team ASC,"Quelles sont les équipes de joueurs, classées par ordre alphabétique croissant ?"
SELECT Team FROM player ORDER BY Team ASC,Trouvez l'équipe de chaque joueur et classez-les par ordre alphabétique croissant.
SELECT Team FROM player ORDER BY Age DESC LIMIT 1,Trouvez l'équipe du joueur le plus âgé.
SELECT Team FROM player ORDER BY Age DESC LIMIT 1,Quelle équipe a le joueur le plus âgé ?
SELECT Team FROM player ORDER BY Age DESC LIMIT 5,Listez les équipes des joueurs avec les 5 plus grands âges.
SELECT Team FROM player ORDER BY Age DESC LIMIT 5,Quelles sont les équipes qui ont les 5 joueurs les plus âgés ?
"SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID","Pour chaque joueur, indiquez l'équipe et l'emplacement de l'école à laquelle ils appartiennent."
"SELECT T1.Team , T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",Quelle est l'équipe et l'emplacement de l'école à laquelle chaque joueur appartient ?
SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1,Afficher les emplacements des écoles qui ont plus d'un joueur.
SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1,Quelles écoles ont plus d'un joueur ? Donnez-moi les emplacements des écoles.
SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1,Indiquez la dénomination de l'école qui compte le plus de joueurs.
SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1,Quelle est la dénomination de l'école à laquelle appartiennent le plus de joueurs ?
"SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",Afficher les emplacements et les surnoms des écoles.
"SELECT T1.Location , T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",Quels sont l'emplacement et le surnom de chaque école ?
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination",Veuillez indiquer les différentes confessions et le nombre d'écoles correspondant.
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination","Pour chaque dénomination, retournez la dénomination et le nombre d'écoles avec cette dénomination."
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC",Veuillez indiquer les différentes dénominations et le nombre correspondant d'écoles par ordre décroissant.
"SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC",Ordonner les dénominations par ordre décroissant du nombre d'écoles avec la dénomination. Retournez chaque dénomination avec le nombre d'écoles.
SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1,Indiquez la couleur de l'école de l'école qui a le plus grand nombre d'inscriptions.
SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1,Quelle est la couleur de l'école avec le plus grand nombre d'inscriptions ?
SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player),Dressez la liste des emplacements des écoles qui n'ont pas de joueur.
SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player),Quelles écoles n'ont pas de joueur ? Donnez-moi les emplacements des écoles.
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900,Afficher la dénomination commune aux écoles fondées avant 1890 et aux écoles fondées après 1900
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900,Quelles sont les dénominations utilisées par les écoles fondées avant 1890 et les écoles fondées après 1900 ?
"SELECT Nickname FROM school_details WHERE Division != ""Division 1""",Afficher les surnoms des écoles qui ne sont pas en division 1.
"SELECT Nickname FROM school_details WHERE Division != ""Division 1""",Quels sont les surnoms des écoles dont la division n'est pas 1 ?
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1,Indiquez la dénomination partagée par plus d'une école.
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1,Quelle est la dénomination de plus d'une école ?
SELECT DISTINCT District_name FROM district ORDER BY city_area DESC,Retrouvez tous les noms de quartiers distincts classés par zone urbaine en ordre décroissant.
SELECT DISTINCT District_name FROM district ORDER BY city_area DESC,Quels sont les différents noms de quartier par ordre décroissant de superficie de la ville ?
SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*) > 3,Trouvez la liste des tailles de page qui ont plus de 3 produits répertoriés
SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*) > 3,Quelle est la taille de page maximale pour tout ce qui contient plus de 3 produits répertoriés ?
"SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",Trouver le nom et la population du district dont la population est comprise entre 200 000 et 2 000 000
"SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",Quels sont les noms des quartiers et les populations des villes pour tous les quartiers qui comptent entre 200 000 et 2 000 000 d'habitants ?
SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000,Trouvez le nom de tous les districts avec une superficie de ville supérieure à 10 ou une population supérieure à 100 000
SELECT district_name FROM district WHERE city_area > 10 OR City_Population > 100000,Quels sont les noms de tous les quartiers dont la superficie de la ville est supérieure à 10 ou qui comptent plus de 100 000 habitants ?
SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1,Quel quartier a la plus grande population ?
SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1,Comment s'appelle le quartier qui compte le plus d'habitants ?
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1,Quel quartier a le moins de superficie ?
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1,Quel est le nom du quartier avec la plus petite superficie ?
SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3,Trouvez la population totale des 3 premiers districts avec la plus grande superficie.
SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3,Quel est le nombre total d'habitants pour les quartiers avec les 3 plus grandes superficies ?
"SELECT TYPE , count(*) FROM store GROUP BY TYPE",Trouvez tous les types de magasins et leur nombre.
"SELECT TYPE , count(*) FROM store GROUP BY TYPE","Pour chaque type de magasin, combien y en a-t-il ?"
"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = ""Khanewal District""",Trouvez les noms de tous les magasins du district de Khanewal.
"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = ""Khanewal District""",Quels sont les noms de tous les magasins situés dans le district de Khanewal ?
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id WHERE district_id = (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1),Trouvez tous les magasins du quartier le plus peuplé.
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id WHERE district_id = (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1),Quels sont les noms de tous les magasins du district le plus peuplé ?
"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.store_name = ""Blackville""","Dans quelle ville se trouve le siège social du magasin ""Blackville"" ?"
"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.store_name = ""Blackville""",Dans quelle ville se trouve le siège social du magasin Blackville ?
"SELECT t3.headquartered_city , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",Trouvez le nombre de magasins dans chaque ville.
"SELECT t3.headquartered_city , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",Combien de magasins ont leur siège social dans chaque ville ?
SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1,Trouvez la ville avec le plus grand nombre de magasins.
SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1,Quelle est la ville avec le plus grand nombre de magasins phares ?
SELECT avg(pages_per_minute_color) FROM product,Quelle est la moyenne de pages par minute couleur ?
SELECT avg(pages_per_minute_color) FROM product,Quel est le nombre moyen de pages couleur par minute ?
"SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id = t2.product_id JOIN store AS t3 ON t2.store_id = t3.store_id WHERE t3.store_name = ""Miramichi""","Quels produits sont disponibles au magasin nommé ""Miramichi"" ?"
"SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id = t2.product_id JOIN store AS t3 ON t2.store_id = t3.store_id WHERE t3.store_name = ""Miramichi""",Quels produits sont vendus au magasin nommé Miramichi?
"SELECT product FROM product WHERE max_page_size = ""A4"" AND pages_per_minute_color < 5","Trouvez des produits avec une taille de page maximale de ""A4"" et des pages par minute couleur inférieures à 5."
"SELECT product FROM product WHERE max_page_size = ""A4"" AND pages_per_minute_color < 5",Quels sont les produits avec la taille de page maximale A4 qui ont également une couleur pages par minute inférieure à 5 ?
"SELECT product FROM product WHERE max_page_size = ""A4"" OR pages_per_minute_color < 5","Trouvez des produits avec une taille de page maximale de ""A4"" ou des pages par minute couleur inférieures à 5."
"SELECT product FROM product WHERE max_page_size = ""A4"" OR pages_per_minute_color < 5",Quels sont les produits avec une taille de page maximale égale à A4 ou une page par minute couleur inférieure à 5 ?
"SELECT product FROM product WHERE product LIKE ""%Scanner%""","Retrouvez tous les produits dont le nom contient le mot ""Scanner""."
"SELECT product FROM product WHERE product LIKE ""%Scanner%""","Quels sont tous les produits dont le nom inclut la sous-chaîne ""Scanner"" ?"
SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1,Trouvez la taille de page maximale la plus importante parmi tous les produits.
SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1,Quelle est la taille de page maximale la plus courante ?
SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1),Recherchez le nom des produits qui n'utilisent pas la taille de page maximale la plus fréquemment utilisée.
SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1),Quels sont les noms de tous les produits qui ne correspondent pas à la taille de page maximale la plus fréquemment utilisée ?
SELECT sum(city_population) FROM district WHERE city_area > (SELECT avg(city_area) FROM district),Trouvez la population totale des quartiers dont la superficie est supérieure à la superficie moyenne de la ville.
SELECT sum(city_population) FROM district WHERE city_area > (SELECT avg(city_area) FROM district),Quelle est la population totale de tous les quartiers dont la superficie est supérieure à la superficie moyenne de la ville ?
"SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = ""City Mall"" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = ""Village Store""",Trouvez les noms des quartiers où se trouvent à la fois des magasins de type centre commercial et village.
"SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = ""City Mall"" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = ""Village Store""",Quels sont les noms des quartiers qui ont à la fois des boutiques de style centre commercial et des magasins de village ?
SELECT sum(enr) FROM College,Quel est le nombre total d'inscriptions de tous les collèges ?
SELECT sum(enr) FROM College,Combien d'étudiants sont inscrits au collège?
SELECT avg(enr) FROM College,Quel est le nombre moyen d'inscriptions ?
SELECT avg(enr) FROM College,"Combien d'étudiants, en moyenne, chaque collège compte-t-il inscrits?"
SELECT count(*) FROM College,Combien de collèges au total ?
SELECT count(*) FROM College,Combien y a-t-il de collèges différents ?
SELECT count(*) FROM Player WHERE HS > 1000,Combien de joueurs ont plus de 1000 heures d'entraînement ?
SELECT count(*) FROM Player WHERE HS > 1000,Combien de joueurs différents se sont entraînés pendant plus de 1000 heures ?
SELECT count(*) FROM College WHERE enr > 15000,Combien de collèges ont plus de 15 000 étudiants ?
SELECT count(*) FROM College WHERE enr > 15000,Quel est le nombre de collèges avec une population étudiante supérieure à 15 000 ?
SELECT avg(HS) FROM Player,Quelle est la moyenne d'heures d'entraînement de tous les joueurs ?
SELECT avg(HS) FROM Player,Combien d'heures les joueurs s'entraînent-ils en moyenne ?
"SELECT pName , HS FROM Player WHERE HS < 1500",Trouvez le nom et les heures d'entraînement des joueurs dont les heures sont inférieures à 1500.
"SELECT pName , HS FROM Player WHERE HS < 1500",Quels sont les noms et le nombre d'heures passées à s'entraîner pour chaque joueur qui s'entraîne moins de 1500 heures ?
SELECT count(DISTINCT cName) FROM tryout,Combien de collèges différents participent au test d'essai ?
SELECT count(DISTINCT cName) FROM tryout,Combien de collèges différents étaient représentés lors des essais ?
SELECT count(DISTINCT pPos) FROM tryout,Quels sont les types uniques de positions de joueur dans l'essai ?
SELECT count(DISTINCT pPos) FROM tryout,Quels sont les différents types de postes de joueurs ?
SELECT count(*) FROM tryout WHERE decision = 'yes',Combien d'étudiants ont été acceptés après l'essai ?
SELECT count(*) FROM tryout WHERE decision = 'yes',Combien d'étudiants ont reçu un oui aux essais ?
SELECT count(*) FROM tryout WHERE pPos = 'goalie',Combien d'élèves jouent le rôle de gardien de but?
SELECT count(*) FROM tryout WHERE pPos = 'goalie',Quel est le nombre d'élèves jouant comme gardien de but?
"SELECT avg(HS) , max(HS) , min(HS) FROM Player","Trouvez les heures d'entraînement maximales, moyennes et minimales de tous les joueurs."
"SELECT avg(HS) , max(HS) , min(HS) FROM Player","Quelle est la moyenne, le maximum et le minimum du nombre d'heures passées en formation ?"
SELECT avg(enr) FROM College WHERE state = 'FL',Quel est le nombre moyen d'inscriptions dans les collèges de l'État FL ?
SELECT avg(enr) FROM College WHERE state = 'FL',Quel est le nombre moyen d'étudiants inscrits dans les collèges de Floride ?
SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500,Comment s'appellent les joueurs dont les heures d'entraînement se situent entre 500 et 1500 ?
SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500,Comment s'appellent les joueurs qui s'entraînent entre 500 et 1500 heures ?
SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%',Trouvez les joueurs dont les noms contiennent la lettre 'a'.
SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%',Quels sont les joueurs dont le nom contient la lettre a ?
"SELECT cName , enr FROM College WHERE enr > 10000 AND state = ""LA""","Trouvez le nom, l'inscription des collèges dont la taille est supérieure à 10000 et l'emplacement est dans l'état de Los Angeles."
"SELECT cName , enr FROM College WHERE enr > 10000 AND state = ""LA""",Quels sont les noms et les numéros d'inscription des collèges qui comptent plus de 10 000 inscrits et sont situés en Louisiane ?
SELECT * FROM College ORDER BY enr,Répertorier toutes les informations sur le collège triées par numéro d'inscription dans l'ordre croissant.
SELECT * FROM College ORDER BY enr,Quelles informations avez-vous sur les collèges triées par nombre croissant d'inscriptions ?
SELECT cName FROM College WHERE enr > 18000 ORDER BY cName,"Indiquez le nom des collèges dont l'inscription est supérieure à 18 000, triés par nom de collège."
SELECT cName FROM College WHERE enr > 18000 ORDER BY cName,Quel est le nom de chaque collège par ordre alphabétique qui compte plus de 18 000 étudiants inscrits ?
SELECT pName FROM Player WHERE yCard = 'yes' ORDER BY HS DESC,Trouvez le nom des joueurs dont la carte est oui dans l'ordre décroissant des heures d'entraînement.
SELECT pName FROM Player WHERE yCard = 'yes' ORDER BY HS DESC,Comment s'appellent les joueurs qui ont reçu un carton dans l'ordre décroissant des heures d'entraînement ?
SELECT DISTINCT cName FROM tryout ORDER BY cName,Trouvez le nom des différents collèges impliqués dans l'essai par ordre alphabétique.
SELECT DISTINCT cName FROM tryout ORDER BY cName,Quels sont les différents noms des collèges impliqués dans l'essai par ordre alphabétique ?
SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1,Quelle position est la plus populaire parmi les joueurs de l'essai ?
SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1,Quelle était la position la plus populaire lors des essais ?
"SELECT count(*) , cName FROM tryout GROUP BY cName ORDER BY count(*) DESC",Trouvez le nombre d'étudiants qui participent à l'essai pour chaque collège classé par nombre décroissant.
"SELECT count(*) , cName FROM tryout GROUP BY cName ORDER BY count(*) DESC",Combien d'étudiants ont participé aux essais pour chaque collège par décompte décroissant ?
"SELECT min(T2.HS) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos",Quel est le nombre d'heures minimum des élèves jouant dans différentes positions ?
"SELECT min(T2.HS) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos","Pour chaque poste, quel est le temps minimum que les étudiants passent à pratiquer ?"
SELECT cName FROM college ORDER BY enr DESC LIMIT 3,Quels sont les noms des écoles avec les 3 plus grandes tailles ?
SELECT cName FROM college ORDER BY enr DESC LIMIT 3,Quels sont les noms des écoles avec les 3 classes les plus grandes ?
"SELECT cName , state , min(enr) FROM college GROUP BY state",Quel est le nom de l'école qui a le plus petit nombre d'inscriptions dans chaque État ?
"SELECT cName , state , min(enr) FROM college GROUP BY state",Quel est le nom de l'école avec le plus petit nombre d'inscriptions par État ?
SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName,Trouvez les États où ont des étudiants à l'essai.
SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName,Quels sont les différents états que les élèves essaient ?
SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes',Trouvez les États où certains étudiants sont à l'essai et leurs décisions sont oui.
SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes',Quels sont les différents états que les élèves ont essayés avec succès ?
"SELECT T1.pName , T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'",Trouvez le nom et le collège des étudiants dont les décisions sont oui lors de l'essai.
"SELECT T1.pName , T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'","Quels sont les noms de tous les joueurs qui ont reçu un oui lors des essais, et aussi quels sont les noms de leurs collèges ?"
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID ORDER BY T1.pName,Trouvez le nom de tous les élèves qui ont participé à l'essai triés par ordre alphabétique.
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID ORDER BY T1.pName,Quels sont les noms de tous les élèves qui ont essayé par ordre alphabétique ?
"SELECT T1.pName , T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'",Trouvez le nom et les heures des étudiants dont la décision d'essai est oui.
"SELECT T1.pName , T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'",Quels sont les noms et les heures passées à pratiquer de chaque étudiant qui a reçu un oui aux essais ?
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker',Trouvez les états des collèges qui ont des étudiants à l'essai qui ont joué en position d'attaquant.
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker',Quels sont les états des collèges où fréquentent les étudiants qui ont essayé le poste d'attaquant?
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker',Trouvez les noms des étudiants qui occupent le poste d'attaquant et qui ont obtenu une décision d'essai oui.
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker',Quels sont les noms de tous les étudiants qui ont essayé avec succès le poste d'attaquant ?
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles',Trouvez l'état du collège auquel le joueur Charles assiste.
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles',Dans quel état se trouve le collège fréquenté par Charles ?
"SELECT avg(T1.HS) , max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'",Trouvez les heures moyennes et maximales pour les étudiants dont la décision d'essai est oui.
"SELECT avg(T1.HS) , max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'",Quel est le nombre moyen et maximum d'heures d'étudiants qui ont fait pratiquer l'équipe ?
SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no',Trouvez le nombre moyen d'heures pour les étudiants dont la décision d'essai est non.
SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no',Quel est le nombre moyen d'heures passées à pratiquer pour les étudiants qui ont été rejetés ?
"SELECT max(T1.HS) , pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 1000 GROUP BY T2.pPos",Quel est le nombre maximum d'heures de formation pour les étudiants dont le nombre d'heures de formation est supérieur à 1000 dans différents postes ?
"SELECT max(T1.HS) , pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 1000 GROUP BY T2.pPos","Pour chaque poste, quel est le nombre d'heures maximum pour les étudiants ayant passé plus de 1000 heures de formation ?"
SELECT T1.cName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T2.pName LIKE 'D%',Dans quels collèges les joueurs à l'essai dont le nom commence par la lettre D vont-ils ?
SELECT T1.cName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T2.pName LIKE 'D%',Dans quels collèges chaque joueur dont le nom commence par la lettre D qui a essayé va-t-il?
SELECT cName FROM tryout WHERE decision = 'yes' AND pPos = 'goalie',Quel collège a un étudiant qui est gardien de but et qui a réussi l'essai.
SELECT cName FROM tryout WHERE decision = 'yes' AND pPos = 'goalie',Quel collège a un étudiant qui a réussi à faire partie de l'équipe dans le rôle d'un gardien de but?
SELECT T2.pName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T1.cName = (SELECT cName FROM college ORDER BY enr DESC LIMIT 1),Trouvez le nom des joueurs d'essai qui sont du collège avec la plus grande taille.
SELECT T2.pName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T1.cName = (SELECT cName FROM college ORDER BY enr DESC LIMIT 1),Quels sont les noms de tous les participants à l'essai qui appartiennent au plus grand collège ?
"SELECT DISTINCT T1.state , T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",Quel est l'état et l'inscription des collèges où ont des étudiants qui ont été acceptés dans la décision d'essai.
"SELECT DISTINCT T1.state , T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'","Combien d'étudiants sont inscrits dans des collèges qui ont accepté des étudiants lors des essais, et dans quels États se trouvent ces collèges ?"
"SELECT cName FROM College WHERE enr < 13000 AND state = ""AZ"" UNION SELECT cName FROM College WHERE enr > 15000 AND state = ""LA""",Trouvez les noms des collèges à Los Angeles avec une taille supérieure à 15000 ou dans l'état AZ avec moins de 13000 inscriptions.
"SELECT cName FROM College WHERE enr < 13000 AND state = ""AZ"" UNION SELECT cName FROM College WHERE enr > 15000 AND state = ""LA""",Quels sont les noms des collèges de LA qui comptent plus de 15 000 étudiants et des collèges de l'AZ avec moins de 13 000 étudiants ?
SELECT cName FROM tryout WHERE pPos = 'goalie' INTERSECT SELECT cName FROM tryout WHERE pPos = 'mid',Trouvez les noms des écoles qui ont des élèves qui jouent en position de gardien de but et en position médiane.
SELECT cName FROM tryout WHERE pPos = 'goalie' INTERSECT SELECT cName FROM tryout WHERE pPos = 'mid',Quels sont les noms de toutes les écoles qui ont des élèves qui essaient pour la position de but et de «milieu» de terrain.
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid',Trouvez les noms des États qui ont des étudiants qui jouent dans des postes de gardien de but et intermédiaires.
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid',Quels sont les noms des États qui ont des étudiants qui jouent aux postes de gardien de but et de milieu de terrain ?
SELECT COUNT(*) FROM (SELECT cName FROM tryout WHERE pPos = 'goalie' INTERSECT SELECT cName FROM tryout WHERE pPos = 'mid'),Combien d'écoles ont des élèves qui jouent en position de gardien de but et en position médiane.
SELECT COUNT(*) FROM (SELECT cName FROM tryout WHERE pPos = 'goalie' INTERSECT SELECT cName FROM tryout WHERE pPos = 'mid'),Combien d'écoles ont des élèves qui jouent aux postes de gardien de but et de milieu de terrain?
SELECT cName FROM tryout WHERE pPos = 'mid' EXCEPT SELECT cName FROM tryout WHERE pPos = 'goalie',Trouvez les noms des écoles qui ont des joueurs en position médiane mais pas en position de gardien de but.
SELECT cName FROM tryout WHERE pPos = 'mid' EXCEPT SELECT cName FROM tryout WHERE pPos = 'goalie',Comment s'appellent les écoles avec des joueurs en position médiane mais pas de gardiens?
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie',Trouvez les noms des États qui ont des étudiants qui jouent en position médiane mais pas en position de gardien de but.
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie',Quels sont les noms de tous les États avec des étudiants universitaires jouant en position médiane mais sans gardiens de but?
SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'),Combien d'États ont des étudiants qui jouent en position médiane mais pas en position de gardien de but.
SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'),Quel est le nombre d'États où les étudiants jouent en position médiane mais pas en tant que gardiens de but ?
SELECT DISTINCT state FROM college WHERE enr < (SELECT max(enr) FROM college),Trouvez les États où se trouvent les collèges dont les inscriptions sont inférieures à la plus grande taille.
SELECT DISTINCT state FROM college WHERE enr < (SELECT max(enr) FROM college),Quels sont les États dont les collèges ont moins d'inscriptions que les autres collèges ?
SELECT DISTINCT cName FROM college WHERE enr > (SELECT min(enr) FROM college WHERE state = 'FL'),Trouvez les noms des collèges dont les effectifs sont supérieurs à ceux de certains (au moins un) collèges de l'État de Floride.
SELECT DISTINCT cName FROM college WHERE enr > (SELECT min(enr) FROM college WHERE state = 'FL'),Quels sont les noms des collèges qui sont plus grands qu'au moins un collège en Floride ?
SELECT cName FROM college WHERE enr > (SELECT max(enr) FROM college WHERE state = 'FL'),Trouvez les noms de tous les collèges dont l'inscription est supérieure à celle de tous les collèges de l'État de Floride.
SELECT cName FROM college WHERE enr > (SELECT max(enr) FROM college WHERE state = 'FL'),Quels sont les noms de tous les collèges avec un plus grand nombre d'inscriptions que le plus grand collège de Floride ?
"SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos = ""goalie"")",Quel est le nombre total d'inscriptions d'écoles qui n'ont aucun joueur de gardien de but?
"SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos = ""goalie"")",Quel est le nombre total d'élèves inscrits dans des écoles sans gardien de but?
SELECT count(DISTINCT state) FROM college WHERE enr > (SELECT avg(enr) FROM college),Quel est le nombre d'États qui ont un collège dont l'inscription est supérieure à l'inscription moyenne ?
SELECT count(DISTINCT state) FROM college WHERE enr > (SELECT avg(enr) FROM college),Combien d'États ont un collège avec plus d'étudiants que la moyenne ?
SELECT count(DISTINCT state) FROM college WHERE enr < (SELECT avg(enr) FROM college),Quel est le nombre d'États qui ont des collèges dont l'inscription est inférieure à l'inscription moyenne ?
SELECT count(DISTINCT state) FROM college WHERE enr < (SELECT avg(enr) FROM college),Combien d'États ont des collèges plus petits que la moyenne ?
SELECT count(*) FROM device,Combien y a-t-il d'appareils ?
SELECT count(*) FROM device,Comptez le nombre d'appareils.
SELECT Carrier FROM device ORDER BY Carrier ASC,Dressez la liste des transporteurs d'appareils par ordre alphabétique croissant.
SELECT Carrier FROM device ORDER BY Carrier ASC,"Quels sont les différents opérateurs pour les appareils, classés par ordre alphabétique ?"
SELECT Carrier FROM device WHERE Software_Platform != 'Android',"Quels sont les porteurs d'appareils dont les plates-formes logicielles ne sont pas ""Android"" ?"
SELECT Carrier FROM device WHERE Software_Platform != 'Android',Renvoyez les transporteurs d'appareils qui n'ont pas Android comme plate-forme logicielle.
SELECT Shop_Name FROM shop ORDER BY Open_Year ASC,Quels sont les noms des magasins par ordre croissant d'année d'ouverture ?
SELECT Shop_Name FROM shop ORDER BY Open_Year ASC,"Retourne les noms des commerces, classés par année d'ouverture ascendante."
SELECT avg(Quantity) FROM stock,Quelle est la quantité moyenne des stocks ?
SELECT avg(Quantity) FROM stock,Donner la quantité moyenne des stocks.
"SELECT Shop_Name , LOCATION FROM shop ORDER BY Shop_Name ASC",Quels sont les noms et l'emplacement des magasins par ordre alphabétique croissant de nom.
"SELECT Shop_Name , LOCATION FROM shop ORDER BY Shop_Name ASC","Renvoie les noms et emplacements des magasins, classés par nom dans l'ordre alphabétique."
SELECT count(DISTINCT Software_Platform) FROM device,Combien de plates-formes logicielles différentes existe-t-il pour les appareils ?
SELECT count(DISTINCT Software_Platform) FROM device,Comptez le nombre de plates-formes logicielles différentes.
"SELECT Open_Date , Open_Year FROM shop WHERE Shop_Name = ""Apple""","Indiquez la date d'ouverture de l'année d'ouverture de la boutique nommée ""Apple""."
"SELECT Open_Date , Open_Year FROM shop WHERE Shop_Name = ""Apple""",Quelles sont les dates et les années d'ouverture de la boutique nommée Apple ?
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1,Indiquez le nom de la boutique avec la dernière année d'ouverture.
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1,Quel est le nom du magasin correspondant au magasin qui a ouvert l'année la plus récente ?
"SELECT T3.Shop_Name , T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",Afficher les noms des magasins et les transporteurs des appareils qu'ils ont en stock.
"SELECT T3.Shop_Name , T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",Quels sont les noms des magasins d'appareils et pour quels transporteurs sont-ils en stock ?
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*) > 1,Afficher les noms des magasins qui ont plus d'un type d'appareil en stock.
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*) > 1,Quels sont les noms des magasins qui ont plus d'un type d'appareil en stock ?
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1,Affichez le nom du magasin qui a le plus d'appareils en stock.
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1,Quel est le nom du magasin qui a le plus de types d'appareils en stock ?
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1,Indiquez le nom du magasin qui a la plus grande quantité d'appareils en stock.
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1,Quel est le nom du magasin qui a la plus grande quantité d'appareils en stock ?
"SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",Veuillez indiquer les différentes plates-formes logicielles et le nombre correspondant d'appareils utilisant chacune.
"SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",Quelles sont les différentes plates-formes logicielles pour les appareils et combien d'appareils possèdent chacune ?
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC,Veuillez afficher les plates-formes logicielles des appareils dans l'ordre décroissant du nombre.
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC,"Quelles sont les différentes plates-formes logicielles pour les appareils, classées par fréquence décroissante ?"
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1,Répertoriez la plate-forme logicielle partagée par le plus grand nombre d'appareils.
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1,Quelle est la plate-forme logicielle la plus courante parmi tous les appareils ?
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock),Dressez la liste des magasins qui n'ont pas d'appareils en stock.
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock),Quels sont les noms des magasins qui n'ont pas d'appareils en stock ?
SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008,Afficher les emplacements partagés par les magasins avec une année d'ouverture postérieure à 2012 et les magasins avec une année d'ouverture avant 2008.
SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008,Quels emplacements contiennent à la fois des magasins ouverts après 2012 et des magasins ouverts avant 2008 ?
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock),Dressez la liste des transporteurs d'appareils qui n'ont pas d'appareils en stock.
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock),Quels sont les transporteurs d'appareils qui ne sont en stock nulle part ?
SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*) > 1,Affichez les transporteurs d'appareils en stock dans plusieurs magasins.
SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*) > 1,Quels sont les transporteurs d'appareils qui sont en stock dans plus d'un magasin ?
SELECT count(*) FROM BOOKINGS,Combien de réservations avons-nous ?
SELECT count(*) FROM BOOKINGS,Comptez le nombre total de réservations effectuées.
SELECT Order_Date FROM BOOKINGS,Indiquez les dates de commande de toutes les réservations.
SELECT Order_Date FROM BOOKINGS,Quelle est la date de commande de chaque réservation ?
"SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",Afficher toutes les dates de livraison prévues et les dates de livraison réelles des réservations.
"SELECT Planned_Delivery_Date , Actual_Delivery_Date FROM BOOKINGS",Quelles sont la date de livraison prévue et la date de livraison réelle pour chaque réservation ?
"SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = ""Harold""",Quels sont le téléphone et l'e-mail du client Harold ?
"SELECT Customer_Phone , Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name = ""Harold""","Trouvez le numéro de téléphone et l'adresse e-mail du client ""Harold""."
SELECT Store_Name FROM Drama_Workshop_Groups,Afficher tous les groupes d'ateliers d'art dramatique Store_Name.
SELECT Store_Name FROM Drama_Workshop_Groups,Quels sont les noms de magasins des groupes d'ateliers d'art dramatique ?
"SELECT min(Order_Quantity) , avg(Order_Quantity) , max(Order_Quantity) FROM INVOICES","Afficher la quantité de commande minimale, moyenne et maximale de toutes les factures."
"SELECT min(Order_Quantity) , avg(Order_Quantity) , max(Order_Quantity) FROM INVOICES","Quelles sont les quantités minimum, moyenne et maximum commandées ? Vérifiez toutes les factures."
SELECT DISTINCT payment_method_code FROM INVOICES,Quels sont les codes de mode de paiement distincts dans toutes les factures ?
SELECT DISTINCT payment_method_code FROM INVOICES,Montrez-moi les codes de mode de paiement distincts de l'enregistrement de la facture.
"SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = ""China""",Quelle est la description de la région de commercialisation Chine ?
"SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name = ""China""",Trouver la description de la région de commercialisation de la Chine ?
SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price > (SELECT avg(Product_Price) FROM PRODUCTS),Afficher tous les noms de produits distincts avec un prix supérieur à la moyenne.
SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price > (SELECT avg(Product_Price) FROM PRODUCTS),Quels sont les noms distincts des produits qui coûtent plus cher que la moyenne ?
"SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = ""Ashley""",Quel est le numéro de téléphone de l'artiste Ashley ?
"SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name = ""Ashley""","Trouvez le numéro de téléphone de l'interprète ""Ashley""."
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code",Afficher tous les codes de mode de paiement et le nombre de commandes pour chaque code.
"SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code",Lister les codes de moyens de paiement distincts avec le nombre de commandes passées
SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de mode de paiement utilisé par la plupart des commandes ?
SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1,Trouvez le moyen de paiement le plus souvent utilisé dans toutes les factures. Donnez-moi son code.
"SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = ""FJA Filming""","Dans quelle ville se trouve l'adresse du magasin ""FJA Filming"" ?"
"SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = ""FJA Filming""","Trouvez la ville dans laquelle se trouve le magasin ""FJA Filming""."
"SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = ""CA""","Quels sont les États ou les comtés de l'adresse des magasins avec le code de région marketing ""CA"" ?"
"SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Marketing_Region_Code = ""CA""","Recherchez les États ou les comtés où se trouvent les magasins avec le code de région marketing ""CA""."
"SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = ""Rob Dinning""",Quel est le nom de la région commerciale à laquelle appartient le magasin Rob Dinning ?
"SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = ""Rob Dinning""",Renvoie le nom de la région de commercialisation dans laquelle se trouve le magasin Rob Dinning.
SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100,Quelles sont les descriptions des types de services dont le prix du produit est supérieur à 100 ?
SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100,Donnez-moi les descriptions des types de services qui coûtent plus de 100.
"SELECT T1.Service_Type_Description , T2.Service_Type_Code , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code","Quelle est la description, le code et le nombre correspondant de chaque type de service ?"
"SELECT T1.Service_Type_Description , T2.Service_Type_Code , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code","Indiquez la description, le code et le nombre de services pour chaque type de service."
"SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",Quelle est la description et le code du type de service qui est effectué le plus souvent ?
"SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",Trouvez la description et le code du type de service qui est exécuté le plus souvent.
"SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",Quels sont les téléphones et les e-mails des groupes d'ateliers dans lesquels les services sont effectués ?
"SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",Donnez-moi tous les numéros de téléphone et adresses e-mail des groupes d'ateliers où les services sont effectués.
"SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T2.Product_Name = ""film""","Quels sont les noms des groupes d'ateliers dans lesquels les services avec le nom de produit ""film"" sont exécutés ?"
"SELECT T1.Store_Phone , T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T2.Product_Name = ""film""","Trouvez les noms des groupes d'ateliers où les services avec le nom de produit ""film"" sont exécutés."
"SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name",Quels sont les différents noms de produits ? Quel est le prix moyen des produits pour chacun d'eux ?
"SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name","Pour chaque nom de produit distinct, indiquez son prix moyen."
SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price) < 1000000,Quels sont les noms de produits dont le prix moyen est inférieur à 1 000 000 ?
SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price) < 1000000,Trouvez les noms de produits dont le prix moyen est inférieur à 1000000.
"SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = ""photo""",Quelles sont les quantités totales commandées de produits photo ?
"SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Name = ""photo""","Calculez les quantités totales commandées du produit ""photo""."
SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000,Quels sont les détails de la commande des produits dont le prix est supérieur à 2000 ?
SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000,Trouvez le détail de la commande pour les produits dont le prix est supérieur à 2000.
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1,Quelles sont les dates de livraison réelles des commandes avec la quantité 1 ?
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1,Lister la date de livraison réelle pour toutes les commandes avec la quantité 1
SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000,Quelles sont les dates de commande des commandes dont le prix est supérieur à 1000 ?
SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000,Trouvez les dates de commande des commandes dont le prix est supérieur à 1000.
SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups,Combien de codes de devise distincts existe-t-il pour tous les groupes d'ateliers d'art dramatique ?
SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups,Trouvez le nombre de codes de devise distincts utilisés dans les groupes d'ateliers d'art dramatique.
"SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = ""Feliciaberg""",Comment s'appellent les groupes d'ateliers de théâtre ayant leur adresse dans la ville de Feliciaberg ?
"SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = ""Feliciaberg""",Renvoyez les noms des groupes d'ateliers de théâtre situés dans la ville de Feliciaberg.
"SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = ""Alaska""",Quelles sont les adresses e-mail des groupes d'ateliers d'art dramatique ayant une adresse dans l'état de l'Alaska ?
"SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = ""Alaska""",Dressez la liste des adresses e-mail des groupes d'ateliers de théâtre situés dans l'état de l'Alaska.
"SELECT T1.City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",Afficher toutes les villes ainsi que le nombre de groupes d'ateliers d'art dramatique dans chaque ville.
"SELECT T1.City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town",Combien y a-t-il de groupes d'ateliers de théâtre dans chaque ville ? Renvoyez à la fois la ville et le nombre.
SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1,Quel est le code de région marketing qui compte le plus de groupes d'ateliers de théâtre ?
SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1,Quelle région marketing compte le plus de groupes d'ateliers de théâtre ? Donnez-moi le code de la région.
SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID,"Afficher toutes les villes où habite au moins un client, mais où aucun artiste n'habite."
SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID,Quelles villes ont au moins un client mais pas d'artiste ?
SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1,Quel est le statut le plus fréquent des réservations ?
SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1,Quel code de statut est le plus courant de toutes les réservations ?
"SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = ""stop""","Quels sont les noms des groupes d'ateliers qui ont des réservations avec le code de statut ""stop"" ?"
"SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = ""stop""","Quels groupes d'ateliers ont des réservations avec le code de statut ""stop"" ? Donnez-moi les noms."
SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID = T2.Client_ID,Afficher les noms de tous les clients sans réservation.
SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID = T2.Client_ID,Comment s'appellent les clients qui n'ont pas de réservation ?
"SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code = ""MasterCard""",Quelles sont les quantités moyennes commandées avec le code de mode de paiement « MasterCard » sur les factures ?
"SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code = ""MasterCard""","Vérifiez l'enregistrement des factures et calculez les quantités moyennes commandées avec le mode de paiement ""MasterCard""."
SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1,Quel est l'identifiant produit de l'article le plus fréquemment commandé sur les factures ?
SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1,Retrouvez l'identifiant du produit commandé le plus souvent sur les factures.
SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film',Quelle est la description du type de service qui propose à la fois le produit photo et le produit film ?
SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film',Donnez-moi la description du type de service qui offre non seulement le produit photo mais aussi le produit film.
SELECT count(*) FROM Band,Combien y a-t-il de groupes ?
SELECT count(*) FROM Band,Trouver le nombre de bandes.
SELECT DISTINCT label FROM Albums,Quelles sont toutes les étiquettes?
SELECT DISTINCT label FROM Albums,Quels sont les différents labels d'albums répertoriés ?
SELECT * FROM Albums WHERE YEAR = 2012,Retrouvez tous les albums de 2012.
SELECT * FROM Albums WHERE YEAR = 2012,renvoie toutes les colonnes des albums créés au cours de l'année 2012.
SELECT * FROM Albums WHERE YEAR = 2012,Quels sont les albums produits en 2010 ?
SELECT * FROM Albums WHERE YEAR = 2012,Quelles informations y a-t-il sur les albums de 2010 ?
"SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = ""Solveig""","Retrouvez toutes les positions scéniques des musiciens avec le prénom ""Solveig"""
"SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE Firstname = ""Solveig""",Quelles sont les différentes positions scéniques pour tous les musiciens dont le prénom est « Solveig » ?
SELECT count(*) FROM Songs,Combien y a-t-il de chansons ?
SELECT count(*) FROM Songs,Comptez le nombre de chansons.
"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.Lastname = ""Heilo""","Retrouvez toutes les chansons interprétées par l'artiste dont le nom est ""Heilo"""
"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.Lastname = ""Heilo""","Comment s'appellent les chansons de l'artiste dont le nom de famille est ""Heilo"" ?"
"SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate = T2.id JOIN songs AS T3 ON T3.songid = T1.songid WHERE T3.Title = ""Flash""","Hom de nombreux musiciens ont joué dans la chanson ""Flash"" ?"
"SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate = T2.id JOIN songs AS T3 ON T3.songid = T1.songid WHERE T3.Title = ""Flash""",Combien de musiciens jouent dans la chanson « Flash » ?
"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = ""Marianne""","Retrouvez toutes les chansons produites par les artistes avec le prénom ""Marianne""."
"SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = ""Marianne""","Quels sont les noms de toutes les chansons produites par l'artiste avec le prénom ""Marianne"" ?"
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands""","Qui a interprété la chanson intitulée ""Badlands"" ? Afficher le prénom et le nom de famille."
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands""","Quels sont le prénom et le nom de l'artiste qui a interprété la chanson ""Badlands"" ?"
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands""","Qui a interprété la chanson intitulée ""Le Pop"" ?"
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands""","Quel est le prénom et le nom de l'artiste qui a interprété ""Le Pop"" ?"
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands"" AND T1.StagePosition = ""back""","Qui joue dans les coulisses de la chanson ""Badlands"" ? Afficher le prénom et le nom de famille."
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands"" AND T1.StagePosition = ""back""","Quels sont les noms et prénoms de l'interprète qui était en coulisses pour la chanson ""Badlands"" ?"
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands"" AND T1.StagePosition = ""back""","Qui joue en coulisses pour la chanson ""Der Kapitan"" ? Afficher le prénom et le nom de famille."
"SELECT T2.firstname , T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = ""Badlands"" AND T1.StagePosition = ""back""","Quel est le prénom et le nom de l'artiste qui s'est produit sur scène pour la chanson ""Der Kapitan"" ?"
SELECT count(DISTINCT label) FROM albums,Combien y a-t-il d'étiquettes uniques pour les albums ?
SELECT count(DISTINCT label) FROM albums,Quelles sont les étiquettes uniques pour les albums ?
SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1,Quel est le label qui a le plus d'albums ?
SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1,Quel est le label avec le plus d'albums ?
SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1,Quel est le nom de famille du musicien qui a produit le plus de chansons ?
SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1,Quel est le nom de famille du musicien qui était dans le plus de chansons ?
SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1,Quel est le nom de famille du musicien qui a produit le plus de chansons ?
SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1,Quel est le nom de famille de l'artiste qui a chanté le plus de chansons ?
"SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE stageposition = ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",Quel est le nom de famille du musicien qui a été le plus en retrait ?
"SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE stageposition = ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",Quel est le nom de famille des musiciens qui ont le plus joué en back position ?
SELECT title FROM songs WHERE title LIKE '% the %',"Retrouvez toutes les chansons dont le nom contient le mot ""la""."
SELECT title FROM songs WHERE title LIKE '% the %',"Comment s'appellent les chansons dont le titre contient le mot ""le"" ?"
SELECT DISTINCT instrument FROM Instruments,Quels sont tous les instruments utilisés ?
SELECT DISTINCT instrument FROM Instruments,Quels sont les différents instruments répertoriés dans la base de données ?
"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId JOIN Instruments AS T4 ON T4.songid = T3.songid AND T4.bandmateid = T2.id WHERE T2.lastname = ""Heilo"" AND T3.title = ""Le Pop""","Quel instrument le musicien du nom de famille ""Heilo"" a-t-il utilisé dans la chanson ""Le Pop"" ?"
"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId JOIN Instruments AS T4 ON T4.songid = T3.songid AND T4.bandmateid = T2.id WHERE T2.lastname = ""Heilo"" AND T3.title = ""Le Pop""","De quels instruments le musicien du nom de famille ""Heilo"" a-t-il joué dans la chanson ""Le Pop"" ?"
"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId JOIN Instruments AS T4 ON T4.songid = T3.songid AND T4.bandmateid = T2.id WHERE T2.lastname = ""Heilo"" AND T3.title = ""Le Pop""","Quel instrument le musicien du nom de famille ""Heilo"" a-t-il utilisé dans la chanson ""Badlands"" ?"
"SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId JOIN Instruments AS T4 ON T4.songid = T3.songid AND T4.bandmateid = T2.id WHERE T2.lastname = ""Heilo"" AND T3.title = ""Le Pop""","De quels instruments le musicien portant le nom de famille ""Heilo"" a-t-il joué dans ""Badlands"" ?"
SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1,Quel est l'instrument le plus utilisé ?
SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1,Quel instrument est le plus utilisé ?
"SELECT count(*) FROM instruments WHERE instrument = ""drums""","Combien de chansons ont utilisé l'instrument ""drums"" ?"
"SELECT count(*) FROM instruments WHERE instrument = ""drums""",Combien de chansons utilisent la batterie comme instrument ?
"SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""","Quels instruments la chanson ""Le Pop"" utilise-t-elle ?"
"SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""",Quels sont les instruments utilisés dans la chanson « Le Pop » ?
"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""",Combien d'instruments la chanson « Le Pop » utilise-t-elle ?
"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""",Combien d'instruments différents sont utilisés dans la chanson « Le Pop » ?
"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""","Combien d'instruments la chanson ""Badlands"" utilise-t-elle ?"
"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""",Combien d'instruments différents sont utilisés dans la chanson « Badlands » ?
"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = ""Heilo""","Combien d'instruments le musicien dont le nom de famille est ""Heilo"" utilise-t-il ?"
"SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = ""Heilo""","Combien d'instruments différents le musicien portant le nom de famille ""Heilo"" utilise-t-il ?"
"SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = ""Heilo""","Trouver tous les instruments jamais utilisés par le musicien dont le nom est ""Heilo"" ?"
"SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = ""Heilo""","Quels sont tous les instruments utilisés par le musicien du nom de famille ""Heilo"" ?"
SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1,Quelle chanson a le plus de voix ?
SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1,Quelle est la chanson avec le plus de voix ?
SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1,Quel type vocal est le type de sonnerie le plus fréquent ?
SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1,Quel est le type de vocables qui apparaît le plus fréquemment ?
"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE lastname = ""Heilo"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","Quel type de voix le membre du groupe dont le nom de famille est ""Heilo"" a-t-il le plus joué ?"
"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE lastname = ""Heilo"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","Quel est le type de voix que le membre du groupe portant le nom de famille ""Heilo"" a joué le plus ?"
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""","Quels sont les types de voix utilisés dans la chanson ""Le Pop"" ?"
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""",Quels sont les types de voix utilisés dans la chanson « Le Pop » ?
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""","Quels sont les types de voix utilisés dans la chanson ""Badlands"" ?"
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Le Pop""","Quels types de voix sont utilisés dans la chanson ""Badlands"" ?"
"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Demon Kitty Rag""","Trouver le nombre de types de voix utilisés dans la chanson ""Demon Kitty Rag"" ?"
"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Demon Kitty Rag""","Quels sont les types de voix utilisés dans la chanson ""Demon Kitty Rag"" ?"
"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Demon Kitty Rag""","Trouver le nombre de types vocaux utilisés dans la chanson ""Le Pop"""
"SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = ""Demon Kitty Rag""",Combien de types vocaux sont utilisés dans la chanson « Le Pop » ?
"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = ""lead""",Combien de chansons ont une voix principale ?
"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = ""lead""",Combien de chansons ont des voix de type lead ?
"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = ""lead""",Combien de chansons ont une voix commune ?
"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = ""lead""",Combien de chansons différentes ont des voix partagées ?
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = ""Solveig"" AND T2.title = ""A Bar In Amsterdam""","Quel type de voix le musicien prénommé ""Solveig"" a-t-il joué dans la chanson intitulée ""A Bar in Amsterdam"" ?"
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = ""Solveig"" AND T2.title = ""A Bar In Amsterdam""","Quels sont les types de voix que le musicien du prénom ""Solveig"" a joué dans la chanson ""A Bar in Amsterdam"" ?"
"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = ""lead""",Trouvez toutes les chansons qui n'ont pas de voix principale.
"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = ""lead""",Quels sont les noms des chansons sans voix principale ?
"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = ""lead""",Trouvez toutes les chansons qui n'ont pas de voix de fond.
"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = ""lead""",Quels sont les différents noms de toutes les chansons sans chœurs ?
"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = ""lead""",Trouvez le nom des chansons qui n'ont pas de voix de fond.
"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = ""lead""",Quels sont les noms des chansons qui n'ont pas de chœurs ?
SELECT DISTINCT TYPE FROM vocals,Retrouvez tous les types vocaux.
SELECT DISTINCT TYPE FROM vocals,Quels sont les différents types de voix ?
"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","Quel type de voix le membre du groupe dont le prénom est ""Solveig"" a-t-il le plus joué ?"
"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","Quels sont les types de voix que le membre du groupe portant le prénom ""Solveig"" a le plus joué ?"
"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","Quel type de voix le membre du groupe prénommé ""Marianne"" a-t-il le plus joué ?"
"SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","Quel est le type vocal de la compagne dont le prénom est ""Marianne"" qui a le plus joué ?"
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = ""Heilo"" AND T2.title = ""Der Kapitan""","Quel type de voix le musicien avec le nom de famille ""Heilo"" a-t-il joué dans la chanson avec le titre ""Der Kapitan"" ?"
"SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = ""Heilo"" AND T2.title = ""Der Kapitan""","Quels sont les types de voix que le musicien portant le nom de famille ""Heilo"" a joué dans ""Der Kapitan"" ?"
SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate = t2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1,Trouvez le prénom du membre du groupe qui a joué dans la plupart des chansons.
SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate = t2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1,Quel est le prénom du pote du groupe qui a joué dans le plus de chansons ?
"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = ""A Kiss Before You Go: Live in Hamburg""","Quelles sont les chansons de l'album ""A Kiss Before You Go: Live in Hamburg"" ?"
"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = ""A Kiss Before You Go: Live in Hamburg""","Quels sont les titres des chansons de l'album ""A Kiss Before You Go: Live in Hamburg"" ?"
"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.label = ""Universal Music Group""","Quelles sont toutes les chansons des albums sous le label ""Universal Music Group"" ?"
"SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.label = ""Universal Music Group""","Quels sont les noms de toutes les chansons dont l'album est sous le label ""Universal Music Group"" ?"
"SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.type = ""Studio""",Trouvez le nombre de chansons dans tous les albums studio.
"SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.type = ""Studio""",Combien de chansons apparaissent dans les albums studio ?
SELECT founder FROM manufacturers WHERE name = 'Sony',Qui est le fondateur de Sony ?
SELECT founder FROM manufacturers WHERE name = 'Sony',Retour du fondateur de Sony.
SELECT headquarter FROM manufacturers WHERE founder = 'James',Où se trouve le siège social de l'entreprise fondée par James ?
SELECT headquarter FROM manufacturers WHERE founder = 'James',Quel est le siège social de l'entreprise dont le fondateur est James ?
"SELECT name , headquarter FROM manufacturers ORDER BY revenue DESC","Trouvez tous les noms de fabricants et leur siège social, triés en premier par ceux qui génèrent les revenus les plus élevés."
"SELECT name , headquarter FROM manufacturers ORDER BY revenue DESC","Quels sont les noms et les sièges sociaux de tous les fabricants, classés par chiffre d'affaires décroissant ?"
"SELECT avg(revenue) , max(revenue) , sum(revenue) FROM manufacturers","Quels sont les revenus moyens, maximaux et totaux de toutes les entreprises ?"
"SELECT avg(revenue) , max(revenue) , sum(revenue) FROM manufacturers","Renvoie les revenus moyens, maximaux et totaux de tous les fabricants."
SELECT count(*) FROM manufacturers WHERE founder = 'Andy',Combien d'entreprises ont été créées par Andy ?
SELECT count(*) FROM manufacturers WHERE founder = 'Andy',Renvoie le nombre d'entreprises créées par Andy.
SELECT sum(revenue) FROM manufacturers WHERE headquarter = 'Austin',Trouvez le chiffre d'affaires total créé par les entreprises dont le siège social est situé à Austin.
SELECT sum(revenue) FROM manufacturers WHERE headquarter = 'Austin',Quelle est la somme des revenus des entreprises dont le siège est à Austin ?
SELECT DISTINCT headquarter FROM manufacturers,Quelles sont les différentes villes répertoriées ?
SELECT DISTINCT headquarter FROM manufacturers,Donner le siège social distinct des fabricants.
SELECT count(*) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing',Trouvez le nombre de fabricants basés à Tokyo ou à Pékin.
SELECT count(*) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing',Combien de fabricants ont leur siège à Tokyo ou à Pékin ?
SELECT founder FROM manufacturers WHERE name LIKE 'S%',Trouvez le fondateur de l'entreprise dont le nom commence par la lettre 'S'.
SELECT founder FROM manufacturers WHERE name LIKE 'S%',Qui sont les fondateurs des entreprises dont la première lettre est S ?
SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150,Trouvez le nom des entreprises dont le chiffre d'affaires est compris entre 100 et 150.
SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150,Quels sont les noms des entreprises dont le chiffre d'affaires est compris entre 100 et 150 ?
SELECT sum(revenue) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan',Quel est le chiffre d'affaires total de toutes les entreprises dont le siège social est à Tokyo ou à Taïwan ?
SELECT sum(revenue) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan',Renvoie le chiffre d'affaires total des entreprises dont le siège est à Tokyo ou à Taïwan.
SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony',Trouvez le nom du produit fabriqué par les deux sociétés Creative Labs et Sony.
SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony',Quels sont les noms des produits fabriqués par Creative Labs et Sony ?
"SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1","Trouvez le nom, le siège social et le fondateur du fabricant qui a le chiffre d'affaires le plus élevé."
"SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1","Quels sont les noms, le siège social et les fondateurs de l'entreprise avec le chiffre d'affaires le plus élevé ?"
"SELECT name , headquarter , revenue FROM manufacturers ORDER BY revenue DESC","Trouvez le nom, le siège social et le chiffre d'affaires de tous les fabricants triés par leur chiffre d'affaires dans l'ordre décroissant."
"SELECT name , headquarter , revenue FROM manufacturers ORDER BY revenue DESC","Quels sont les noms, les sièges sociaux et les revenus des fabricants, triés par chiffre d'affaires décroissant ?"
SELECT name FROM manufacturers WHERE revenue > (SELECT avg(revenue) FROM manufacturers),Trouvez le nom des entreprises dont le chiffre d'affaires est supérieur au chiffre d'affaires moyen de toutes les entreprises.
SELECT name FROM manufacturers WHERE revenue > (SELECT avg(revenue) FROM manufacturers),Quels sont les noms des fabricants dont les revenus sont supérieurs à la moyenne de tous les revenus ?
SELECT name FROM manufacturers WHERE revenue < (SELECT min(revenue) FROM manufacturers WHERE headquarter = 'Austin'),Trouvez le nom des entreprises dont le chiffre d'affaires est inférieur au chiffre d'affaires de toutes les entreprises basées à Austin.
SELECT name FROM manufacturers WHERE revenue < (SELECT min(revenue) FROM manufacturers WHERE headquarter = 'Austin'),Quels sont les noms des entreprises dont le chiffre d'affaires est inférieur au chiffre d'affaires le plus bas de tous les fabricants d'Austin ?
SELECT sum(revenue) FROM manufacturers WHERE revenue > (SELECT min(revenue) FROM manufacturers WHERE headquarter = 'Austin'),Trouvez le chiffre d'affaires total des entreprises dont le chiffre d'affaires est supérieur au chiffre d'affaires de certaines entreprises basées à Austin.
SELECT sum(revenue) FROM manufacturers WHERE revenue > (SELECT min(revenue) FROM manufacturers WHERE headquarter = 'Austin'),Quel est le chiffre d'affaires total des entreprises dont le chiffre d'affaires est supérieur au chiffre d'affaires le plus bas de tous les fabricants d'Austin ?
"SELECT sum(revenue) , founder FROM manufacturers GROUP BY founder",Trouvez le chiffre d'affaires total des entreprises de chaque fondateur.
"SELECT sum(revenue) , founder FROM manufacturers GROUP BY founder",Quel est le chiffre d'affaires total des entreprises créées par le fondateur ?
"SELECT name , max(revenue) , Headquarter FROM manufacturers GROUP BY Headquarter",Trouvez le nom et les revenus de l'entreprise qui génère les revenus les plus élevés dans chaque ville.
"SELECT name , max(revenue) , Headquarter FROM manufacturers GROUP BY Headquarter",Quels sont les noms et les revenus des entreprises ayant les revenus les plus élevés dans chaque ville de siège ?
"SELECT sum(revenue) , name FROM manufacturers GROUP BY name",Trouvez le revenu total pour chaque fabricant.
"SELECT sum(revenue) , name FROM manufacturers GROUP BY name",Quel est le chiffre d'affaires total de chaque fabricant ?
"SELECT avg(T1.price) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",Trouvez les prix moyens de tous les produits de chaque fabrication et indiquez le nom de chaque entreprise.
"SELECT avg(T1.price) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",Quels sont les prix moyens des produits pour chaque fabricant ?
"SELECT avg(T1.price) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name","Sélectionnez le prix moyen des produits de chaque fabricant, en indiquant le nom du fabricant."
"SELECT avg(T1.price) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name","Quels sont les prix moyens des produits, regroupés par nom de fabricant ?"
"SELECT count(DISTINCT T1.name) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter",Trouvez le nombre de produits différents qui sont fabriqués par des entreprises dans différentes villes sièges.
"SELECT count(DISTINCT T1.name) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter",Combien de produits différents sont fabriqués dans chaque ville-siège ?
SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'),Trouvez le nombre de produits que Sony ne fabrique pas.
SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'),Combien de produits ne sont pas fabriqués par Sony ?
SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = 'DVD drive',Trouvez le nom des entreprises qui ne fabriquent pas de lecteur de DVD.
SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T1.name = 'DVD drive',Quels sont les noms des entreprises qui ne fabriquent pas de lecteurs de DVD ?
"SELECT count(*) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name","Trouvez le nombre de produits pour chaque fabricant, en indiquant le nom de chaque entreprise."
"SELECT count(*) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",Combien y a-t-il de produits pour chaque fabricant ?
SELECT Name FROM Products,Sélectionnez les noms de tous les produits du magasin.
SELECT Name FROM Products,Quels sont les noms de tous les produits ?
"SELECT name , price FROM products",Sélectionnez les noms et les prix de tous les produits du magasin.
"SELECT name , price FROM products",Quels sont les noms et les prix de tous les produits du magasin ?
SELECT name FROM products WHERE price <= 200,Sélectionnez le nom des produits dont le prix est inférieur ou égal à 200 $.
SELECT name FROM products WHERE price <= 200,Quels sont les noms des produits dont le prix est d'au plus 200 ?
SELECT * FROM products WHERE price BETWEEN 60 AND 120,Retrouvez toutes les informations de tous les produits dont le prix est compris entre 60$ et 120$.
SELECT * FROM products WHERE price BETWEEN 60 AND 120,Quelle est toute l'information de tous les produits qui ont un prix entre 60 et 120 ?
SELECT avg(price) FROM products,Calculez le prix moyen de tous les produits.
SELECT avg(price) FROM products,Quel est le prix moyen de tous les produits ?
SELECT avg(price) FROM products WHERE Manufacturer = 2,Calculez le prix moyen de tous les produits dont le code fabricant est égal à 2.
SELECT avg(price) FROM products WHERE Manufacturer = 2,Quel est le prix moyen des produits dont le code fabricant est égal à 2 ?
SELECT count(*) FROM products WHERE price >= 180,Calculez le nombre de produits dont le prix est supérieur ou égal à 180 $.
SELECT count(*) FROM products WHERE price >= 180,Combien de produits ont des prix d'au moins 180 ?
"SELECT name , price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC","Sélectionnez le nom et le prix de tous les produits dont le prix est supérieur ou égal à 180 $, et triez d'abord par prix (par ordre décroissant), puis par nom (par ordre croissant)."
"SELECT name , price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC","Quels sont les noms et prix des produits qui coûtent au moins 180, triés par prix décroissant et nom croissant ?"
SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code,Sélectionnez toutes les données des produits et le fabricant de chaque produit.
SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code,"Quelles sont toutes les données produit, ainsi que le fabricant de chaque produit ?"
"SELECT AVG(Price) , Manufacturer FROM Products GROUP BY Manufacturer","Sélectionnez le prix moyen des produits de chaque fabricant, en indiquant uniquement le code du fabricant."
"SELECT AVG(Price) , Manufacturer FROM Products GROUP BY Manufacturer","Quels sont les prix moyens des produits, regroupés par code fabricant ?"
"SELECT avg(T1.Price) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",Sélectionnez les noms de fabricants dont les produits ont un prix moyen supérieur ou égal à 150 $.
"SELECT avg(T1.Price) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",Quels sont les noms et les prix moyens des produits pour les fabricants dont les produits coûtent en moyenne 150 ou plus ?
"SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",Sélectionnez le nom et le prix du produit le moins cher.
"SELECT name , price FROM Products ORDER BY price ASC LIMIT 1",Quel est le nom et le prix du produit le moins cher ?
"SELECT T1.Name , max(T1.Price) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",Sélectionnez le nom de chaque fabricant ainsi que le nom et le prix de son produit le plus cher.
"SELECT T1.Name , max(T1.Price) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name","Pour chaque nom de fabricant, quels sont les noms et les prix de leur produit le plus cher ?"
"SELECT code , name , min(price) FROM products GROUP BY name",Sélectionnez le code du produit le moins cher dans chaque catégorie de produit.
"SELECT code , name , min(price) FROM products GROUP BY name",Quels sont les codes et les noms des produits les moins chers de chaque catégorie ?
SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1,Quel est l'ID du journal des problèmes créé le plus récemment ?
SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1,Quel journal des problèmes a été créé le plus récemment ? Donnez-moi l'identifiant du journal.
"SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",Quel est l'identifiant de journal le plus ancien et son identifiant de problème correspondant ?
"SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",Recherchez l'ID de journal le plus ancien et l'ID de problème correspondant.
"SELECT problem_log_id , log_entry_date FROM problem_log WHERE problem_id = 10",Trouver tous les identifiants et dates des logs pour le problème dont l'identifiant est 10.
"SELECT problem_log_id , log_entry_date FROM problem_log WHERE problem_id = 10","Pour le problème avec l'identifiant 10, renvoyez les identifiants et les dates de ses journaux de problèmes."
"SELECT problem_log_id , log_entry_description FROM problem_log",Répertoriez tous les ID de journal et leurs descriptions à partir des journaux de problèmes.
"SELECT problem_log_id , log_entry_description FROM problem_log",Quels sont l'ID de journal et la description d'entrée de chaque problème ?
"SELECT DISTINCT staff_first_name , staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",Dressez la liste des noms et prénoms de tous les membres du personnel distincts qui sont affectés au problème dont l'ID est 1.
"SELECT DISTINCT staff_first_name , staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",Quels membres du personnel sont affectés au problème avec l'identifiant 1 ? Donnez-moi leurs noms et prénoms.
"SELECT DISTINCT T2.problem_id , T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""",Répertoriez l'identifiant du problème et l'identifiant du journal qui sont attribués au personnel nommé Rylan Homenick.
"SELECT DISTINCT T2.problem_id , T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""",Quel ID de problème et ID de journal sont attribués au personnel nommé Rylan Homenick ?
"SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""",Combien de problèmes y a-t-il pour Product Voluptatem ?
"SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""","Combien de problèmes le produit appelé ""voluptatem"" a-t-il eu en dossier ?"
"SELECT count(*) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1",Combien de problèmes le produit avec le plus de problèmes a-t-il ? Indiquez le nombre de problèmes et le nom du produit.
"SELECT count(*) , T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1",Quel produit a le plus de problèmes ? Donnez-moi le nombre de problèmes et le nom du produit.
"SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""",Donnez-moi une liste des descriptions des problèmes signalés par le personnel dont le prénom est Christop.
"SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""","Quels problèmes sont signalés par le personnel portant le prénom ""Christop"" ? Montrez les descriptions des problèmes."
"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = ""Bosco""",Trouvez les identifiants des problèmes signalés par le personnel dont le nom de famille est Bosco.
"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = ""Bosco""","Quels problèmes sont signalés par le personnel portant le nom de famille ""Bosco"" ? Afficher les identifiants des problèmes."
"SELECT problem_id FROM problems WHERE date_problem_reported > ""1978-06-26""",Quels sont les identifiants des problèmes signalés après le 1978-06-26 ?
"SELECT problem_id FROM problems WHERE date_problem_reported > ""1978-06-26""",Trouvez les identifiants des problèmes signalés après le 26/06/1978.
"SELECT problem_id FROM problems WHERE date_problem_reported < ""1978-06-26""",Quels sont les identifiants des problèmes signalés avant le 26/06/1978 ?
"SELECT problem_id FROM problems WHERE date_problem_reported < ""1978-06-26""",Quels problèmes sont signalés avant le 1978-06-26 ? Donnez-moi les identifiants des problèmes.
"SELECT count(*) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id","Pour chaque produit qui a des problèmes, quels sont le nombre de problèmes et l'identifiant du produit ?"
"SELECT count(*) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id","Pour chaque produit présentant des problèmes, indiquez le nombre de problèmes et l'identifiant du produit."
"SELECT count(*) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id","Pour chaque produit qui présente des problèmes, recherchez le nombre de problèmes signalés après le 13/11/1986 et l'identifiant du produit ?"
"SELECT count(*) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id",Quels sont les produits pour lesquels des problèmes ont été signalés après le 13/11/1986 ? Donnez-moi l'identifiant du produit et le nombre de problèmes signalés après le 13/11/1986.
SELECT DISTINCT product_name FROM product ORDER BY product_name,Lister les noms de tous les noms de produits distincts par ordre alphabétique ?
SELECT DISTINCT product_name FROM product ORDER BY product_name,Triez tous les noms de produits distincts par ordre alphabétique.
SELECT DISTINCT product_name FROM product ORDER BY product_id,Répertorier tous les noms de produits distincts classés par identifiant de produit ?
SELECT DISTINCT product_name FROM product ORDER BY product_id,Quelle est la liste des noms de produits distincts triés par identifiant de produit ?
"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Dameon"" AND T2.staff_last_name = ""Frami"" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Jolie"" AND T2.staff_last_name = ""Weber""",Quels sont les id des problèmes signalés par le staff nommé Dameon Frami ou Jolie Weber ?
"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Dameon"" AND T2.staff_last_name = ""Frami"" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Jolie"" AND T2.staff_last_name = ""Weber""",Quels problèmes ont été signalés par le personnel nommé Dameon Frami ou Jolie Weber ? Donnez-moi les identifiants des problèmes.
"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop"" AND T2.staff_last_name = ""Berge"" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Ashley"" AND T2.staff_last_name = ""Medhurst""",Quels sont les identifiants de produit pour les problèmes signalés par Christop Berge avec la fermeture autorisée par Ashley Medhurst ?
"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop"" AND T2.staff_last_name = ""Berge"" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Ashley"" AND T2.staff_last_name = ""Medhurst""","Pour quel produit y a-t-il eu un problème signalé par Christop Berge, avec fermeture autorisée par Ashley Medhurst ? Renvoyez les identifiants du produit."
"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported < ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )",Quels sont les identifiants des problèmes signalés avant la date de tout problème signalé par Lysanne Turcotte?
"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported < ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )",Quels problèmes ont été signalés avant la date de tout problème signalé par le personnel Lysanne Turcotte? Donnez-moi les identifiants des problèmes.
"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported > ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Rylan"" AND T4.staff_last_name = ""Homenick"" )",Quels sont les identifiants des problèmes signalés après la date des problèmes signalés par Rylan Homenick ?
"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported > ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Rylan"" AND T4.staff_last_name = ""Homenick"" )",Retrouvez les identifiants des problèmes signalés après la date des éventuels problèmes signalés par le staff Rylan Homenick.
SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3,Trouver le top 3 des produits qui posent le plus de problèmes ?
SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3,Quels sont les trois produits qui posent le plus de problèmes ?s
"SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = ""voluptatem"" AND T1.date_problem_reported > ""1995""","Lister les identifiants des problèmes du produit ""voluptatem"" qui sont signalés après 1995 ?"
"SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = ""voluptatem"" AND T1.date_problem_reported > ""1995""","Quels sont les identifiants des problèmes qui proviennent du produit ""voluptatem"" et qui sont signalés après 1995 ?"
"SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""rem"" EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""aut""","Trouver le prénom et le nom des membres du personnel qui ont signalé des problèmes avec le produit ""rem"" mais pas ""aut"" ?"
"SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""rem"" EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""aut""","Quels membres du personnel ont signalé des problèmes avec le produit ""rem"" mais pas ""aut"" ? Donnez-moi leurs noms et prénoms."
"SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Lacey"" AND T3.staff_last_name = ""Bosco"" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Kenton"" AND T3.staff_last_name = ""Champlin""",Trouver les produits qui ont des problèmes signalés à la fois par Lacey Bosco et Kenton Champlin ?
"SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Lacey"" AND T3.staff_last_name = ""Bosco"" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Kenton"" AND T3.staff_last_name = ""Champlin""",Quels produits ont des problèmes signalés à la fois par le personnel nommé Lacey Bosco et le personnel nommé Kenton Champlin ?
SELECT count(*) FROM branch WHERE membership_amount > (SELECT avg(membership_amount) FROM branch),Combien y a-t-il de succursales qui ont plus que le nombre moyen d'adhésions ?
SELECT count(*) FROM branch WHERE membership_amount > (SELECT avg(membership_amount) FROM branch),Quel est le nombre de succursales qui ont plus que le nombre moyen d'adhésions ?
"SELECT name , address_road , city FROM branch ORDER BY open_year","Afficher le nom, l'adresse, la route et la ville de toutes les succursales triées par année d'ouverture."
"SELECT name , address_road , city FROM branch ORDER BY open_year","Quels sont les noms, les routes d'adresse et les villes des succursales classées par année d'ouverture ?"
SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3,Quels sont les noms des trois principales branches avec le plus grand nombre de membres ?
SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3,Quels sont les noms des 3 branches qui ont le plus d'adhésions ?
SELECT DISTINCT city FROM branch WHERE membership_amount >= 100,Afficher toutes les villes distinctes où se trouvent les succursales avec au moins 100 adhésions.
SELECT DISTINCT city FROM branch WHERE membership_amount >= 100,Quelles sont les différentes villes qui ont plus de 100 adhésions ?
SELECT open_year FROM branch GROUP BY open_year HAVING count(*) >= 2,Énumérez toutes les années d'ouverture où au moins deux magasins sont ouverts.
SELECT open_year FROM branch GROUP BY open_year HAVING count(*) >= 2,Quelles sont les années d'ouverture au cours desquelles au moins deux magasins ont ouvert ?
"SELECT min(membership_amount) , max(membership_amount) FROM branch WHERE open_year = 2011 OR city = 'London'",Afficher le nombre minimum et maximum d'adhésions pour toutes les succursales ouvertes en 2011 ou situées dans la ville de Londres.
"SELECT min(membership_amount) , max(membership_amount) FROM branch WHERE open_year = 2011 OR city = 'London'",Quels sont les montants d'adhésion minimum et maximum pour toutes les succursales ouvertes en 2011 ou situées à Londres ?
"SELECT city , count(*) FROM branch WHERE open_year < 2010 GROUP BY city",Indiquez la ville et le nombre d'agences ouvertes avant 2010 pour chaque ville.
"SELECT city , count(*) FROM branch WHERE open_year < 2010 GROUP BY city","Pour chaque ville, combien d'agences ont ouvert avant 2010 ?"
SELECT count(DISTINCT LEVEL) FROM member,Combien de niveaux différents les membres ont-ils ?
SELECT count(DISTINCT LEVEL) FROM member,Quels sont les différents niveaux d'adhésion ?
"SELECT card_number , name , hometown FROM member ORDER BY LEVEL DESC","Afficher le numéro de carte, le nom et la ville natale de tous les membres dans un ordre décroissant de niveau."
"SELECT card_number , name , hometown FROM member ORDER BY LEVEL DESC","Quels sont les numéros de carte, les noms et les villes natales de chaque membre classés par niveau décroissant ?"
SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1,Afficher le niveau d'adhésion avec le plus grand nombre de membres.
SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1,Quel est le niveau d'adhésion avec le plus de monde ?
"SELECT T3.name , T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id ORDER BY T1.register_year",Afficher tous les noms des membres et les noms des succursales enregistrées triés par année d'enregistrement.
"SELECT T3.name , T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id ORDER BY T1.register_year",Quels sont les noms des membres et des succursales auxquelles ils sont inscrits classés par année d'inscription?
"SELECT T2.name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id",Afficher tous les noms de succursales avec le nombre de membres dans chaque succursale enregistrés après 2015.
"SELECT T2.name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id","Pour chaque identifiant de succursale, quels sont les noms des succursales qui ont été enregistrées après 2015 ?"
SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch),Afficher les noms des membres sans aucune succursale enregistrée.
SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch),Quels sont les noms des membres qui ne se sont jamais inscrits dans aucune succursale?
"SELECT name , city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)",Indiquez le nom de la succursale et la ville sans aucun membre inscrit.
"SELECT name , city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)",Quels sont les noms et les villes des succursales qui n'ont pas de membres inscrits ?
"SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1",Quel est le nom et l'année d'ouverture de la branche avec le plus grand nombre d'adhésions enregistrées en 2016 ?
"SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1",Quel est le nom et l'année d'ouverture de la branche qui a enregistré le plus de membres en 2016 ?
"SELECT T2.name , T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T1.register_year = 2016",Indiquez le nom du membre et sa ville natale qui ont enregistré une succursale en 2016.
"SELECT T2.name , T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T1.register_year = 2016",Quels sont les noms des membres et les villes natales de ceux qui se sont inscrits dans une succursale en 2016 ?
SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100,Afficher toutes les villes avec une succursale ouverte en 2001 et une succursale avec plus de 100 membres.
SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100,Quelles sont les villes qui ont une antenne ouverte en 2001 et une antenne de plus de 100 membres ?
SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount > 100,Afficher toutes les villes sans succursale ayant plus de 100 adhésions.
SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount > 100,Quelles sont les villes qui n'ont pas d'antennes de plus de 100 membres ?
SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T2.city = 'London' AND T1.year = 2018,Quelle est la somme du total des livres d'achat en 2018 pour toutes les succursales de Londres ?
SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T2.city = 'London' AND T1.year = 2018,Combien de livres au total ont été achetées en 2018 dans toutes les succursales de Londres ?
SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6,Quel est le nombre total d'achats pour les membres de niveau 6 ?
SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6,Quel est le total des achats pour les membres classés au niveau 6 ?
"SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'","Trouvez le nom des branches où se trouvent certains membres dont la ville natale est à Louisville, Kentucky et d'autres à Hiram, Géorgie."
"SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'","Quels sont les noms des branches qui ont des membres avec une ville natale à Louisville, Kentucky et aussi ceux de Hiram, Goergia ?"
"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""","indiquez le numéro de carte de tous les membres dont l'adresse de ville natale comprend le mot ""Kentucky""."
"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""",Quels sont les numéros de carte des membres du Kentucky ?
SELECT count(*) FROM VOTING_RECORD,Trouvez le nombre total d'enregistrements de vote.
SELECT count(*) FROM VOTING_RECORD,Combien de bulletins de vote avons-nous ?
SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD,Trouvez le nombre distinct de votes du président.
SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD,Combien de votes de président distincts sont enregistrés ?
SELECT max(Age) FROM STUDENT,Trouver l'âge maximum de tous les élèves.
SELECT max(Age) FROM STUDENT,Quel est l'âge le plus élevé parmi les étudiants?
SELECT LName FROM STUDENT WHERE Major = 50,Trouvez les noms de famille des étudiants avec le majeur 50.
SELECT LName FROM STUDENT WHERE Major = 50,Quels sont les noms de famille des étudiants qui étudient la majeure 50 ?
SELECT Fname FROM STUDENT WHERE Age > 22,Trouvez les prénoms des étudiants âgés de plus de 22 ans.
SELECT Fname FROM STUDENT WHERE Age > 22,Quels sont les prénoms de tous les étudiants âgés de plus de 22 ans ?
SELECT Fname FROM STUDENT WHERE Age > 22,Trouvez le prénom des étudiants qui ont plus de 20 ans.
SELECT Fname FROM STUDENT WHERE Age > 22,Quels sont les prénoms de tous les étudiants âgés de plus de 20 ans ?
"SELECT Major FROM STUDENT WHERE Sex = ""M""",Quelles sont les majeures des étudiants masculins (le sexe est M) ?
"SELECT Major FROM STUDENT WHERE Sex = ""M""",Énumérez la majeure de chaque élève de sexe masculin.
"SELECT avg(Age) FROM STUDENT WHERE Sex = ""F""",Quel est l'âge moyen des étudiantes (le sexe est F) ?
"SELECT avg(Age) FROM STUDENT WHERE Sex = ""F""",Trouver l'âge moyen des étudiantes.
"SELECT max(Age) , min(Age) FROM STUDENT WHERE Major = 600",Quel est l'âge maximum et minimum des étudiants avec le majeur 600?
"SELECT max(Age) , min(Age) FROM STUDENT WHERE Major = 600",Dites-moi l'âge des élèves les plus âgés et les plus jeunes qui étudient la majeure 600.
"SELECT Advisor FROM STUDENT WHERE city_code = ""BAL""","Qui sont les conseillers pour les étudiants qui vivent dans une ville avec le code de ville ""BAL"" ?"
"SELECT Advisor FROM STUDENT WHERE city_code = ""BAL""","Afficher les conseillers des étudiants dont la ville de résidence a le code de ville ""BAL""."
"SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE = ""Fall""",Quels sont les votes distincts des secrétaires lors du cycle électoral d'automne?
"SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE = ""Fall""",Renvoyez tous les votes de secrétaire distincts effectués lors du cycle électoral d'automne.
"SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date = ""08/30/2015""",Quels sont les votes distincts du président au 30/08/2015 ?
"SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date = ""08/30/2015""",Afficher tous les votes distincts du président effectués le 30/08/2015.
"SELECT DISTINCT Registration_Date , Election_Cycle FROM VOTING_RECORD",Indiquez la date d'inscription distincte et le cycle électoral.
"SELECT DISTINCT Registration_Date , Election_Cycle FROM VOTING_RECORD",Quelles sont les dates d'inscription distinctes et les cycles électoraux ?
"SELECT DISTINCT President_Vote , VICE_President_Vote FROM VOTING_RECORD",Signaler le vote distinct du président et le vote du vice-président.
"SELECT DISTINCT President_Vote , VICE_President_Vote FROM VOTING_RECORD",Dressez la liste de tous les votes distincts du président et des votes du vice-président.
SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_President_VOTE,Trouvez les noms de famille distincts des élèves qui ont des votes de président de classe.
SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_President_VOTE,Quels sont les noms de famille distincts des élèves qui ont des votes de président de classe ?
SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_Senator_VOTE,Trouvez les prénoms distincts des élèves qui ont des votes de sénateur de classe.
SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.CLASS_Senator_VOTE,Quels sont les prénoms distincts des élèves qui ont des votes de président de classe ?
"SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = ""Fall""",Trouvez les âges distincts des étudiants qui ont des votes de secrétaire lors du cycle électoral d'automne.
"SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Secretary_Vote WHERE T2.Election_Cycle = ""Fall""",Quels sont les âges distincts des étudiants qui ont des votes de secrétaire lors du cycle électoral d'automne ?
"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = ""Spring""",Trouvez le conseiller distinct des étudiants qui ont des votes de trésorier lors du cycle électoral du printemps.
"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = ""Spring""",Qui a servi de conseiller pour les étudiants qui ont des votes de trésorier lors du cycle électoral du printemps ?
SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote,Trouvez les majors distinctes des étudiants qui ont des votes de trésorier.
SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote,Quelles sont les majeures distinctes que les étudiants avec des votes de trésorier étudient?
"SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = ""F""",Trouvez les noms et prénoms de toutes les étudiantes (le sexe est F) qui ont des votes de président.
"SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = ""F""",Quels sont les noms et prénoms de toutes les étudiantes qui ont des votes de président ?
"SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE WHERE T1.age = 18",Trouvez le prénom et le nom de tous les étudiants de 18 ans qui ont des votes de vice-président.
"SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE WHERE T1.age = 18",Quels sont les prénoms et noms de famille des étudiants qui ont 18 ans et qui ont des votes de vice-président.
"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = ""M"" AND T2.Election_Cycle = ""Fall""",Combien d'élèves de sexe masculin (le sexe est M) ont des votes de sénateur de classe lors du cycle électoral d'automne ?
"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = ""M"" AND T2.Election_Cycle = ""Fall""",Comptez le nombre d'étudiants de sexe masculin qui ont eu des votes de sénateur de classe lors du cycle électoral d'automne.
"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = ""NYC"" AND T2.Election_Cycle = ""Spring""",Trouvez le nombre d'étudiants dont le code de ville est NYC et qui ont des votes de sénateur de classe lors du cycle électoral du printemps.
"SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = ""NYC"" AND T2.Election_Cycle = ""Spring""","Quels étudiants vivent dans la ville avec le code ""NYC"" et ont des votes de sénateur de classe lors du cycle électoral du printemps ? Comptez les chiffres."
"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = ""NYC"" AND T2.Election_Cycle = ""Spring""","Trouvez l'âge moyen des étudiants qui vivent dans la ville avec le code ""NYC"" et qui ont des votes de secrétaire lors du cycle électoral du printemps."
"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = ""NYC"" AND T2.Election_Cycle = ""Spring""","Quel est l'âge moyen des étudiants qui ont le code de ville ""NYC"" et qui ont des votes de secrétaire pour le cycle électoral du printemps ?"
"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = ""F"" AND T2.Election_Cycle = ""Spring""",Trouvez l'âge moyen des étudiantes (le sexe est F) qui ont des votes de secrétaire lors du cycle électoral du printemps.
"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = ""F"" AND T2.Election_Cycle = ""Spring""",Quel est l'âge moyen des étudiantes ayant des votes de secrétaire lors du cycle électoral du printemps ?
"SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code = ""PIT""",Trouvez les prénoms distincts de tous les étudiants qui ont des votes de vice-président et dont le code de ville n'est pas PIT.
"SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code = ""PIT""",Quels sont les prénoms distincts des étudiants qui ont des votes de vice-président et résident dans une ville dont le code de ville n'est pas PIT ?
"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = ""2192""",Trouvez les noms de famille distincts de tous les étudiants qui ont des votes de président et dont le conseiller n'est pas 2192.
"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = ""2192""",Quels sont les noms de famille distincts des étudiants qui ont des votes de président mais qui n'ont pas 2192 comme conseiller ?
"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = ""8741""",Trouvez les noms de famille distincts de tous les étudiants qui ont des votes de président et dont le conseiller est 8741.
"SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = ""8741""",Quels sont les noms de famille distincts des étudiants qui ont des votes de président et qui ont 8741 comme conseiller ?
"SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor","Pour chaque conseiller, indiquez le nombre total d'étudiants qu'il a conseillés."
"SELECT Advisor , count(*) FROM STUDENT GROUP BY Advisor",Combien d'étudiants compte chaque conseiller ?
SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*) > 2,Déclarez tous les conseillers qui conseillent plus de 2 étudiants.
SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*) > 2,Quels conseillers ont plus de deux étudiants?
SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*) > 2,Déclarez les conseillers distincts qui ont plus de 2 étudiants.
SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*) > 2,Quels conseillers conseillent plus de 2 étudiants ?
SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*) < 3,Déclarez toutes les majeures qui comptent moins de 3 étudiants.
SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*) < 3,Quelles sont les majeures que moins de trois étudiants étudient ?
"SELECT Election_Cycle , count(*) FROM VOTING_RECORD GROUP BY Election_Cycle","Pour chaque cycle électoral, indiquez le nombre de votes enregistrés."
"SELECT Election_Cycle , count(*) FROM VOTING_RECORD GROUP BY Election_Cycle",Comptez le nombre d'enregistrements de vote pour chaque cycle électoral.
SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1,Quelle majeure a le plus d'étudiants?
SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1,Trouvez la majeure qui est étudiée par le plus grand nombre d'étudiants.
"SELECT Major FROM STUDENT WHERE Sex = ""F"" GROUP BY major ORDER BY count(*) DESC LIMIT 1",Quelle est la majeure la plus courante chez les étudiantes (le sexe est F) ?
"SELECT Major FROM STUDENT WHERE Sex = ""F"" GROUP BY major ORDER BY count(*) DESC LIMIT 1",Trouvez la majeure qui est étudiée par le plus d'étudiantes.
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1,Quel est le city_code de la ville dans laquelle vivent le plus d'étudiants ?
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1,Renvoie le code de la ville qui compte le plus d'étudiants.
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1,Trouvez le code de la ville où vivent la plupart des étudiants.
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de la ville avec le plus d'étudiants ?
SELECT count(*) FROM ref_colors,Combien de couleurs y a-t-il?
SELECT count(*) FROM ref_colors,Comptez le nombre de couleurs.
SELECT count(*) FROM CHARACTERISTICS,Combien y a-t-il de caractéristiques ?
SELECT count(*) FROM CHARACTERISTICS,Comptez le nombre de caractéristiques.
"SELECT product_name , typical_buying_price FROM products",Quels sont les noms et les prix d'achat de tous les produits ?
"SELECT product_name , typical_buying_price FROM products",Renvoyez les noms et les prix d'achat typiques de tous les produits.
SELECT color_description FROM ref_colors,Énumérez la description de toutes les couleurs.
SELECT color_description FROM ref_colors,Quelles sont les descriptions pour chaque couleur ?
SELECT DISTINCT characteristic_name FROM CHARACTERISTICS,Retrouvez les noms de toutes les caractéristiques du produit.
SELECT DISTINCT characteristic_name FROM CHARACTERISTICS,Quels sont les différents noms des caractéristiques du produit ?
"SELECT product_name FROM products WHERE product_category_code = ""Spices""","Comment s'appellent les produits de la catégorie ""Épices"" ?"
"SELECT product_name FROM products WHERE product_category_code = ""Spices""",Renvoie les noms des produits dans la catégorie 'Épices'.
"SELECT T1.product_name , T2.color_description , T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = ""Herbs""","Énumérez les noms, les descriptions de couleur et les descriptions de produits des produits de la catégorie ""Herbes""."
"SELECT T1.product_name , T2.color_description , T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = ""Herbs""","Quels sont les noms, les descriptions de couleurs et les descriptions de produits pour les produits de la catégorie ""Herbes"" ?"
"SELECT count(*) FROM products WHERE product_category_code = ""Seeds""","Combien de produits y a-t-il dans la catégorie ""Graines"" ?"
"SELECT count(*) FROM products WHERE product_category_code = ""Seeds""",Comptez le nombre de produits dans la catégorie 'Graines'.
"SELECT count(*) FROM products WHERE product_category_code = ""Spices"" AND typical_buying_price > 1000","Trouvez le nombre de produits de la catégorie ""Épices"" et généralement vendus au-dessus de 1000."
"SELECT count(*) FROM products WHERE product_category_code = ""Spices"" AND typical_buying_price > 1000","Combien de produits se trouvent dans la catégorie ""Épices"" et ont un prix typique supérieur à 1 000 € ?"
"SELECT product_category_code , typical_buying_price FROM products WHERE product_name = ""cumin""","Quelle est la catégorie et le prix d'achat typique du produit portant le nom ""cumin"" ?"
"SELECT product_category_code , typical_buying_price FROM products WHERE product_name = ""cumin""",Renvoie le code de catégorie et le prix type du 'cumin'.
"SELECT product_category_code FROM products WHERE product_name = ""flax""","A quelle catégorie appartient le produit ""lin"" ?"
"SELECT product_category_code FROM products WHERE product_name = ""flax""",Quel est le code de la catégorie à laquelle appartient le produit portant le nom 'lin' ?
SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow',Quel est le nom du produit dont la description de couleur est « jaune » ?
SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow',Donnez le nom des produits qui ont une description de couleur 'jaune'.
SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow',"Listez tous les noms de produits avec la description de couleur ""blanc""."
SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow',Comment s'appellent les produits dont la couleur est « blanc » ?
SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%',Trouvez les descriptions des catégories des produits dont les descriptions incluent la lettre 't'.
SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%',Quelles sont les descriptions des catégories dans lesquelles se trouvent les produits dont les descriptions contiennent la lettre t ?
"SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = ""catnip""","Quelle est la description de la couleur du produit avec le nom ""herbe à chat"" ?"
"SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = ""catnip""",Donnez la description de couleur pour le produit 'herbe à chat'.
"SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = ""chervil""","Quel est le code couleur et la description du produit nommé ""cerfeuil"" ?"
"SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = ""chervil""",Renvoyez le code couleur et la description du produit avec le nom 'cerfeuil'.
"SELECT t1.product_id , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code JOIN product_characteristics AS t3 ON t1.product_id = t3.product_id GROUP BY t1.product_id HAVING count(*) >= 2",Retrouvez l'identifiant et la description couleur des produits avec au moins 2 caractéristiques.
"SELECT t1.product_id , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code JOIN product_characteristics AS t3 ON t1.product_id = t3.product_id GROUP BY t1.product_id HAVING count(*) >= 2",Quels sont les identifiants de produit et les descriptions de couleur pour les produits avec deux caractéristiques ou plus ?
"SELECT t1.product_name , t1.typical_buying_price , t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = ""yellow""","Quels sont le nom et les prix d'achat et de vente typiques des produits dont la couleur est décrite comme ""jaune"" ?"
"SELECT t1.product_name , t1.typical_buying_price , t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = ""yellow""",Renvoyez les noms et les prix d'achat et de vente typiques des produits dont la description de couleur est « jaune ».
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = ""sesame""",Combien de caractéristiques le produit nommé « sésame » possède-t-il ?
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = ""sesame""",Comptez le nombre de caractéristiques que possède le produit 'sésame'.
"SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""sesame""",Combien de noms caractéristiques distincts le produit « cumin » possède-t-il ?
"SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""sesame""",Comptez le nombre de noms caractéristiques différents du produit « cumin ».
"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""sesame""",Quels sont tous les noms caractéristiques du produit « sésame » ?
"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""sesame""",Renvoyer les noms caractéristiques du produit 'sésame'.
"SELECT t3.characteristic_name , t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""cumin""","Lister tous les noms caractéristiques et types de données du produit ""cumin""."
"SELECT t3.characteristic_name , t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""cumin""","Quels sont les noms et les types de données des caractéristiques du produit ""cumin"" ?"
"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""sesame"" AND t3.characteristic_type_code = ""Grade""","Énumérer toutes les caractéristiques du produit nommé ""sésame"" avec le code de type ""Grade""."
"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""sesame"" AND t3.characteristic_type_code = ""Grade""",Quels sont les noms des caractéristiques du produit « sésame » qui ont le code de type de caractéristique « Grade » ?
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""laurel""","Combien de caractéristiques le produit nommé ""laurier"" possède-t-il ?"
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""laurel""",Comptez le nombre de caractéristiques du produit nommé 'laurier'.
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""laurel""","Trouvez le nombre de caractéristiques que possède le produit ""lin""."
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = ""laurel""",Comptez le nombre de caractéristiques du produit « lin ».
"SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = ""red"" AND t3.characteristic_name = ""fast""","Trouvez le nom des produits qui ont la description de couleur ""rouge"" et qui ont le nom caractéristique ""rapide""."
"SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = ""red"" AND t3.characteristic_name = ""fast""",Quels sont les noms des produits dont la description de couleur est « rouge » et la caractéristique « rapide » ?
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = ""hot""","Combien de produits ont la caractéristique nommée ""chaude"" ?"
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = ""hot""",Comptez le nombre de produits avec les caractéristiques 'chaudes'.
"SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = ""warm""",Dressez la liste de tous les noms distincts des produits avec le nom caractéristique 'chaud'.
"SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = ""warm""","Quels sont les différents noms de produits pour les produits qui ont la caractéristique ""chaud"" : ?"
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = ""red"" AND t3.characteristic_name = ""slow""","Trouvez le nombre de produits dont la couleur est décrite comme ""rouge"" et qui ont une caractéristique nommée ""lent""."
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = ""red"" AND t3.characteristic_name = ""slow""",Combien de produits ont la description de couleur « rouge » et le nom caractéristique « lent » ?
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = ""white"" OR t3.characteristic_name = ""hot""","Comptez les produits qui ont la description de couleur ""blanc"" ou qui ont le nom caractéristique ""chaud""."
"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = ""white"" OR t3.characteristic_name = ""hot""",Combien de produits ont leur couleur décrite comme « blanche » ou ont une caractéristique avec le nom « chaud » ?
"SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = ""Herbs""","Quelle est l'unité de mesure du code de catégorie de produits ""Herbes"" ?"
"SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code = ""Herbs""",Renvoie l'unité de mesure pour les produits 'Herbe'.
"SELECT product_category_description FROM ref_product_categories WHERE product_category_code = ""Spices""","Trouvez la description de la catégorie de produits de la catégorie de produits avec le code ""Épices""."
"SELECT product_category_description FROM ref_product_categories WHERE product_category_code = ""Spices""",Quelle est la description de la catégorie de produit avec le code 'Épices' ?
"SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = ""Herbs""","Quelle est la description de la catégorie de produits et l'unité de mesure de la catégorie ""Herbes"" ?"
"SELECT product_category_description , unit_of_measure FROM ref_product_categories WHERE product_category_code = ""Herbs""","Renvoie la description et l'unité de mesure des produits de la catégorie ""Herbes""."
"SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = ""cumin""","Quelle est l'unité de mesure du produit nommé ""cumin"" ?"
"SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = ""cumin""",Donnez l'unité de mesure du produit nommé 'cumin'.
"SELECT t2.unit_of_measure , t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = ""chervil""","Trouvez l'unité de mesure et le code de catégorie de produit du produit nommé ""cerfeuil""."
"SELECT t2.unit_of_measure , t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = ""chervil""",Quelles sont l'unité de mesure et le code de catégorie du produit 'cerfeuil' ?
"SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code = t3.color_code WHERE t3.color_description = ""white"" AND t2.unit_of_measure != ""Handful""","Trouvez les noms de produits qui sont colorés en ""blanc"" mais qui n'ont pas d'unité de mesure ""Poignée""."
"SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code = t3.color_code WHERE t3.color_description = ""white"" AND t2.unit_of_measure != ""Handful""",Quels sont les noms des produits qui ne sont pas de couleur « blanche » et qui ne sont pas mesurés par l'unité « Poignée » ?
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1,Quelle est la description de la couleur pour la plupart des produits ?
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1,Renvoie la description de la couleur la plus courante dans tous les produits.
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1,Quelle est la description de la couleur utilisée par le moins de produits ?
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1,Donnez la description de la couleur la moins courante parmi les produits.
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom caractéristique utilisé par la plupart des produits ?
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1,Renvoie le nom de la caractéristique la plus courante dans tous les produits.
"SELECT characteristic_name , other_characteristic_details , characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name , t1.other_characteristic_details , t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id = t2.characteristic_id","Quels sont les noms, les détails et les types de données des caractéristiques qui ne sont jamais utilisées par aucun produit ?"
"SELECT characteristic_name , other_characteristic_details , characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name , t1.other_characteristic_details , t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id = t2.characteristic_id","Donnez les noms, les détails et les types de données des caractéristiques qui ne se trouvent dans aucun produit."
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*) >= 2,Quels sont les noms caractéristiques utilisés au moins deux fois dans tous les produits ?
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*) >= 2,Donnez les noms des caractéristiques qui se trouvent dans deux produits ou plus ?
SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products ),Combien de couleurs ne sont jamais utilisées par aucun produit ?
SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products ),Comptez le nombre de couleurs qui ne sont utilisées dans aucun produit.
SELECT count(*) FROM event,Combien y a-t-il d'événements ?
SELECT name FROM event ORDER BY YEAR DESC,"Répertoriez tous les noms d'événements par année, du plus récent au plus ancien."
SELECT name FROM event ORDER BY YEAR DESC LIMIT 1,Quel est le nom de l'événement qui s'est produit au cours de l'année la plus récente ?
SELECT count(*) FROM stadium,Combien y a-t-il de stades ?
SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1,Trouvez le nom du stade qui a la capacité maximale.
SELECT name FROM stadium WHERE capacity < (SELECT avg(capacity) FROM stadium),Trouvez les noms des stades dont la capacité est inférieure à la capacité moyenne.
SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1,Trouvez le pays qui a le plus de stades.
SELECT country FROM stadium GROUP BY country HAVING count(*) <= 3,Quel pays a au plus 3 stades répertoriés ?
SELECT country FROM stadium WHERE capacity > 60000 INTERSECT SELECT country FROM stadium WHERE capacity < 50000,Quel pays possède à la fois des stades d'une capacité supérieure à 60 000 et des stades d'une capacité inférieure à 50 000 ?
SELECT count(DISTINCT city) FROM stadium WHERE opening_year < 2006,Combien de villes ont un stade ouvert avant 2006 ?
"SELECT country , count(*) FROM stadium GROUP BY country",Combien de stades compte chaque pays ?
SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year > 2006,Quels pays n'ont pas de stade ouvert après 2006 ?
SELECT count(*) FROM stadium WHERE country != 'Russia',"Combien de stades ne sont pas dans le pays ""Russie"" ?"
SELECT name FROM swimmer ORDER BY meter_100,"Trouvez les noms de tous les nageurs, triés par leurs scores au 100 mètres en ordre croissant."
SELECT count(DISTINCT nationality) FROM swimmer,De combien de pays différents viennent tous les nageurs ?
"SELECT nationality , count(*) FROM swimmer GROUP BY nationality HAVING count(*) > 1",Énumérez les pays qui comptent plus d'un nageur.
"SELECT meter_200 , meter_300 FROM swimmer WHERE nationality = 'Australia'","Retrouvez tous les résultats du 200 mètres et du 300 mètres des nageurs de nationalité ""Australie""."
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win',"Trouvez les noms des nageurs qui ont un résultat de ""victoire""."
SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1,Comment s'appelle le stade qui a accueilli le plus d'événements ?
"SELECT t1.name , t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id = t2.stadium_id WHERE t2.name = 'World Junior'","Trouvez le nom et la capacité du stade où s'est déroulé l'événement nommé ""Mondial junior""."
SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event),Trouvez les noms des stades qui n'ont jamais eu d'événement.
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom du nageur qui a le plus de records.
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*) >= 2,Trouvez le nom du nageur qui a au moins 2 records.
"SELECT t1.name , t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY t2.swimmer_id HAVING count(*) > 1","Trouvez le nom et la nationalité du nageur qui a gagné (c'est-à-dire dont le résultat est ""gagner"") plus d'une fois."
SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record),Trouvez les noms des nageurs qui n'ont pas de record.
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss',Trouvez les noms des nageurs qui ont à la fois des résultats « victoires » et « défaites » dans le dossier.
SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia',Trouvez les noms des stades où certains nageurs australiens sont allés.
SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id = t2.id JOIN stadium AS t3 ON t3.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1,Trouvez les noms des stades fréquentés par le plus de nageurs.
SELECT * FROM swimmer,Retrouvez tous les détails pour chaque nageur.
SELECT avg(capacity) FROM stadium WHERE opening_year = 2005,Quelle est la capacité moyenne des stades ouverts en 2005 ?
SELECT count(*) FROM railway,Combien y a-t-il de voies ferrées ?
SELECT Builder FROM railway ORDER BY Builder ASC,Énumérez les constructeurs de chemins de fer par ordre alphabétique croissant.
"SELECT Wheels , LOCATION FROM railway",Énumérez les roues et les emplacements des voies ferrées.
"SELECT max(LEVEL) FROM manager WHERE Country != ""Australia ""","Quel est le niveau maximum de managers dans les pays autres que ""l'Australie"" ?"
SELECT avg(Age) FROM manager,Quel est l'âge moyen de tous les managers ?
SELECT Name FROM manager ORDER BY LEVEL ASC,Comment s'appellent les managers par ordre croissant de niveau ?
"SELECT Name , Arrival FROM train",Quels sont les noms et heures d'arrivée des trains ?
SELECT Name FROM manager ORDER BY Age DESC LIMIT 1,Comment s'appelle le plus ancien gérant ?
"SELECT T2.Name , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID",Montrez les noms des trains et les emplacements des chemins de fer dans lesquels ils se trouvent.
"SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name = ""Andaman Exp""","Montrez le constructeur de chemins de fer associé aux trains nommés ""Andaman Exp""."
"SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*) > 1",Afficher l'identifiant et l'emplacement des chemins de fer associés à plusieurs trains.
"SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1",Afficher l'identifiant et le constructeur du chemin de fer associé au plus grand nombre de trains.
"SELECT Builder , COUNT(*) FROM railway GROUP BY Builder","Montrez différents constructeurs de voies ferrées, ainsi que le nombre correspondant de voies ferrées utilisant chaque constructeur."
SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1,Montrez le constructeur de chemins de fer le plus courant.
"SELECT LOCATION , COUNT(*) FROM railway GROUP BY LOCATION",Montrez différents emplacements de chemins de fer ainsi que le nombre correspondant de chemins de fer à chaque emplacement.
SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*) > 1,Montrez les emplacements qui ont plus d'un chemin de fer.
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train),Indiquez le numéro d'objet des chemins de fer qui n'ont pas de trains.
SELECT Country FROM manager WHERE Age > 50 INTERSECT SELECT Country FROM manager WHERE Age < 46,Montrez les pays qui ont à la fois des managers de plus de 50 ans et des managers de moins de 46 ans.
SELECT DISTINCT Country FROM manager,Afficher les pays distincts des managers.
SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC,Afficher les années de travail des managers par ordre décroissant de leur niveau.
SELECT Country FROM manager WHERE Age > 50 OR Age < 46,Montrez les pays qui ont des managers âgés de plus de 50 ans ou de moins de 46 ans.
SELECT count(*) FROM addresses WHERE country = 'USA',Combien y a-t-il d'adresses dans le pays États-Unis ?
SELECT DISTINCT city FROM addresses,Afficher toutes les villes distinctes dans l'enregistrement d'adresse.
SELECT DISTINCT city FROM addresses,Récupérer la liste de toutes les villes.
SELECT DISTINCT city FROM addresses,Lister toutes les villes distinctes
"SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county",Afficher chaque état et le nombre d'adresses dans chaque état.
"SELECT customer_name , customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)",Afficher les noms et téléphones des clients qui ne disposent pas d'informations d'adresse.
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Afficher le nom du client qui a le plus de commandes.
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Part',Afficher les noms des clients qui ont à la fois une commande en statut terminé et une commande en statut partiel.
"SELECT customer_name , customer_phone , payment_method_code FROM customers ORDER BY customer_number DESC","Affichez le nom, le téléphone et le code de mode de paiement de tous les clients par ordre décroissant de numéro de client."
"SELECT T1.product_name , sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",Affichez le nom du produit et la quantité totale de la commande pour chaque produit.
"SELECT min(product_price) , max(product_price) , avg(product_price) FROM products","Afficher le prix minimum, maximum et moyen pour tous les produits."
SELECT count(*) FROM products WHERE product_price > (SELECT avg(product_price) FROM products),Combien de produits ont un prix supérieur à la moyenne ?
"SELECT T2.customer_name , T3.city , T1.date_from , T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id","Affichez le nom du client, la ville de l'adresse du client, la date de et la date de pour chaque historique d'adresse client."
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method_code = 'Credit Card' GROUP BY T1.customer_id HAVING count(*) > 2,Afficher les noms des clients qui utilisent le mode de paiement par carte de crédit et qui ont plus de 2 commandes.
"SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1",Quels sont le nom et le téléphone du client avec la quantité de produit la plus commandée ?
"SELECT product_type_code , product_name FROM products WHERE product_price > 1000 OR product_price < 500",Afficher le type de produit et le nom des produits dont le prix est supérieur à 1 000 ou inférieur à 500.
SELECT dorm_name FROM dorm WHERE gender = 'F',Trouvez le nom des dortoirs réservés aux femmes (genre F).
SELECT dorm_name FROM dorm WHERE gender = 'F',Comment s'appellent les dortoirs réservés aux femmes ?
SELECT dorm_name FROM dorm WHERE student_capacity > 300,Trouvez le nom des dortoirs pouvant accueillir plus de 300 étudiants.
SELECT dorm_name FROM dorm WHERE student_capacity > 300,Comment s'appellent tous les dortoirs pouvant accueillir plus de 300 étudiants ?
SELECT count(*) FROM student WHERE sex = 'F' AND age < 25,Combien d'étudiantes (le sexe est F) dont l'âge est inférieur à 25 ans ?
SELECT count(*) FROM student WHERE sex = 'F' AND age < 25,Combien d'étudiantes de moins de 25 ans ?
SELECT fname FROM student WHERE city_code = 'PHL' AND age BETWEEN 20 AND 25,Trouvez le prénom des étudiants vivant dans la ville PHL dont l'âge est compris entre 20 et 25 ans.
SELECT fname FROM student WHERE city_code = 'PHL' AND age BETWEEN 20 AND 25,Quel est le prénom des étudiants âgés de 20 à 25 ans et vivant dans la ville de PHL ?
SELECT count(*) FROM dorm,Combien y a-t-il de dortoirs ?
SELECT count(*) FROM dorm,Combien de dortoirs sont dans la base de données ?
SELECT count(*) FROM dorm_amenity,Trouver le nombre d'équipements distincts.
SELECT count(*) FROM dorm_amenity,Combien y a-t-il d'équipements de dortoir différents ?
SELECT sum(student_capacity) FROM dorm,Trouvez la capacité totale de tous les dortoirs.
SELECT sum(student_capacity) FROM dorm,Quelle est la capacité totale d'étudiants de tous les dortoirs ?
"SELECT avg(age) , city_code FROM student GROUP BY city_code",Trouvez l'âge moyen de tous les étudiants vivant dans chaque ville.
"SELECT avg(age) , city_code FROM student GROUP BY city_code",Quel est l'âge moyen pour chaque ville et quelles sont ces villes ?
"SELECT avg(student_capacity) , sum(student_capacity) FROM dorm WHERE gender = 'X'",Trouvez la capacité moyenne et totale des dortoirs pour les étudiants de sexe X.
"SELECT avg(student_capacity) , sum(student_capacity) FROM dorm WHERE gender = 'X'",Quelle est la capacité moyenne et totale de tous les dortoirs de sexe X ?
SELECT count(DISTINCT dormid) FROM has_amenity,Trouvez le nombre de dortoirs qui ont des commodités.
SELECT count(DISTINCT dormid) FROM has_amenity,Combien de dortoirs disposent d'équipements ?
SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity),Trouver le nom des dortoirs qui n'ont aucune commodité
SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity),Quels sont les noms de tous les dortoirs qui n'ont pas de commodités ?
SELECT count(DISTINCT gender) FROM dorm,Trouvez le nombre de genres distincts pour les dortoirs.
SELECT count(DISTINCT gender) FROM dorm,Combien de genres différents y a-t-il dans les dortoirs ?
"SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",Trouvez la capacité et le type de sexe du dortoir dont le nom a la sous-chaîne 'Donateur'.
"SELECT student_capacity , gender FROM dorm WHERE dorm_name LIKE '%Donor%'",Quelle est la capacité d'accueil des étudiants et le type de sexe pour le dortoir dont le nom est la phrase Donateur ?
"SELECT dorm_name , gender FROM dorm WHERE student_capacity > 300 OR student_capacity < 100",Trouvez le nom et le type de sexe des dortoirs dont la capacité est supérieure à 300 ou inférieure à 100.
"SELECT dorm_name , gender FROM dorm WHERE student_capacity > 300 OR student_capacity < 100",Quels sont les noms et types de dortoirs qui ont une capacité supérieure à 300 ou inférieure à 100 ?
"SELECT count(DISTINCT major) , count(DISTINCT city_code) FROM student",Trouvez les numéros de différentes majors et villes.
"SELECT count(DISTINCT major) , count(DISTINCT city_code) FROM student",Combien y a-t-il de majors différentes et combien de codes de ville différents y a-t-il pour chaque étudiant ?
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room',Trouvez le nom des dortoirs qui ont à la fois un salon TV et une salle d'étude comme commodités.
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room',Quel est le nom du dortoir avec à la fois un salon de télévision et une salle d'étude répertoriés comme équipements ?
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room',Trouvez le nom des dortoirs qui ont un salon TV mais pas de salle d'étude comme équipement.
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room',Quel est le nom de chaque dortoir qui dispose d'une salle de télévision mais pas de salles d'étude ?
SELECT lname FROM student WHERE sex = 'F' AND city_code = 'BAL' UNION SELECT lname FROM student WHERE sex = 'M' AND age < 20,"Trouvez le nom de famille des étudiants qui sont soit des femmes (le sexe est F) et vivent dans la ville de code BAL, soit des hommes (le sexe est M) et âgés de moins de 20 ans."
SELECT lname FROM student WHERE sex = 'F' AND city_code = 'BAL' UNION SELECT lname FROM student WHERE sex = 'M' AND age < 20,Quel est le nom de famille de chaque étudiant qui est une femme ou qui vit dans une ville avec le code BAL ou un homme et qui a moins de 20 ans ?
SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1,Trouvez le nom du dortoir avec la plus grande capacité.
SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1,Quels sont les noms du dortoir avec la plus grande capacité ?
SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name,Listez par ordre alphabétique toutes les commodités différentes.
SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name,Quels sont les différents noms d'équipements de dortoir par ordre alphabétique ?
"SELECT fname , lname FROM student WHERE age < (SELECT avg(age) FROM student)",Trouvez le prénom et le nom des élèves dont l'âge est inférieur à la moyenne d'âge.
"SELECT fname , lname FROM student WHERE age < (SELECT avg(age) FROM student)",Quel est le prénom et le nom de tous les élèves plus jeunes que la moyenne ?
"SELECT fname , lname FROM student WHERE city_code != 'HKG' ORDER BY age",Indiquez le prénom et le nom des étudiants qui ne vivent pas dans la ville avec le code HKG et triez les résultats par âge.
"SELECT fname , lname FROM student WHERE city_code != 'HKG' ORDER BY age",Quels sont les noms et prénoms de tous les étudiants qui ne vivent pas dans la ville HKG et classez les résultats par âge ?
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name,Indiquez le nom de toutes les commodités dont dispose Anonymous Donor Hall et triez les résultats par ordre alphabétique.
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name,Quelles sont les commodités par ordre alphabétique dont dispose Anonymous Donor Hall ?
"SELECT count(*) , sum(student_capacity) , gender FROM dorm GROUP BY gender",Trouvez le nombre de dortoirs et la capacité totale pour chaque sexe.
"SELECT count(*) , sum(student_capacity) , gender FROM dorm GROUP BY gender",Combien y a-t-il de dortoirs et quelle est la capacité totale pour chaque sexe ?
"SELECT avg(age) , max(age) , sex FROM student GROUP BY sex",Trouvez l'âge moyen et le plus élevé des étudiants de sexe différent.
"SELECT avg(age) , max(age) , sex FROM student GROUP BY sex",Quel est l'âge moyen et le plus élevé pour chaque sexe d'étudiant ?
"SELECT count(*) , major FROM student GROUP BY major",Trouvez le nombre d'étudiants dans chaque majeure.
"SELECT count(*) , major FROM student GROUP BY major",Combien y a-t-il d'étudiants dans chaque majeure?
"SELECT count(*) , avg(age) , city_code FROM student GROUP BY city_code",Trouvez le nombre et l'âge moyen des étudiants vivant dans chaque ville.
"SELECT count(*) , avg(age) , city_code FROM student GROUP BY city_code",Combien y a-t-il d'étudiants dans chaque ville et quelle est leur moyenne d'âge ?
"SELECT count(*) , avg(age) , city_code FROM student WHERE sex = 'M' GROUP BY city_code",Trouvez l'âge moyen et le nombre d'étudiants masculins (de sexe M) dans chaque ville.
"SELECT count(*) , avg(age) , city_code FROM student WHERE sex = 'M' GROUP BY city_code",Quel est l'âge moyen et combien d'étudiants masculins y a-t-il dans chaque ville ?
"SELECT count(*) , city_code FROM student GROUP BY city_code HAVING count(*) > 1",Trouvez le nombre d'étudiants pour les villes où il y a plus d'un étudiant.
"SELECT count(*) , city_code FROM student GROUP BY city_code HAVING count(*) > 1","Combien y a-t-il d'étudiants dans chaque ville, et quelles villes ont plus d'une ville ?"
"SELECT fname , lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)",Trouvez le prénom et le nom des étudiants qui ne sont pas dans la plus grande majeure.
"SELECT fname , lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)",Quels sont le prénom et le nom des étudiants qui ne sont pas dans la plus grande majeure ?
"SELECT count(*) , sex FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY sex",Trouvez le nombre d'élèves dont l'âge est supérieur à l'âge moyen pour chaque sexe.
"SELECT count(*) , sex FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY sex",Combien d'élèves sont plus âgés que la moyenne pour chaque sexe ?
"SELECT avg(T1.age) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name",Trouvez l'âge moyen des étudiants vivant dans chaque dortoir et le nom du dortoir.
"SELECT avg(T1.age) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name",Quel est l'âge moyen de chaque dortoir et quels sont les noms de chaque dortoir ?
"SELECT count(*) , T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid",Trouvez le nombre d'équipements pour chacun des dortoirs pouvant accueillir plus de 100 étudiants.
"SELECT count(*) , T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid","Pour chaque dortoir, combien d'équipements possède-t-il ?"
"SELECT count(*) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name",Trouvez le nombre d'étudiants âgés de plus de 20 ans dans chaque dortoir.
"SELECT count(*) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name",Combien d'étudiants ont plus de 20 ans dans chaque dortoir ?
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall',Trouvez le prénom des étudiants qui vivent dans le Smith Hall.
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall',Quels sont les prénoms de tous les étudiants de Smith Hall ?
SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.student_capacity = (SELECT max(student_capacity) FROM dorm),Trouvez l'âge moyen des étudiants qui vivent dans le dortoir avec la plus grande capacité.
SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.student_capacity = (SELECT max(student_capacity) FROM dorm),Quel est l'âge moyen des étudiants qui vivent dans le dortoir avec la plus grande capacité ?
SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M',Trouvez le nombre total d'étudiants vivant dans le dortoir masculin (avec le sexe M).
SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M',Quel est le nombre total d'étudiants qui vivent dans un dortoir pour hommes ?
SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F',Trouver le nombre d'étudiantes (de sexe F) vivant à Smith Hall
SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F',Combien d'étudiantes vivent à Smith Hall ?
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall',Trouvez le nom des commodités dont dispose le dortoir Smith Hall.
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall',Quels sont les noms des commodités dont dispose Smith Hall ?
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name,Trouvez le nom des commodités dont dispose le dortoir Smith Hall. classé les résultats par noms d'agrément.
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name,De quelles commodités dispose Smith Hall par ordre alphabétique ?
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de l'équipement le plus courant dans tous les dortoirs.
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1,Quelle est la commodité la plus courante dans les dortoirs ?
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid = T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid = T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1),Trouvez le prénom des étudiants qui vivent dans le dortoir qui a le plus grand nombre de commodités.
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid = T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid = T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1),Quels sont les prénoms de tous les étudiants qui vivent dans le dortoir avec le plus de commodités ?
"SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1",Trouvez le nom et la capacité du dortoir avec le moins de commodités.
"SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1",Quel est le nom et la capacité du dortoir avec le moins de commodités ?
SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge',Trouvez le nom des dortoirs qui n'ont pas de salon de télévision.
SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge',Quels sont les noms du dortoir qui n'a pas de salon de télévision ?
"SELECT T1.fname , T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge')",Trouvez le prénom et le nom des étudiants qui vivent dans les dortoirs qui disposent d'un salon TV.
"SELECT T1.fname , T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge')",Quels sont les noms et prénoms de tous les étudiants qui vivent dans un dortoir avec un salon TV ?
"SELECT T1.fname , T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge')",Trouvez le prénom et l'âge des étudiants qui vivent dans les dortoirs qui n'ont pas de salon TV.
"SELECT T1.fname , T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge')",Quel est le prénom et l'âge de chaque étudiant qui vit dans un dortoir avec un salon TV ?
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith',Trouvez le nom des équipements du dortoir où vit l'étudiant dont le nom de famille est Smith.
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith',Quels sont les équipements du dortoir dans lequel vit un étudiant dont le nom de famille est Smith ?
"SELECT email_address , phone_number FROM customers ORDER BY email_address , phone_number","Trouvez les e-mails et numéros de téléphone de tous les clients, classés par adresse e-mail et numéro de téléphone."
"SELECT email_address , phone_number FROM customers ORDER BY email_address , phone_number","Quels sont les e-mails et numéros de téléphone de tous les clients, triés par adresse e-mail et numéro de téléphone ?"
"SELECT town_city FROM customers WHERE customer_type_code = ""Good Credit Rating"" GROUP BY town_city ORDER BY count(*) LIMIT 1","Quelle ville compte le moins de clients dont le code de type est ""Bonne cote de crédit"" ?"
"SELECT town_city FROM customers WHERE customer_type_code = ""Good Credit Rating"" GROUP BY town_city ORDER BY count(*) LIMIT 1","Renvoyez la ville avec le code de type de client ""Bonne cote de crédit"" qui avait le moins de clients."
"SELECT t1.product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Indiquez le nom de tous les produits ainsi que le nombre de plaintes qu'ils ont reçues.
"SELECT t1.product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",Quels sont les différents noms de produits et combien de réclamations chacun a-t-il reçues ?
SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1,Trouvez les e-mails des clients qui ont déposé une plainte du produit avec le plus de plaintes.
SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1,Quels sont les emails des clients qui ont déposé des réclamations sur le produit qui a eu le plus grand nombre de réclamations ?
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1,Quels produits ont été réclamés par le client qui a déposé le moins de réclamations ?
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1,Renvoyez les noms des produits qui ont fait l'objet de plaintes déposées par le client qui a déposé le moins de plaintes.
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1,Quel est le numéro de téléphone du client qui a déposé la plainte la plus récente ?
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1,Renvoyez le numéro de téléphone du client qui a déposé la plainte la plus récente.
"SELECT email_address , phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)",Trouvez l'e-mail et le numéro de téléphone des clients qui n'ont jamais déposé de plainte auparavant.
"SELECT email_address , phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)",Quels sont les e-mails et numéros de téléphone des clients qui n'ont jamais déposé de réclamation ?
SELECT phone_number FROM customers UNION SELECT phone_number FROM staff,Trouvez le numéro de téléphone de tous les clients et du personnel.
SELECT phone_number FROM customers UNION SELECT phone_number FROM staff,Quels sont les numéros de téléphone de tous les clients et de tous les membres du personnel ?
"SELECT product_description FROM products WHERE product_name = ""Chocolate""","Quelle est la description du produit nommé ""Chocolat"" ?"
"SELECT product_description FROM products WHERE product_name = ""Chocolate""","Renvoyez la description du produit nommé ""Chocolat""."
"SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",Trouvez le nom et la catégorie du produit le plus cher.
"SELECT product_name , product_category_code FROM products ORDER BY product_price DESC LIMIT 1",Quel est le nom et le code de catégorie du produit avec le prix le plus élevé ?
SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints),Retrouvez les prix des produits qui n'ont jamais fait l'objet d'une seule réclamation.
SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints),Quels sont les prix des produits qui n'ont jamais reçu de réclamation ?
"SELECT avg(product_price) , product_category_code FROM products GROUP BY product_category_code",Quel est le prix moyen des produits pour chaque catégorie ?
"SELECT avg(product_price) , product_category_code FROM products GROUP BY product_category_code",Renvoie le prix moyen des produits qui ont chaque code de catégorie.
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id JOIN products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1,Trouvez le nom de famille du membre du personnel qui a traité la réclamation du produit le moins cher.
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id JOIN products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1,Quel est le nom de famille du membre du personnel en charge de la réclamation sur le produit au prix le plus bas ?
SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*) > 3,Quel statut de plainte a plus de 3 enregistrements dans le dossier ?
SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*) > 3,Les codes d'état de réclamation de retour ont plus de 3 réclamations correspondantes ?
"SELECT last_name FROM staff WHERE email_address LIKE ""%wrau%""","Trouvez le nom de famille du personnel dont l'adresse e-mail contient ""wrau""."
"SELECT last_name FROM staff WHERE email_address LIKE ""%wrau%""","Quels sont les noms de famille des membres du personnel dont l'adresse e-mail contient la sous-chaîne ""wrau"" ?"
SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1,Combien y a-t-il de clients dans le type de client avec le plus de clients ?
SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1,Comptez le nombre de clients qui ont le type de client le plus courant.
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1,Quel est le nom de famille du personnel qui a traité la toute première plainte ?
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1,Renvoyez le nom de famille du membre du personnel qui a traité la plainte avec la première date soulevée.
SELECT count(DISTINCT complaint_type_code) FROM complaints,Combien de codes de type de plainte distincts y a-t-il dans la base de données ?
SELECT count(DISTINCT complaint_type_code) FROM complaints,Comptez le nombre de codes de type de plainte différents.
"SELECT address_line_1 , address_line_2 FROM customers WHERE email_address = ""vbogisich@example.org""","Trouvez la ligne d'adresse 1 et 2 du client avec l'email ""vbogisich@example.org""."
"SELECT address_line_1 , address_line_2 FROM customers WHERE email_address = ""vbogisich@example.org""","A quoi correspondent les lignes 1 et 2 de l'adresse du client avec l'email ""vbogisich@example.org"" ?"
"SELECT complaint_status_code , count(*) FROM complaints WHERE complaint_type_code = ""Product Failure"" GROUP BY complaint_status_code",Trouvez le nombre de réclamations avec le type Défaillance du produit pour chaque statut de réclamation.
"SELECT complaint_status_code , count(*) FROM complaints WHERE complaint_type_code = ""Product Failure"" GROUP BY complaint_status_code","Parmi les réclamations avec le code de type ""Défaillance du produit"", combien avaient chaque code d'état différent ?"
SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5,Quels sont les prénoms des 5 meilleurs employés qui ont traité le plus grand nombre de plaintes ?
SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5,Renvoyez les prénoms des 5 membres du personnel qui ont traité le plus de plaintes.
SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1,Quel état a le plus de clients ?
SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1,Donnez l'état qui a le plus de clients.
SELECT count(*) FROM submission,Combien y a-t-il de soumissions ?
SELECT count(*) FROM submission,Comptez le nombre de soumissions.
SELECT Author FROM submission ORDER BY Scores ASC,Dressez la liste des auteurs des soumissions par ordre croissant de scores.
SELECT Author FROM submission ORDER BY Scores ASC,Trouvez l'auteur de chaque soumission et listez-les dans l'ordre croissant du score de soumission.
"SELECT Author , College FROM submission",Quels sont les auteurs des soumissions et leurs collèges ?
"SELECT Author , College FROM submission","Pour chaque soumission, indiquez l'auteur et son collège affilié."
"SELECT Author FROM submission WHERE College = ""Florida"" OR College = ""Temple""","Afficher les noms des auteurs du collège ""Florida"" ou ""Temple"""
"SELECT Author FROM submission WHERE College = ""Florida"" OR College = ""Temple""","Quels auteurs avec des soumissions sont du collège ""Floride"" ou ""Temple"" ?"
SELECT avg(Scores) FROM submission,Quelle est la note moyenne des soumissions ?
SELECT avg(Scores) FROM submission,Calculez le score moyen des soumissions.
SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1,Quel est l'auteur de la soumission avec le score le plus élevé ?
SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1,Trouvez l'auteur qui a obtenu le score le plus élevé dans une soumission.
"SELECT College , COUNT(*) FROM submission GROUP BY College",Indiquez les différents collèges ainsi que le nombre d'auteurs de soumission de chaque collège.
"SELECT College , COUNT(*) FROM submission GROUP BY College","Pour chaque collège, retournez le nom du collège et le nombre d'auteurs avec les soumissions de ce collège."
SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1,Afficher le collège le plus courant d'auteurs de soumissions.
SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1,Quel collège a le plus d'auteurs avec des soumissions ?
SELECT College FROM submission WHERE Scores > 90 INTERSECT SELECT College FROM submission WHERE Scores < 80,Afficher les collèges qui ont à la fois des auteurs avec un score de soumission supérieur à 90 et des auteurs avec un score de soumission inférieur à 80.
SELECT College FROM submission WHERE Scores > 90 INTERSECT SELECT College FROM submission WHERE Scores < 80,Quels collèges ont à la fois des auteurs avec un score de soumission supérieur à 90 et des auteurs avec un score de soumission inférieur à 80 ?
"SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",Afficher les auteurs des soumissions et les résultats d'acceptation de leurs soumissions.
"SELECT T2.Author , T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID","Pour chaque soumission, trouvez son auteur et le résultat d'acceptation."
SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1,Afficher le résultat de la soumission avec le score le plus élevé.
SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1,Quelle soumission a reçu le score le plus élevé dans le résultat d'acceptation. Montrez-moi le résultat.
"SELECT T2.Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",Indiquez chaque auteur et le nombre d'ateliers auxquels il a participé.
"SELECT T2.Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",À combien d'ateliers chaque auteur a-t-il participé ? Renvoyez le nom de l'auteur et le nombre d'ateliers.
SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id) > 1,Montrez les auteurs qui ont des soumissions à plus d'un atelier.
SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id) > 1,Quels auteurs ont soumis à plus d'un atelier ?
"SELECT Date , Venue FROM workshop ORDER BY Venue",Indiquez la date et le lieu de chaque atelier par ordre alphabétique croissant du lieu.
"SELECT Date , Venue FROM workshop ORDER BY Venue",Triez chaque atelier par ordre alphabétique du lieu. Retourner la date et le lieu de chaque atelier.
SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance),Énumérez les auteurs qui n'ont pas de soumission à aucun atelier.
SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance),Quels auteurs n'ont participé à aucun atelier ?
SELECT count(*) FROM INVESTORS,Trouvez le nombre total d'investisseurs.
SELECT Investor_details FROM INVESTORS,Afficher tous les détails de l'investisseur.
SELECT DISTINCT lot_details FROM LOTS,Afficher tous les détails distincts du lot.
SELECT max(amount_of_transaction) FROM TRANSACTIONS,Afficher le montant maximum de la transaction.
"SELECT date_of_transaction , share_count FROM TRANSACTIONS",Afficher toutes les dates et partager le nombre de transactions.
SELECT sum(share_count) FROM TRANSACTIONS,Quelle est la part totale des transactions ?
SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code = 'PUR',Afficher tous les identifiants de transaction avec le code de transaction 'PUR'.
"SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""","Afficher toutes les dates des transactions dont le code de type est ""VENTE""."
"SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE""","Afficher le montant moyen des transactions avec le code de type ""VENTE""."
"SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = ""PUR""","Afficher la description du type de transaction avec le code ""PUR""."
"SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code = ""PUR"" AND share_count > 50","Afficher le montant minimum de transactions dont le code de type est ""PUR"" et dont le nombre de parts est supérieur à 50."
SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction < 10000,Afficher le nombre maximal de parts de transactions dont le montant est inférieur à 10 000
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000,Afficher les dates des transactions si le nombre d'actions est supérieur à 100 ou le montant est supérieur à 1000.
"SELECT T1.transaction_type_description , T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10",Affichez les descriptions et les dates des types de transaction si le nombre de parts est inférieur à 10.
SELECT T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100,Afficher les détails de tous les investisseurs s'ils effectuent une transaction avec un nombre d'actions supérieur à 100.
SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS,Combien de types de transactions distincts sont utilisés dans les transactions ?
"SELECT lot_details , investor_id FROM LOTS",Renvoyez les détails du lot et les identifiants des investisseurs.
"SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = ""l""","Renvoyer les détails des lots appartenant à des investisseurs avec les détails ""l"" ?"
SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000,Quels sont les détails d'achat des transactions d'un montant supérieur à 10 000 ?
"SELECT T1.sales_details , T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000",Quels sont les détails de vente et les dates des transactions d'un montant inférieur à 3000 ?
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50,Quels sont les détails des lots associés à des transactions dont le nombre de parts est inférieur à 50 ?
"SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = ""PUR""","Quels sont les détails des lots associés à des transactions dont le nombre de parts est supérieur à 100 et dont le code de type est ""PUR"" ?"
"SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",Afficher le montant moyen des transactions pour différents types de transactions.
"SELECT transaction_type_code , max(share_count) , min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code",Afficher le nombre de parts maximum et minimum des différents types de transactions.
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id",Afficher le nombre moyen d'actions des transactions pour différents investisseurs.
"SELECT investor_id , avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)","Afficher le nombre moyen d'actions des transactions de chaque investisseur, classé par nombre moyen d'actions."
"SELECT investor_id , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id",Afficher le montant moyen des transactions pour différents investisseurs.
"SELECT T2.lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",Afficher le montant moyen des transactions pour différents lots.
"SELECT T2.lot_id , avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)","Affiche le montant moyen des transactions pour différents lots, classé par montant moyen des transactions."
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code = ""SALE"" GROUP BY investor_id","Afficher le nombre de transactions avec le code de type de transaction ""VENTE"" pour différents investisseurs s'il est supérieur à 0."
"SELECT investor_id , COUNT(*) FROM TRANSACTIONS GROUP BY investor_id",Afficher le nombre de transactions pour différents investisseurs.
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1,Affiche le code de type de transaction qui se produit le moins de fois.
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1,Afficher le code de type de transaction qui se produit le plus fréquemment.
SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1,Afficher la description du type de transaction qui se produit le plus fréquemment.
"SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1",Afficher l'identifiant et les détails de l'investisseur qui a le plus grand nombre de transactions.
"SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",Affichez l'identifiant et les détails des investisseurs qui ont le plus grand nombre de transactions.
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*) >= 2,Afficher les identifiants des investisseurs qui ont au moins deux transactions.
"SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = ""SALE"" GROUP BY T2.investor_id HAVING COUNT(*) >= 2","Afficher les identifiants et les détails des investisseurs qui ont au moins deux transactions avec le code de type ""VENTE""."
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100,Quelles sont les dates des transactions avec au moins 100 actions ou un montant supérieur à 100 ?
SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases,Quels sont les détails de toutes les ventes et achats ?
SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id,Quels sont les détails des lots qui ne sont utilisés dans aucune transaction ?
SELECT count(*) FROM HOTELS,Combien y a-t-il d'hôtels disponibles au total ?
SELECT count(*) FROM HOTELS,Trouver le nombre total d'hôtels disponibles.
SELECT price_range FROM HOTELS,Quelles sont les fourchettes de prix des hôtels ?
SELECT price_range FROM HOTELS,Dites-moi les fourchettes de prix pour tous les hôtels.
SELECT DISTINCT Location_Name FROM LOCATIONS,Afficher tous les noms de lieux distincts.
SELECT DISTINCT Location_Name FROM LOCATIONS,Quels sont les noms de lieux distincts ?
"SELECT Name , Other_Details FROM Staff",Afficher les noms et les détails de tous les membres du personnel.
"SELECT Name , Other_Details FROM Staff",Quel est le nom et les coordonnées de chaque membre du personnel ?
SELECT Tourist_Details FROM VISITORS,Afficher les détails de tous les visiteurs.
SELECT Tourist_Details FROM VISITORS,Quel est le détail de chaque visiteur ?
"SELECT price_range FROM HOTELS WHERE star_rating_code = ""5""",Afficher les gammes de prix des hôtels avec 5 étoiles.
"SELECT price_range FROM HOTELS WHERE star_rating_code = ""5""",Quelles sont les fourchettes de prix des hôtels cinq étoiles ?
"SELECT avg(price_range) FROM HOTELS WHERE star_rating_code = ""5"" AND pets_allowed_yn = 1",Afficher la fourchette de prix moyenne des hôtels classés 5 étoiles et acceptant les animaux de compagnie.
"SELECT avg(price_range) FROM HOTELS WHERE star_rating_code = ""5"" AND pets_allowed_yn = 1",Quelle est la fourchette de prix moyenne des hôtels cinq étoiles qui acceptent les animaux de compagnie ?
"SELECT Address FROM LOCATIONS WHERE Location_Name = ""UK Gallery""","Quelle est l'adresse du lieu ""UK Gallery"" ?"
"SELECT Address FROM LOCATIONS WHERE Location_Name = ""UK Gallery""","Trouvez l'adresse du lieu nommé ""UK Gallery""."
"SELECT Other_Details FROM LOCATIONS WHERE Location_Name = ""UK Gallery""",Quel est le détail de l'emplacement UK Gallery ?
"SELECT Other_Details FROM LOCATIONS WHERE Location_Name = ""UK Gallery""","Renvoie le détail du lieu nommé ""UK Gallery""."
"SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE ""%film%""","Quels noms de lieux contiennent le mot ""film"" ?"
"SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE ""%film%""","Trouvez tous les lieux dont le nom contient le mot ""film""."
SELECT count(DISTINCT Name) FROM PHOTOS,Combien de noms distincts sont associés à toutes les photos ?
SELECT count(DISTINCT Name) FROM PHOTOS,Comptez le nombre de noms distincts associés aux photos.
SELECT DISTINCT Visit_Date FROM VISITS,Quelles sont les dates de visite distinctes ?
SELECT DISTINCT Visit_Date FROM VISITS,Retrouvez toutes les dates de visites distinctes.
"SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = ""bus""",Quels sont les noms des attractions touristiques accessibles en bus ?
"SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = ""bus""",À quelles attractions touristiques peut-on se rendre en bus ? Dites-moi les noms des attractions.
"SELECT Name , Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = ""bus"" OR How_to_Get_There = ""walk""",Quels sont les noms et horaires d'ouverture des attractions touristiques accessibles en bus ou à pied ?
"SELECT Name , Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = ""bus"" OR How_to_Get_There = ""walk""",Trouvez les noms et les heures d'ouverture des attractions touristiques auxquelles nous accédons en bus ou à pied.
SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000,Quelles sont les descriptions du nombre d'étoiles des hôtels dont le prix est supérieur à 10 000 ?
SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000,Donnez-moi les descriptions par étoiles des hôtels qui coûtent plus de 10 000.
"SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",Quels sont les détails et les heures d'ouverture des musées?
"SELECT T1.Museum_Details , T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",Donnez-moi le détail et l'heure d'ouverture de chaque musée.
"SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = ""game1""","Quel est le nom de l'attraction touristique associée à la photo ""game1"" ?"
"SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = ""game1""","Quelle attraction touristique est associée à la photo ""game1"" ? Renvoyez son nom."
"SELECT T1.Name , T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = ""film festival""","Quels sont les noms et les descriptions des photos prises lors de l'attraction touristique ""festival du film"" ?"
"SELECT T1.Name , T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = ""film festival""","Retrouvez les noms et les descriptions des photos prises à l'attraction touristique appelée ""festival du film""."
"SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",Quels sont les détails et les moyens de se rendre aux attractions touristiques liées à la famille royale ?
"SELECT T1.Royal_Family_Details , T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",Quelles attractions touristiques sont liées à la famille royale ? Dites-moi leurs coordonnées et comment nous pouvons y arriver.
"SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = ""walk""",Quels sont les détails des commerces accessibles à pied ?
"SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = ""walk""",Retrouvez le détail des commerces accessibles à pied.
"SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = ""US museum""","Comment s'appelle le personnel qui s'occupe de l'attraction nommée ""US museum"" ?"
"SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = ""US museum""","Dites-moi le nom du personnel en charge de l'attraction appelée ""US museum""."
"SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = ""walk"" OR T2.How_to_Get_There = ""bus""",Quels sont les détails des marchés accessibles à pied ou en bus ?
"SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = ""walk"" OR T2.How_to_Get_There = ""bus""",Retrouvez le détail de tous les marchés accessibles à pied ou en bus.
"SELECT T2.Visit_Date , T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = ""Vincent""",Quelles sont la date de visite et les coordonnées du visiteur dont la fiche est 'Vincent' ?
"SELECT T2.Visit_Date , T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = ""Vincent""",Retrouvez la date de visite et les coordonnées du touriste dont la fiche est 'Vincent'
"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = ""Vincent""",Quelles attractions touristiques le visiteur avec le détail 'Vincent' visite-t-il ?
"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = ""Vincent""",Afficher les attractions touristiques visitées par le touriste dont le détail est 'Vincent'.
"SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Vincent"" OR T2.Tourist_Details = ""Vivian""",Quels sont les noms des attractions touristiques et les dates auxquelles les touristes nommés Vincent ou Vivian s'y sont rendus ?
"SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Vincent"" OR T2.Tourist_Details = ""Vivian""","Pour chaque attraction touristique, retournez son nom et la date à laquelle les touristes nommés Vincent ou Vivian s'y sont rendus."
"SELECT star_rating_code , avg(price_range) FROM HOTELS GROUP BY star_rating_code",Afficher le prix moyen des hôtels pour chaque code de classement par étoiles.
"SELECT star_rating_code , avg(price_range) FROM HOTELS GROUP BY star_rating_code",Quelle est la fourchette de prix moyenne des hôtels pour chaque code de classement par étoiles ?
"SELECT pets_allowed_yn , avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn",Afficher le prix moyen des hôtels pour différentes politiques relatives aux animaux de compagnie.
"SELECT pets_allowed_yn , avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn",Quels sont les prix moyens des hôtels regroupés selon leur politique relative aux animaux de compagnie.
"SELECT hotel_id , star_rating_code FROM HOTELS ORDER BY price_range ASC","Affichez l'identifiant et le nombre d'étoiles de chaque hôtel, classés par prix, du plus bas au plus élevé."
"SELECT hotel_id , star_rating_code FROM HOTELS ORDER BY price_range ASC",Trouvez l'identifiant et le nombre d'étoiles de chaque hôtel et triez-les par ordre croissant de prix.
SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3,Afficher les détails des 3 hôtels les plus chers.
SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3,Quels sont les détails des trois hôtels les plus chers ?
"SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",Affichez les détails et le nombre d'étoiles des 3 hôtels les moins chers.
"SELECT other_hotel_details , star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",Quels sont les détails et le nombre d'étoiles des trois hôtels avec les gammes de prix les plus basses ?
SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1,Montrez le moyen de transport que la plupart des gens choisissent pour se rendre aux attractions touristiques.
SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1,Quel moyen de transport est le plus utilisé pour se rendre aux attractions touristiques ?
"SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",Affichez la description et le code du type d'attraction auquel appartiennent la plupart des attractions touristiques.
"SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",À quel type d'attraction appartiennent le plus d'attractions touristiques ? Dites-moi sa description et son code de type d'attraction.
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There",Indiquez les différentes manières d'accéder aux attractions et le nombre d'attractions accessibles de la manière correspondante.
"SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There","Énumérez tous les moyens possibles pour vous rendre aux attractions, ainsi que le nombre d'attractions accessibles par ces moyens."
"SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID","Affichez les noms, les identifiants et le nombre de visites correspondant des différentes attractions touristiques."
"SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID","Quels sont le nom, l'identifiant et le nombre de visites correspondant pour chaque attraction touristique ?"
"SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) >= 2",Afficher les noms et identifiants des attractions touristiques qui sont visitées au moins deux fois.
"SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) >= 2",Quelles attractions touristiques sont visitées au moins deux fois ? Donnez-moi leurs noms et identifiants.
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) <= 1",Afficher les noms et identifiants des attractions touristiques qui sont visitées au plus une fois.
"SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*) <= 1",Quels sont les noms et identifiants des attractions touristiques qui sont visitées au plus une fois ?
"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = ""660 Shea Crescent"" OR T2.How_to_Get_There = ""walk""",Quels sont les noms des attraits touristiques accessibles à pied ou se trouvant à l'adresse 660 Shea Crescent?
"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = ""660 Shea Crescent"" OR T2.How_to_Get_There = ""walk""",Trouvez les noms des attraits touristiques accessibles à pied ou à l'adresse 660 Shea Crescent.
"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = ""660 Shea Crescent"" OR T2.How_to_Get_There = ""walk""",Quels sont les noms des attractions touristiques accessibles en bus ou se trouvant à l'adresse 254 Ottilie Junction ?
"SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = ""660 Shea Crescent"" OR T2.How_to_Get_There = ""walk""",Trouvez les noms des attraits touristiques accessibles en autobus ou à l'adresse 254 Ottilie Junction.
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping',Quels sont les noms des attractions touristiques qui ont un parking ou des boutiques comme détails de leurs caractéristiques ?
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping',Trouvez les attractions touristiques qui ont un parking ou des magasins comme détails de leurs caractéristiques. Comment s'appellent les attractions ?
"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Vincent"" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Marcelle""",Comment s'appellent les attractions touristiques visitées par Vincent et Marcelle ?
"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Vincent"" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Marcelle""",Quelles attractions touristiques les touristes Vincent et Marcelle visitent-ils ? Dites-moi les noms des attractions.
"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Alison"" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Rosalind""",Quels sont les noms des attractions touristiques qu'Alison a visitées mais que Rosalind n'a pas visitées ?
"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Alison"" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = ""Rosalind""",Trouvez les noms des attractions touristiques que la touriste nommée Alison a visitées mais que Rosalind n'a pas visitées.
SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ),Combien de touristes n'ont fait aucune visite ?
SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ),Comptez le nombre de touristes qui n'ont visité aucun endroit.
SELECT count(*) FROM Video_games,Combien de jeux vidéo existe-t-il ?
SELECT count(*) FROM Video_games,Combien de jeux vidéo as-tu ?
SELECT count(DISTINCT gtype) FROM Video_games,Combien de types de jeux vidéo existent ?
SELECT count(DISTINCT gtype) FROM Video_games,Quel est le nombre de différents types de jeux ?
SELECT DISTINCT gtype FROM Video_games,Afficher tous les types de jeux vidéo.
SELECT DISTINCT gtype FROM Video_games,Quels sont les différents types de jeux vidéo ?
"SELECT gname , gtype FROM Video_games ORDER BY gname",Afficher tous les jeux vidéo et leurs types dans l'ordre de leurs noms.
"SELECT gname , gtype FROM Video_games ORDER BY gname",Quels sont les noms de tous les jeux vidéo et leurs types par ordre alphabétique ?
"SELECT gname FROM Video_games WHERE gtype = ""Collectible card game""",Afficher tous les jeux vidéo de type Jeu de cartes à collectionner.
"SELECT gname FROM Video_games WHERE gtype = ""Collectible card game""",Comment s'appellent tous les jeux vidéo qui sont des cartes à collectionner ?
"SELECT gtype FROM Video_games WHERE gname = ""Call of Destiny""",Quel est le type de jeu vidéo Call of Destiny.
"SELECT gtype FROM Video_games WHERE gname = ""Call of Destiny""",Quel type de jeu est Call of Destiny ?
"SELECT count(*) FROM Video_games WHERE gtype = ""Massively multiplayer online game""",Combien de jeux vidéo ont le type Jeu en ligne massivement multijoueur ?
"SELECT count(*) FROM Video_games WHERE gtype = ""Massively multiplayer online game""",Comptez le nombre de jeux vidéo avec le type de jeu en ligne massivement multijoueur.
"SELECT gtype , count(*) FROM Video_games GROUP BY gtype",Afficher tous les types de jeux vidéo et le nombre de jeux vidéo dans chaque type.
"SELECT gtype , count(*) FROM Video_games GROUP BY gtype",Quels sont les types de jeux vidéo et combien y en a-t-il dans chaque type ?
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1,Quel type de jeu a le plus grand nombre de jeux ?
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1,Quel type a le plus de jeux ?
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1,Quel type de jeu a le moins de jeux ?
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1,Quel est le type avec le moins de jeux ?
"SELECT StuID FROM Student WHERE city_code = ""CHI""",Afficher les identifiants de tous les étudiants qui vivent à CHI.
"SELECT StuID FROM Student WHERE city_code = ""CHI""",Quels sont les identifiants de tous les étudiants qui vivent à CHI ?
SELECT StuID FROM Student WHERE Advisor = 1121,Afficher les identifiants de tous les étudiants qui ont le conseiller 1121.
SELECT StuID FROM Student WHERE Advisor = 1121,Quels sont les identifiants de tous les étudiants qui ont le numéro de conseiller 1121 ?
SELECT Fname FROM Student WHERE Major = 600,Afficher le prénom de tous les étudiants avec le majeur 600.
SELECT Fname FROM Student WHERE Major = 600,Quels sont les prénoms de tous les élèves de la majeure numérotée 600 ?
"SELECT major , avg(age) , min(age) , max(age) FROM Student GROUP BY major","Affichez l'âge moyen, minimum et maximum pour différentes majeures."
"SELECT major , avg(age) , min(age) , max(age) FROM Student GROUP BY major","Quels sont les âges moyen, minimum et maximum pour chacune des différentes majeures ?"
SELECT advisor FROM Student GROUP BY advisor HAVING count(*) >= 2,Afficher tous les conseillers qui ont au moins deux étudiants.
SELECT advisor FROM Student GROUP BY advisor HAVING count(*) >= 2,Quels sont les conseillers
SELECT count(DISTINCT sportname) FROM Sportsinfo,Combien de sports avons-nous ?
SELECT count(DISTINCT sportname) FROM Sportsinfo,Combien de types de sports différents proposons-nous ?
SELECT count(DISTINCT StuID) FROM Sportsinfo,Combien d'élèves font du sport ?
SELECT count(DISTINCT StuID) FROM Sportsinfo,Combien d'étudiants différents sont impliqués dans le sport?
SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y',Liste des identifiants de tous les étudiants boursiers.
SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y',Quelles sont les pièces d'identité de tous les étudiants sportifs boursiers ?
SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y',Afficher les noms de famille de tous les étudiants boursiers.
SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y',Quels sont les noms de famille de tous les étudiants boursiers ?
SELECT sum(gamesplayed) FROM Sportsinfo,Combien de jeux sont joués pour tous les élèves ?
SELECT sum(gamesplayed) FROM Sportsinfo,Quel est le nombre total de parties jouées ?
"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname = ""Football"" AND onscholarship = \'Y\'",Combien de matchs sont joués pour tous les matchs de football par les étudiants boursiers ?
"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname = ""Football"" AND onscholarship = \'Y\'",Quel est le nombre total de matchs de football joués par les étudiants boursiers ?
"SELECT sportname , count(*) FROM Sportsinfo GROUP BY sportname",Afficher tous les noms de sport et le nombre d'élèves.
"SELECT sportname , count(*) FROM Sportsinfo GROUP BY sportname",Combien d'élèves pratiquent chaque sport ?
"SELECT StuID , count(*) , sum(gamesplayed) FROM Sportsinfo GROUP BY StuID",Afficher toutes les cartes d'étudiants avec le nombre de sports et le nombre total de matchs joués
"SELECT StuID , count(*) , sum(gamesplayed) FROM Sportsinfo GROUP BY StuID",Quels sont les identifiants de tous les élèves et à combien de sports et de jeux ont-ils joué ?
SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek) > 10,Afficher toutes les cartes d'étudiants avec plus que le total de 10 heures par semaine sur tous les sports pratiqués.
SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek) > 10,Quelles sont les cartes d'étudiant pour tous ceux qui ont travaillé plus de 10 heures par semaine dans tous les sports ?
"SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",Quels sont le prénom et le nom de famille de l'élève qui a le plus de sports ?
"SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",Quel est le prénom et le nom de l'élève qui a pratiqué le plus de sport ?
SELECT sportname FROM Sportsinfo WHERE onscholarship = 'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1,Quel sport a le plus grand nombre d'étudiants boursiers ?
SELECT sportname FROM Sportsinfo WHERE onscholarship = 'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1,Quel est le sport avec le plus d'étudiants boursiers ?
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo,Afficher les identifiants des étudiants qui ne pratiquent aucun sport.
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo,Quels sont les identifiants de tous les élèves qui ne font pas de sport ?
SELECT StuID FROM Student WHERE major = 600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y',Afficher les identifiants des étudiants qui bénéficient d'une bourse et qui ont le majeur 600.
SELECT StuID FROM Student WHERE major = 600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship = 'Y',Quelles sont les cartes d'étudiant pour les boursiers du numéro 600?
"SELECT StuID FROM Student WHERE sex = \'F\' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname = ""Football""",Montrez les cartes d'étudiants qui sont des femmes et jouez au football.
"SELECT StuID FROM Student WHERE sex = \'F\' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname = ""Football""",Quels sont les identifiants de toutes les étudiantes qui jouent au football ?
"SELECT StuID FROM Student WHERE sex = \'M\' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname = ""Football""",Afficher toutes les cartes d'étudiants masculins qui ne jouent pas au football.
"SELECT StuID FROM Student WHERE sex = \'M\' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname = ""Football""",Quels sont les identifiants de tous les étudiants masculins qui ne jouent pas au football ?
"SELECT sum(hoursperweek) , sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname = ""David"" AND T2.Lname = ""Shieber""",Afficher le nombre total d'heures par semaine et le nombre de parties jouées pour l'étudiant David Shieber.
"SELECT sum(hoursperweek) , sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname = ""David"" AND T2.Lname = ""Shieber""",Quel est le nombre total d'heures par travail et le nombre de parties jouées par David Shieber ?
"SELECT sum(hoursperweek) , sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.age < 20",Afficher le nombre total d'heures par semaine et le nombre de parties jouées pour les étudiants de moins de 20 ans.
"SELECT sum(hoursperweek) , sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.age < 20",Quel est le nombre total d'heures par semaine et le nombre de parties jouées par les élèves de moins de 20 ans ?
SELECT count(DISTINCT StuID) FROM Plays_games,Combien d'élèves jouent aux jeux vidéo ?
SELECT count(DISTINCT StuID) FROM Plays_games,Combien d'élèves différents jouent à des jeux ?
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games,Afficher les identifiants des élèves qui ne jouent pas aux jeux vidéo.
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games,Quels sont les identifiants de tous les étudiants qui ne sont pas des joueurs de jeux vidéo ?
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games,Afficher les identifiants des élèves qui jouent à des jeux vidéo et font du sport.
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games,Quels sont les identifiants de tous les élèves qui ont joué à des jeux vidéo et à des sports ?
"SELECT gameid , sum(hours_played) FROM Plays_games GROUP BY gameid",Afficher tous les identifiants de jeu et le nombre d'heures de jeu.
"SELECT gameid , sum(hours_played) FROM Plays_games GROUP BY gameid",Quels sont les identifiants et le nombre total d'heures jouées pour chaque jeu ?
"SELECT Stuid , sum(hours_played) FROM Plays_games GROUP BY Stuid",Afficher tous les identifiants d'étudiants et le nombre d'heures de jeu.
"SELECT Stuid , sum(hours_played) FROM Plays_games GROUP BY Stuid",Quels sont les identifiants de tous les élèves et le nombre d'heures de jeu ?
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1,Afficher le nom du jeu qui a le plus grand nombre d'heures de jeu.
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1,Quel est le nom du jeu qui a été le plus joué ?
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum(hours_played) >= 1000,Afficher tous les noms de jeux joués pendant au moins 1000 heures.
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum(hours_played) >= 1000,Quels sont les noms de tous les jeux qui ont été joués pendant au moins 1000 heures ?
"SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = ""Smith"" AND T3.Fname = ""Linda""",Afficher tous les noms de jeux joués par Linda Smith
"SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = ""Smith"" AND T3.Fname = ""Linda""",Quels sont les noms de tous les jeux joués par Linda Smith ?
"SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = ""Football"" OR T1.SportName = ""Lacrosse""",Trouvez le nom et le prénom des élèves qui jouent au football ou à la crosse.
"SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = ""Football"" OR T1.SportName = ""Lacrosse""",Quel est le prénom et le nom de tous les élèves qui jouent au football ou à la crosse ?
"SELECT fname , age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName = ""Football"" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName = ""Lacrosse"")",Trouvez le prénom et l'âge des élèves qui jouent à la fois au football et à la crosse.
"SELECT fname , age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName = ""Football"" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName = ""Lacrosse"")",Quels sont les prénoms et l'âge de tous les élèves qui jouent à la fois au football et à la crosse ?
"SELECT lname , sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = ""Call of Destiny"" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = ""Works of Widenius"")",Trouvez le nom de famille et le sexe des élèves qui jouent à la fois aux jeux Call of Destiny et Works of Widenius.
"SELECT lname , sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = ""Call of Destiny"" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = ""Works of Widenius"")",quel est le nom de famille et le sexe de tous les élèves qui ont joué à la fois à Call of Destiny et à Works of Widenius ?
SELECT customer_name FROM customers,Trouver le nom de tous les clients.
SELECT customer_name FROM customers,Comment s'appellent tous les clients ?
SELECT avg(order_quantity) FROM order_items,Quelle est la quantité moyenne d'articles commandés dans chaque commande ?
SELECT avg(order_quantity) FROM order_items,Trouvez la quantité moyenne de commande par commande.
"SELECT customer_name FROM customers WHERE payment_method = ""Cash""","Quels sont les noms des clients qui utilisent le mode de paiement ""Cash"" ?"
"SELECT customer_name FROM customers WHERE payment_method = ""Cash""","Quels clients utilisent ""Cash"" comme mode de paiement ? Renvoyez les noms des clients."
SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20,"Trouver la ""date devenue cliente"" des clients dont l'ID est compris entre 10 et 20."
SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20,Quelles sont les dates auxquelles les clients avec des identifiants entre 10 et 20 sont devenus clients ?
SELECT customer_name FROM customers WHERE payment_method = (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1),Quels sont les noms des clients utilisant le moyen de paiement le plus populaire ?
SELECT customer_name FROM customers WHERE payment_method = (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1),Trouvez le nom des clients qui utilisent le mode de paiement le plus fréquemment utilisé.
SELECT DISTINCT payment_method FROM customers,Quels sont tous les modes de paiement ?
SELECT DISTINCT payment_method FROM customers,Renvoyez tous les modes de paiement distincts utilisés par les clients.
SELECT DISTINCT product_details FROM products,Quels sont les détails de tous les produits ?
SELECT DISTINCT product_details FROM products,Retournez les détails de tous les produits.
"SELECT customer_name FROM customers WHERE customer_name LIKE ""%Alex%""","Trouver le nom de tous les clients dont le nom contient ""Alex""."
"SELECT customer_name FROM customers WHERE customer_name LIKE ""%Alex%""","Quel nom de client contient ""Alex"" ? Trouvez le nom complet."
"SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""","Retrouvez le détail des produits dont le détail contient le mot ""Latte"" ou le mot ""Americano"""
"SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""",Quel détail de produit contient le mot « Latte » ou « Americano » ? Renvoyez le détail complet.
"SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t1.customer_name = ""Maudie Kertzmann""","Quel est le contenu de l'adresse du client nommé ""Maudie Kertzmann"" ?"
"SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t1.customer_name = ""Maudie Kertzmann""","Renvoyez le contenu de l'adresse pour le client dont le nom est ""Maudie Kertzmann""."
"SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.city = ""Lake Geovannyton""","Combien de clients vivent dans la ville ""Lac Geovannyton"" ?"
"SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.city = ""Lake Geovannyton""",Trouvez le nombre de clients qui habitent dans la ville appelée Lake Geovannyton.
"SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = ""Colorado""",Trouver le nom de clients qui vivent dans le Colorado ?
"SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = ""Colorado""",Quels sont les noms des clients qui vivent dans l'État du Colorado ?
SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id),Trouvez la liste des villes dans lesquelles aucun client ne vit.
SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id),Quelles sont les villes où aucun client n'habite ?
SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1,Dans quelle ville habite le plus de clients ?
SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1,Trouvez la ville où vivent le plus de clients.
SELECT city FROM addresses WHERE zip_postcode = 255,Trouvez la ville avec le code postal 255.
SELECT city FROM addresses WHERE zip_postcode = 255,Dans quelle ville se trouve le code postal 255 ?
"SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE ""4%""",Trouvez l'état et le pays de toutes les villes dont le code postal commence par 4.
"SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE ""4%""",Quels sont l'état et le pays de toutes les villes dont les codes postaux commencent par 4.\
SELECT country FROM addresses GROUP BY country HAVING count(address_id) > 4,Dressez la liste des pays ayant plus de 4 adresses répertoriées.
SELECT country FROM addresses GROUP BY country HAVING count(address_id) > 4,Pour quels pays y a-t-il plus de quatre adresses distinctes répertoriées ?
SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id) < 5,Énumérez tous les codes de canal de contact qui ont été utilisés moins de 5 fois.
SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id) < 5,Quels codes de canal de contact ont été utilisés moins de 5 fois ?
"SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = ""Tillman Ernser""","Quel canal de contact a été utilisé par le client avec le nom ""Tillman Ernser"" ?"
"SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = ""Tillman Ernser""","Recherchez le code de canal de contact utilisé par le client nommé ""Tillman Ernser""."
"SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = ""Tillman Ernser""","Quel est le ""actif à ce jour"" du dernier canal de contact utilisé par ""Tillman Ernser"" ?"
"SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = ""Tillman Ernser""","Renvoie le ""actif à ce jour"" du dernier canal de contact utilisé par le client nommé ""Tillman Ernser""."
SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels,Quelle est la durée moyenne des canaux de contact dans la base de données ?
SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels,Calculez la durée d'activité moyenne des canaux de contact.
"SELECT channel_code , contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date = (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",Quels sont le code de canal et le numéro de contact du canal de contact client qui a été actif le plus longtemps ?
"SELECT channel_code , contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date = (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",Renvoie le code canal et le numéro de contact du canal de contact client dont la durée d'activité a été la plus longue.
"SELECT t1.customer_name , t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",Recherchez le nom et la date d'activité du client qui utilise l'e-mail comme canal de contact.
"SELECT t1.customer_name , t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",Quels sont le nom et la date d'activité des clients dont le code de canal de contact est l'e-mail ?
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity = ( SELECT max(order_quantity) FROM order_items),Quel est le nom du client qui a passé la commande avec la plus grande quantité ?
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity = ( SELECT max(order_quantity) FROM order_items),Trouvez le nom du client qui a commandé la plus grande quantité de marchandises.
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1,Quel est le nom du client qui a acheté le plus d'articles ?
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1,Donnez-moi le nom du client qui a commandé le plus d'articles au total.
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1,Quel est le mode de paiement du client qui a acheté le moins d'articles ?
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1,Indiquez-moi le mode de paiement utilisé par le client qui a commandé le moins de marchandises au total.
"SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = ""Rodrick Heaney""",Combien de types de produits Rodrick Heaney a-t-il achetés au total ?
"SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = ""Rodrick Heaney""",Découvrez le nombre de produits distincts que Rodrick Heaney a achetés jusqu'à présent.
"SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = ""Rodrick Heaney""","Quelle est la quantité totale de produits achetés par ""Rodrick Heaney"" ?"
"SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = ""Rodrick Heaney""","Indiquez-moi la quantité totale de produits achetés par le client appelé ""Rodrick Heaney""."
"SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status = ""Cancelled""","Combien de clients ont au moins une commande avec le statut ""Annulée"" ?"
"SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status = ""Cancelled""","Renvoie le nombre de clients qui ont au moins une commande avec le statut ""Annulé""."
"SELECT count(*) FROM customer_orders WHERE order_details = ""Second time""","Combien de commandes ont le détail ""Deuxième fois"" ?"
"SELECT count(*) FROM customer_orders WHERE order_details = ""Second time""","Dites-moi le nombre de commandes avec ""Deuxième fois"" comme détail de la commande."
"SELECT t1.customer_name , t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = ""Delivered""","Recherchez le nom du client et la date des commandes qui ont le statut ""Livré""."
"SELECT t1.customer_name , t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = ""Delivered""","Quels sont le nom du client et la date des commandes dont le statut est ""Livré""."
"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = ""Cancelled""","Quel est le nombre total de produits dans les commandes avec le statut ""Annulé"" ?"
"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = ""Cancelled""","Trouver la quantité totale de produits associés aux commandes au statut ""Annulé""."
"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_date < ""2018-03-17 07:13:53""",Trouvez le nombre total de produits commandés avant le 2018-03-17 07:13:53.
"SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_date < ""2018-03-17 07:13:53""",Quel est le nombre total de produits achetés avant le 2018-03-17 07:13:53 ?
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.order_date DESC LIMIT 1,Qui a passé la dernière commande ?
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.order_date DESC LIMIT 1,Trouvez le nom du client qui a passé une commande en dernier.
SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1,Quel produit a été commandé le plus de fois ?
SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1,Quel est le produit le plus fréquemment commandé ? Dites-moi le détail du produit
"SELECT t2.product_details , t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1",Recherchez le nom et l'ID du produit dont la quantité totale de commande est la plus élevée.
"SELECT t2.product_details , t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1",Quels sont le nom et l'identifiant du produit le plus acheté.
"SELECT address_content FROM addresses WHERE city = ""East Julianaside"" AND state_province_county = ""Texas"" UNION SELECT address_content FROM addresses WHERE city = ""Gleasonmouth"" AND state_province_county = ""Arizona""","Retrouvez toutes les adresses à East Julianaside, Texas ou à Gleasonmouth, Arizona."
"SELECT address_content FROM addresses WHERE city = ""East Julianaside"" AND state_province_county = ""Texas"" UNION SELECT address_content FROM addresses WHERE city = ""Gleasonmouth"" AND state_province_county = ""Arizona""","Quelles sont toutes les adresses à East Julianaside, Texas ou à Gleasonmouth, Arizona."
SELECT customer_name FROM customers WHERE payment_method != 'Cash',Trouvez le nom des clients qui n'ont pas payé en espèces.
SELECT customer_name FROM customers WHERE payment_method != 'Cash',Comment s'appellent les clients qui n'utilisent pas les espèces comme mode de paiement ?
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Latte',Trouvez les noms des clients qui n'ont jamais commandé le produit Latte.
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Latte',Quels sont les noms des clients qui n'ont jamais commandé le produit Latte.
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id,Trouvez les noms des clients qui n'ont jamais passé de commande.
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id,Quels sont les noms des clients qui n'ont jamais passé de commande.
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Americano',Trouvez les noms des clients qui ont commandé à la fois les produits Latte et Americano.
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Americano',Quels sont les noms des clients qui ont acheté à la fois les produits Latte et Americano ?
SELECT Age FROM artist,Indiquez l'âge de tous les artistes musicaux.
SELECT Age FROM artist,Quel âge ont tous les artistes musicaux ?
SELECT avg(Age) FROM artist,Quel est l'âge moyen de tous les artistes ?
SELECT avg(Age) FROM artist,Renvoie l'âge moyen de tous les artistes.
"SELECT Famous_Title FROM artist WHERE Artist = ""Triumfall""","Quels sont les titres célèbres de l'artiste ""Triumfall"" ?"
"SELECT Famous_Title FROM artist WHERE Artist = ""Triumfall""","Retour des titres célèbres de l'artiste appelé ""Triumfall""."
SELECT distinct(Famous_Release_date) FROM artist,Quelles sont les différentes dates de sortie de Famous ?
SELECT distinct(Famous_Release_date) FROM artist,Donnez les dates de sortie célèbres distinctes pour tous les artistes.
"SELECT Date_of_ceremony , RESULT FROM music_festival",Retourner les dates de cérémonie et les résultats de tous les festivals de musique
"SELECT Date_of_ceremony , RESULT FROM music_festival",Quelles sont les dates de cérémonie et les résultats pour chaque festival de musique ?
"SELECT Category FROM music_festival WHERE RESULT = ""Awarded""","Quelle est la catégorie des festivals de musique avec le résultat ""Awarded"" ?"
"SELECT Category FROM music_festival WHERE RESULT = ""Awarded""","Renvoie les catégories de festivals de musique qui ont le résultat ""Awarded""."
"SELECT max(Weeks_on_Top) , min(Weeks_on_Top) FROM volume",Quels sont la semaine maximum et minimum en plus de tous les volumes ?
"SELECT max(Weeks_on_Top) , min(Weeks_on_Top) FROM volume",Indiquez les semaines maximales et minimales en haut de tous les volumes.
SELECT Song FROM volume WHERE Weeks_on_Top > 1,Quelles sont les chansons en volumes avec plus d'une semaine au top ?
SELECT Song FROM volume WHERE Weeks_on_Top > 1,Donnez les chansons incluses dans les volumes qui ont plus d'une semaine au-dessus.
SELECT Song FROM volume ORDER BY Song,Veuillez énumérer toutes les chansons en volumes par ordre alphabétique croissant.
SELECT Song FROM volume ORDER BY Song,"Quelles sont les chansons en volumes, classées par ordre croissant ?"
SELECT COUNT(DISTINCT Artist_ID) FROM volume,À combien d'artistes distincts les volumes sont-ils associés ?
SELECT COUNT(DISTINCT Artist_ID) FROM volume,Comptez le nombre d'artistes distincts qui ont des volumes.
SELECT COUNT(DISTINCT Artist_ID) FROM volume,Combien d'artistes distincts ont des volumes ?
SELECT COUNT(DISTINCT Artist_ID) FROM volume,Comptez le nombre d'artistes qui ont eu des volumes.
SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Weeks_on_Top > 2,Veuillez indiquer la date de cérémonie des volumes qui durent plus de 2 semaines en haut.
SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Weeks_on_Top > 2,Quelles sont les dates de cérémonie lors des festivals de musique correspondant aux tomes qui ont duré plus de 2 semaines en plus ?
"SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = ""Nominated""","Veuillez montrer les chansons qui ont été ""nominées"" dans les festivals de musique."
"SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = ""Nominated""",Quelles sont les chansons en volumes qui ont abouti à une nomination dans les festivals de musique ?
"SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = ""Gorgoroth""","Quelles sont les dates de parution des volumes associés à l'artiste ""Gorgoroth"" ?"
"SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = ""Gorgoroth""",Renvoyez les dates de parution des volumes de l'artiste nommé Gorgoroth.
SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age >= 32,Quelles sont les chansons en volumes associées à l'artiste âgé de 32 ans ou plus ?
SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age >= 32,Renvoyez les noms des chansons dans les volumes d'artistes âgés d'au moins 32 ans.
SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 25,Quelle est la moyenne des semaines en plus des volumes associés à l'artiste âgé de 25 ans ou moins ?
SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 25,Renvoie le nombre moyen de semaines en haut pour les volumes d'artistes qui ont au plus 25 ans.
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2,Quels sont les fameux titres des artistes associés aux tomes de plus de 2 semaines au top ?
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2,Retournez les titres célèbres pour les artistes qui ont des volumes qui ont duré plus de 2 semaines en plus.
"SELECT Famous_Title , Age FROM artist ORDER BY Age DESC",Veuillez indiquer l'âge et le titre célèbre des artistes par ordre décroissant d'âge.
"SELECT Famous_Title , Age FROM artist ORDER BY Age DESC","Quels sont les titres célèbres et les âges de chaque artiste, classés par ordre décroissant d'âge ?"
SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1,Quelle est la fameuse date de sortie de l'artiste le plus âgé ?
SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1,Retour de la fameuse date de sortie de l'artiste le plus âgé.
"SELECT Category , COUNT(*) FROM music_festival GROUP BY Category",Veuillez indiquer les catégories des festivals de musique et le décompte.
"SELECT Category , COUNT(*) FROM music_festival GROUP BY Category",Renvoie le nombre de festivals de musique de chaque catégorie.
SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1,Quel est le résultat le plus courant du festival de musique ?
SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1,Renvoie le résultat le plus fréquent dans les festivals de musique.
SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*) > 1,Veuillez afficher les catégories des festivals de musique comptant plus de 1.
SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*) > 1,Quelles sont les catégories de festivals de musique pour lesquels il y a eu plus d'un festival de musique ?
SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1,Quelle est la chanson dans le volume avec le maximum de semaines en haut ?
SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1,Renvoyer la chanson dans le volume qui a passé le plus de semaines au top ?
SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume),Retrouvez les titres célèbres d'artistes qui n'ont pas de tome.
SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume),Quels sont les titres célèbres des artistes qui n'ont pas de volumes ?
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2,Montrez les titres célèbres des artistes avec à la fois des tomes qui ont duré plus de 2 semaines en tête et des tomes qui ont duré moins de 2 semaines en tête.
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2,Quels sont les titres célèbres d'artistes qui ont non seulement eu des tomes qui ont passé plus de 2 semaines au top mais aussi des tomes qui ont passé moins de 2 semaines au top ?
"SELECT Date_of_ceremony FROM music_festival WHERE Category = ""Best Song"" AND RESULT = ""Awarded""",Quelles sont les dates de cérémonie des festivals de musique avec la catégorie « Best Song » et le résultat « Awarded » ?
"SELECT Date_of_ceremony FROM music_festival WHERE Category = ""Best Song"" AND RESULT = ""Awarded""","Renvoyez les dates de cérémonie correspondant aux festivals de musique qui avaient la catégorie ""Meilleure chanson"" et le résultat ""Récompensé""."
SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1,Quelle est la date de sortie du volume avec le minimum de semaines en tête ?
SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1,Renvoie la date d'émission du volume qui a passé le moins de semaines en haut.
"SELECT RESULT , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC","Veuillez indiquer les résultats des festivals de musique et le nombre de festivals de musique qui ont eu chacun, classés par ce décompte."
"SELECT RESULT , COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC","Combien de festivals de musique ont eu chaque type de résultat, classé par ordre décroissant ?"
SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 23,Quelles sont les dates de parution des volumes associés à l'artiste âgé de 23 ans ou moins ?
SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 23,Restituer les dates de parution des volumes d'artistes âgés de 23 ans au plus ?
SELECT count(*) FROM roller_coaster,Combien y a-t-il de montagnes russes ?
SELECT Name FROM roller_coaster ORDER BY LENGTH ASC,Énumérez les noms des montagnes russes par ordre croissant de longueur.
"SELECT LENGTH , Height FROM roller_coaster",Quelles sont les longueurs et hauteurs des montagnes russes ?
"SELECT Name FROM country WHERE Languages != ""German""","Énumérez les noms des pays dont la langue n'est pas ""l'allemand""."
SELECT Status FROM roller_coaster WHERE LENGTH > 3300 OR Height > 100,Afficher les statuts des montagnes russes plus longues que 3300 ou supérieures à 100.
SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1,Quelles sont les vitesses des montagnes russes les plus longues ?
SELECT avg(Speed) FROM roller_coaster,Quelle est la vitesse moyenne des montagnes russes ?
"SELECT Status , COUNT(*) FROM roller_coaster GROUP BY Status",Affichez les différents statuts et le nombre de montagnes russes pour chaque statut.
SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer le statut le plus courant des montagnes russes.
SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*) > 2,Indiquez le statut partagé par plus de deux montagnes russes.
SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1,Montrez le parc des montagnes russes avec la vitesse la plus élevée.
"SELECT T2.Name , T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID",Affichez les noms des montagnes russes et les noms des pays dans lesquels elles se trouvent.
SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT(*) > 1,Affichez les noms des pays qui ont plus d'une montagne russe.
"SELECT T1.Name , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID ORDER BY T2.Height DESC LIMIT 1",Montrez le nom et la population du pays qui a les plus hautes montagnes russes.
"SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name",Affichez les noms des pays et la vitesse moyenne des montagnes russes de chaque pays.
SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH > 3000 ),Combien de pays n'ont pas de montagnes russes de plus de 3000 ?
"SELECT T1.name , T1.area , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name , T1.area , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55","Quels sont les noms de pays, la superficie et la population qui ont les deux montagnes russes avec une vitesse plus élevée"
SELECT count(DISTINCT rank) FROM captain,Combien y a-t-il de grades de capitaine différents ?
SELECT count(DISTINCT rank) FROM captain,Comptez le nombre de grades différents de capitaine.
"SELECT count(*) , rank FROM captain GROUP BY rank",Combien y a-t-il de capitaines dans chaque rang ?
"SELECT count(*) , rank FROM captain GROUP BY rank",Comptez le nombre de capitaines qui ont chaque grade.
"SELECT count(*) , rank FROM captain WHERE age < 50 GROUP BY rank",Combien y a-t-il de capitaines de moins de 50 ans dans chaque rang ?
"SELECT count(*) , rank FROM captain WHERE age < 50 GROUP BY rank",Comptez le nombre de capitaines de moins de 50 ans de chaque rang.
SELECT name FROM captain ORDER BY age DESC,"Triez tous les noms de capitaines en fonction de leur âge, du plus vieux au plus jeune."
SELECT name FROM captain ORDER BY age DESC,"Quels sont les noms des capitaines, classés par âge décroissant ?"
"SELECT name , CLASS , rank FROM captain","Trouvez le nom, la classe et le grade de tous les capitaines."
"SELECT name , CLASS , rank FROM captain","Quels sont les noms, classes et grades de tous les capitaines ?"
SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1,Quel grade est le plus courant chez les capitaines ?
SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1,Renvoie le rang pour lequel il y a le moins de capitaines.
SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*) > 2,Quelles classes ont plus de deux capitaines ?
SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*) > 2,Donnez les classes qui ont plus de deux capitaines.
SELECT name FROM captain WHERE rank = 'Midshipman' OR rank = 'Lieutenant',Trouvez le nom des capitaines dont le grade est aspirant ou lieutenant.
SELECT name FROM captain WHERE rank = 'Midshipman' OR rank = 'Lieutenant',Quels sont les noms des capitaines qui ont le grade d'aspirant ou de lieutenant ?
"SELECT avg(age) , min(age) , CLASS FROM captain GROUP BY CLASS",Quel est l'âge moyen et minimum des capitaines dans les différentes classes ?
"SELECT avg(age) , min(age) , CLASS FROM captain GROUP BY CLASS",Renvoie l'âge moyen et minimum des capitaines dans chaque classe.
SELECT rank FROM captain WHERE CLASS = 'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS = 'Armed schooner',Trouvez le rang de capitaine qui a des capitaines dans les classes de goélette Cutter et Armed.
SELECT rank FROM captain WHERE CLASS = 'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS = 'Armed schooner',Quels sont les grades des capitaines qui appartiennent à la fois aux classes de goélette Cutter et Armed ?
SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS = 'Third-rate ship of the line',Trouvez le rang de capitaine qui n'a pas de capitaine dans la classe Navire de ligne de troisième ordre.
SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS = 'Third-rate ship of the line',Quels sont les rangs des capitaines qui n'ont pas de capitaine et qui appartiennent à la classe Navire de ligne de troisième rang ?
SELECT name FROM captain ORDER BY age LIMIT 1,Comment s'appelle le plus jeune capitaine ?
SELECT name FROM captain ORDER BY age LIMIT 1,Renvoyez le nom du plus jeune capitaine.
"SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1","Trouvez le nom, le type et le pavillon du navire qui a été construit au cours de l'année la plus récente."
"SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1","Quels sont le nom, le type et le pavillon du navire qui a été construit l'année la plus récente ?"
"SELECT count(*) , flag FROM ship GROUP BY flag",Regroupez par navires par pavillon et retournez le nombre de navires qui ont chaque pavillon.
"SELECT count(*) , flag FROM ship GROUP BY flag",Quels sont les différents pavillons de navires et combien de navires ont chacun ?
SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1,Quel pavillon est le plus utilisé parmi tous les navires ?
SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1,Renvoyez le drapeau le plus courant parmi tous les navires.
"SELECT name FROM ship ORDER BY built_year , CLASS",Énumérez tous les noms de navires dans l'ordre de l'année de construction et de la classe.
"SELECT name FROM ship ORDER BY built_year , CLASS","Quels sont les noms des navires, classés par année de construction et par classe ?"
SELECT TYPE FROM ship WHERE flag = 'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag = 'Malta',Trouvez le type de navire utilisé par les deux navires battant pavillon panaméen et maltais.
SELECT TYPE FROM ship WHERE flag = 'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag = 'Malta',Quels types de navires ont à la fois des navires battant pavillon panaméen et des pavillons maltais ?
SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1,En quelle année la plupart des navires ont-ils été construits ?
SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1,Quelle est l'année au cours de laquelle la plupart des navires ont été construits ?
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count(*) > 1,Trouvez le nom des navires qui ont plus d'un capitaine.
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count(*) > 1,Quels sont les noms des navires qui ont plus d'un capitaine ?
"SELECT name , CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",quels sont les noms et classes des navires qui n'ont pas encore de capitaine ?
"SELECT name , CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",Renvoyer les noms et classes des navires qui n'ont pas de capitaine ?
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id ORDER BY t2.age LIMIT 1,Trouvez le nom du navire qui est dirigé par le plus jeune capitaine.
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id ORDER BY t2.age LIMIT 1,Comment s'appelle le navire commandé par le plus jeune capitaine ?
"SELECT name , flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman')",Trouvez le nom et le pavillon des navires qui ne sont pas dirigés par un capitaine ayant le rang d'aspirant.
"SELECT name , flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman')",Quels sont les noms et les pavillons des navires qui n'ont pas de capitaine avec le grade d'aspirant ?
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant',Trouvez le nom des navires qui sont dirigés à la fois par un capitaine avec le grade d'aspirant et un capitaine avec le grade de lieutenant.
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant',Quels sont les noms des navires qui sont commandés à la fois par des capitaines ayant le grade d'aspirant et des capitaines ayant le grade de lieutenant ?
SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1,Quel est l'identifiant de la ville qui a accueilli des événements au cours de l'année la plus récente ?
SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1,Trouvez la ville qui a accueilli certains événements au cours de l'année la plus récente. Quel est l'identifiant de cette ville ?
"SELECT match_id FROM MATCH WHERE competition = ""1994 FIFA World Cup qualification""","Retrouver les identifiants des matchs des villes ayant accueilli la compétition ""Qualification Coupe du Monde FIFA 1994"" ?"
"SELECT match_id FROM MATCH WHERE competition = ""1994 FIFA World Cup qualification""","Quel est l'identifiant du match de la compétition appelée ""Qualification pour la Coupe du Monde de la FIFA 1994"" ?"
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010,Retrouver les villes qui étaient autrefois ville hôte après 2010 ?
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010,Quelles villes ont servi de ville hôte après 2010 ?
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1,Quelle ville a accueilli le plus d'événements ?
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1,Trouvez la ville qui a accueilli le plus d'événements.
"SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = ""Nanjing ( Jiangsu )"" AND T3.competition = ""1994 FIFA World Cup qualification""","Quel est le lieu de la compétition ""Qualifications pour la Coupe du Monde de la FIFA 1994"" organisée par ""Nanjing ( Jiangsu )"" ?"
"SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = ""Nanjing ( Jiangsu )"" AND T3.competition = ""1994 FIFA World Cup qualification""","Retrouvez le lieu de la compétition ""Qualification Coupe du Monde FIFA 1994"" qui a été organisée par ""Nanjing ( Jiangsu )""."
"SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = ""Shanghai""",Donnez-moi la température de Shanghai en janvier.
"SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = ""Shanghai""",Quelle est la température de la ville de « Shanghai » en janvier ?
"SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = ""Taizhou ( Zhejiang )""","Quelle est l'année hôte de la ville ""Taizhou ( Zhejiang )""?"
"SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = ""Taizhou ( Zhejiang )""","EN quelle année la ville ""Taizhou ( Zhejiang )"" a-t-elle servi de ville hôte ?"
SELECT city FROM city ORDER BY regional_population DESC LIMIT 3,Quelles sont les trois villes qui ont la plus grande population régionale ?
SELECT city FROM city ORDER BY regional_population DESC LIMIT 3,Quelles sont les trois plus grandes villes en termes de population régionale ?
"SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",Quelle ville a le PIB le plus bas ? Veuillez indiquer le nom de la ville et son PIB.
"SELECT city , GDP FROM city ORDER BY GDP LIMIT 1",Quelle est la ville avec le plus petit PIB ? Renvoyez la ville et son PIB.
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id ORDER BY T2.Feb DESC LIMIT 1,Quelle ville a la température la plus élevée en février ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id ORDER BY T2.Feb DESC LIMIT 1,"En février, quelle ville enregistre la température la plus élevée ?"
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul OR T2.Mar > T2.Oct,Donnez-moi une liste des villes dont la température en mars est inférieure à celle de juillet ou supérieure à celle d'octobre ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul OR T2.Mar > T2.Oct,Dans quelles villes la température en mars est-elle inférieure à celle de juillet ou supérieure à celle d'octobre ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city,Donnez-moi une liste de villes dont la température en mars est inférieure à celle de juillet et qui ont également servi de villes hôtes ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city,Quelles villes ont une température plus basse en mars qu'en juillet et ont été autrefois des villes hôtes ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city,Donnez-moi une liste de villes dont la température en mars est inférieure à celle de décembre et qui n'ont jamais été des villes hôtes.
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city,Quelles villes ont une température plus basse en mars qu'en décembre et n'ont jamais servi de villes hôtes ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Feb > T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city,Donnez-moi une liste des villes dont la température en février est supérieure à celle de juin ou des villes qui étaient autrefois des villes hôtes ?
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Feb > T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city,Quelles villes ont une température plus élevée en février qu'en juin ou ont déjà servi de villes hôtes ?
SELECT city FROM city WHERE regional_population > 10000000,Veuillez me donner une liste des villes dont la population régionale est supérieure à 1 000 000.
SELECT city FROM city WHERE regional_population > 10000000,Quelles villes ont une population régionale supérieure à 1 000 000 ?
SELECT city FROM city WHERE regional_population > 10000000 UNION SELECT city FROM city WHERE regional_population < 5000000,Veuillez me donner une liste des villes dont la population régionale est supérieure à 8 000 000 ou inférieure à 5 000 000.
SELECT city FROM city WHERE regional_population > 10000000 UNION SELECT city FROM city WHERE regional_population < 5000000,Quelles villes ont une population régionale supérieure à 8 000 000 ou inférieure à 5 000 000 ?
"SELECT count(*) , Competition FROM MATCH GROUP BY Competition",Trouvez le nombre de matchs dans différentes compétitions.
"SELECT count(*) , Competition FROM MATCH GROUP BY Competition","Pour chaque compétition, comptez le nombre de matchs."
SELECT venue FROM MATCH ORDER BY date DESC,Listez les lieux de tous les matches dans l'ordre de leurs dates en commençant par le plus récent.
SELECT venue FROM MATCH ORDER BY date DESC,Quels sont les lieux de tous les matchs ? Triez-les dans l'ordre décroissant de la date du match.
SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1,quel est le PIB de la ville la plus peuplée.
SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1,Trouvez le PIB de la ville avec la plus grande population régionale.
"SELECT t1.gdp , t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY t2.Host_City HAVING count(*) > 1",Quels sont le PIB et la population de la ville qui a déjà servi d'hôte plus d'une fois ?
"SELECT t1.gdp , t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY t2.Host_City HAVING count(*) > 1",Quelles villes ont servi de villes hôtes plus d'une fois ? Renvoyez-moi leur PIB et leur population.
"SELECT individual_first_name , individual_middle_name , individual_last_name FROM individuals ORDER BY individual_last_name","Énumérez le prénom, le deuxième prénom et le nom de famille de chaque personne dans l'ordre alphabétique du nom de famille."
"SELECT individual_first_name , individual_middle_name , individual_last_name FROM individuals ORDER BY individual_last_name","Quels sont les prénom, deuxième prénom et nom de famille de tous les individus, classés par nom de famille ?"
SELECT DISTINCT form_type_code FROM forms,Lister tous les types de formulaires.
SELECT DISTINCT form_type_code FROM forms,Quels sont les différents types de formulaires ?
SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id = t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de la forme de fête la plus populaire.
SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id = t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom de la forme de fête la plus courante ?
"SELECT payment_method_code , party_phone FROM parties WHERE party_email = ""enrico09@example.com""","Trouvez le mode de paiement et le téléphone de la fête avec l'e-mail ""enrico09@example.com""."
"SELECT payment_method_code , party_phone FROM parties WHERE party_email = ""enrico09@example.com""",Quel est le code du mode de paiement et le numéro de téléphone de la partie avec l'e-mail « enrico09@example.com » ?
SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id = t2.party_id WHERE t2.form_id = (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1),Trouvez les e-mails des parties avec le formulaire de partie le plus populaire.
SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id = t2.party_id WHERE t2.form_id = (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1),Quels sont les e-mails de partie associés aux parties qui ont utilisé le formulaire de partie le plus courant ?
SELECT organization_name FROM organizations ORDER BY date_formed ASC,Énumérez tous les noms d'organisations par ordre de date de création.
SELECT organization_name FROM organizations ORDER BY date_formed ASC,"Quels sont les noms des organisations, classées par date de formation, par ordre croissant ?"
SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1,Trouvez le nom de la plus jeune organisation.
SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1,Quel est le nom de l'organisation qui a été créée le plus récemment ?
"SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.organization_name = ""Labour Party"" ORDER BY t2.date_contact_to DESC LIMIT 1","Trouver le nom de famille du dernier contact individuel de l'organisation ""Labour Party""."
"SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.organization_name = ""Labour Party"" ORDER BY t2.date_contact_to DESC LIMIT 1",Quel est le nom de famille de la personne de contact de l'organisation du parti travailliste qui a été contactée le plus récemment ?
SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.uk_vat_number = (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1,Trouvez le nom de famille de la toute première personne de contact de l'organisation avec le numéro de TVA britannique le plus élevé.
SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.uk_vat_number = (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1,Quel est le nom de famille de la première personne contactée par l'organisation avec le numéro de TVA britannique maximal dans toutes les organisations ?
SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id,Trouver le nom des services qui n'ont jamais été utilisés.
SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id,Quels sont les noms des services qui n'ont jamais été utilisés ?
SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,Trouvez le nom de toutes les villes et états.
SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,Quels sont les noms de toutes les villes et états?
"SELECT count(*) FROM addresses WHERE state_province_county = ""Colorado""","Combien de villes y a-t-il dans l'état ""Colorado"" ?"
"SELECT count(*) FROM addresses WHERE state_province_county = ""Colorado""",Comptez le nombre de villes dans l'état du Colorado.
"SELECT count(*) FROM addresses WHERE state_province_county = ""Colorado""",Combien d'employés vivent dans l'État de Géorgie ?
"SELECT count(*) FROM addresses WHERE state_province_county = ""Colorado""",Combien d'employés vivent en Géorgie ?
SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*) > 3,Trouvez le code de mode de paiement utilisé par plus de 3 parties.
SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*) > 3,Quels sont les codes de méthode de paiement qui ont été utilisés par plus de 3 parties ?
"SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""","Trouvez le nom des organisations dont le nom contient ""Party""."
"SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""","Quels sont les noms des organisations qui contiennent le mot ""Parti"" ?"
SELECT count(DISTINCT payment_method_code) FROM parties,Combien de méthodes de paiement distinctes sont utilisées par les parties ?
SELECT count(DISTINCT payment_method_code) FROM parties,Comptez le nombre de codes de méthode de paiement différents utilisés par les parties.
SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id = t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1,Quel est l'e-mail de la partie qui a utilisé les services le plus de fois ?
SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id = t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1,Renvoyez l'e-mail de la partie qui a utilisé les services de la partie le plus grand nombre de fois.
"SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""","Dans quel état l'adresse ""6862 Kaitlyn Knolls"" peut-elle se trouver ?"
"SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""","Donner l'état correspondant au numéro de ligne du bâtiment ""6862 Kaitlyn Knolls""."
SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'organisation qui a le plus grand nombre d'individus de contact ?
SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1,Renvoie le nom de l'organisation qui a le plus de personnes à contacter.
SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id = t2.individual_id,Trouvez le nom de famille des personnes qui ont été des personnes-ressources d'une organisation.
SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id = t2.individual_id,Quels sont les noms de famille des personnes qui ont été des personnes-ressources pour une organisation ?
SELECT count(*) FROM driver,Combien y a-t-il de chauffeurs ?
"SELECT name , home_city , age FROM driver","Afficher le nom, la ville de résidence et l'âge de tous les conducteurs."
"SELECT party , count(*) FROM driver GROUP BY party",Indiquez le groupe et le nombre de chauffeurs dans chaque groupe.
SELECT name FROM driver ORDER BY age DESC,Afficher le nom des conducteurs par ordre décroissant d'âge.
SELECT DISTINCT home_city FROM driver,Afficher toutes les différentes villes de résidence.
SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1,Afficher la ville d'origine avec le plus grand nombre de conducteurs.
SELECT party FROM driver WHERE home_city = 'Hartford' AND age > 40,Montrez la fête avec des chauffeurs de Hartford et des chauffeurs de plus de 40 ans.
SELECT home_city FROM driver WHERE age > 40 GROUP BY home_city HAVING count(*) >= 2,Indiquez la ville d'origine d'au moins deux conducteurs de plus de 40 ans.
SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age > 40,Afficher toutes les villes de résidence sauf celles ayant un chauffeur de plus de 40 ans.
SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus),Afficher les noms des chauffeurs sans autobus scolaire.
SELECT TYPE FROM school GROUP BY TYPE HAVING count(*) = 2,Montrez les types d'écoles qui ont deux écoles.
"SELECT T2.school , T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id",Afficher le nom de l'école et le nom du conducteur pour tous les autobus scolaires.
"SELECT max(years_working) , min(years_working) , avg(years_working) FROM school_bus","Quelles sont les années maximales, minimales et moyennes passées à travailler sur un autobus scolaire ?"
"SELECT school , TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)",Afficher le nom et le type de l'école pour les écoles sans autobus scolaire.
"SELECT T2.type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",Indiquez le type d'école et le nombre d'autobus pour chaque type.
SELECT count(*) FROM driver WHERE home_city = 'Hartford' OR age < 40,Combien de conducteurs sont de la ville de Hartford ou ont moins de 40 ans ?
SELECT name FROM driver WHERE home_city = 'Hartford' AND age < 40,Listez les noms des conducteurs de la ville de Hartford et de moins de 40 ans.
SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id = t2.driver_id ORDER BY years_working DESC LIMIT 1,trouver le nom du conducteur qui conduit l'autobus scolaire avec la plus longue histoire de travail.
SELECT count(*) FROM flight WHERE velocity > 200,Combien de vols ont une vitesse supérieure à 200 ?
"SELECT vehicle_flight_number , date , pilot FROM flight ORDER BY altitude ASC","Indiquez le numéro de vol du véhicule, la date et le pilote de tous les vols, classés par altitude."
"SELECT id , country , city , name FROM airport ORDER BY name","Indiquez l'identifiant, le pays, la ville et le nom des aéroports classés par ordre alphabétique du nom."
SELECT max(group_equity_shareholding) FROM operate_company,Quelle est la participation maximale du groupe dans les sociétés ?
SELECT avg(velocity) FROM flight WHERE pilot = 'Thompson',Quelle est la vitesse du pilote nommé 'Thompson' ?
"SELECT T1.name , T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id",Quels sont les noms et les types des compagnies qui ont déjà opéré un vol ?
SELECT name FROM airport WHERE country != 'Iceland',Quels sont les noms des aéroports qui ne sont pas dans le pays 'Islande' ?
SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T2.velocity < 200,Quels sont les types distincts de compagnies qui ont opéré des vols avec une vitesse inférieure à 200 ?
"SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count(*) > 1",Quels sont les identifiants et les noms des compagnies qui ont opéré plus d'un vol ?
"SELECT T1.id , T1.name , T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","Quels sont l'identifiant, le nom et le code IATA de l'aéroport qui a effectué le plus de vols ?"
SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.country = 'United States' OR T1.name = 'Billund Airport',Quels sont les différents noms de pilotes ayant piloté un vol dans le pays 'Etats-Unis' ou dans l'aéroport nommé 'Aéroport de Billund' ?
"SELECT TYPE , count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",Quel est le type d'entreprise le plus courant et combien y en a-t-il ?
SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot = 'Thompson' );,"Dans combien d'aéroports le pilote ""Thompson"" n'a-t-il pas piloté un avion ?"
SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services',Indiquez le nom des pilotes qui ont volé à la fois pour une société qui fournit principalement des services de 'Cargo' et pour une société qui gère des activités de 'Services de restauration'.
SELECT name FROM airport WHERE name LIKE '%international%',"Lequel des noms d'aéroport contient le mot ""international"" ?"
"SELECT T3.id , count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id",Combien d'entreprises exploitent des compagnies aériennes dans chaque aéroport ?
"SELECT count(*) , country FROM airport GROUP BY country",Combien y a-t-il d'aéroports dans chaque pays ?
SELECT country FROM airport GROUP BY country HAVING count(*) > 2,quels pays ont plus de 2 aéroports ?
SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1,quel pilote est en charge du plus grand nombre de vols ?
SELECT count(*) FROM Accounts,Combien de comptes avons-nous ?
SELECT count(*) FROM Accounts,Comptez le nombre de comptes.
"SELECT account_id , account_details FROM Accounts",Afficher tous les identifiants de compte et les détails du compte.
"SELECT account_id , account_details FROM Accounts",Quels sont les identifiants et les détails de tous les comptes ?
SELECT count(*) FROM Statements,Combien de déclarations avons-nous ?
SELECT count(*) FROM Statements,Comptez le nombre de déclarations.
"SELECT STATEMENT_ID , statement_details FROM Statements",Répertorier tous les identifiants de relevé et les détails du relevé.
"SELECT STATEMENT_ID , statement_details FROM Statements",Quels sont les identifiants et les détails de toutes les déclarations ?
"SELECT T1.statement_id , T2.statement_details , T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id","Afficher l'identifiant du relevé, le détail du relevé, le détail du compte pour les comptes."
"SELECT T1.statement_id , T2.statement_details , T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id","Quels sont les identifiants de relevé, les détails du relevé et les détails du compte, pour tous les comptes ?"
"SELECT STATEMENT_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID",Afficher tous les identifiants de relevé et le nombre de comptes pour chaque relevé.
"SELECT STATEMENT_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID",Quels sont les différents identifiants de relevé sur les comptes et le nombre de comptes pour chacun ?
"SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",Afficher l'identifiant du relevé et le détail du relevé pour le relevé avec le plus grand nombre de comptes.
"SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",Quels sont l'identifiant et les détails du relevé pour le relevé qui a le plus de comptes correspondants ?
SELECT count(*) FROM Documents,Afficher le nombre de documents.
SELECT count(*) FROM Documents,Comptez le nombre de documents.
SELECT count(*) FROM Documents,Combien de documents avons-nous ?
SELECT count(*) FROM Documents,Comptez le nombre de documents.
"SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'","Indiquez le code de type de document, le nom du document et la description du document portant le nom ""Noel CV"" ou le nom ""King Book""."
"SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'","Quels sont le type, le nom et la description du document qui porte soit le nom 'Noel CV' ou 'King Book' ?"
"SELECT document_id , document_name FROM Documents",Afficher les identifiants et les noms de tous les documents.
"SELECT document_id , document_name FROM Documents",Quels sont les identifiants et les noms de chacun des documents ?
"SELECT document_name , document_id FROM Documents WHERE document_type_code = ""BK""",Trouvez les noms et identifiants de tous les documents avec le code de type de document BK.
"SELECT document_name , document_id FROM Documents WHERE document_type_code = ""BK""",Quels sont les noms et identifiants des documents qui ont le code de type BK ?
"SELECT count(*) , project_id FROM Documents WHERE document_type_code = ""BK"" GROUP BY project_id",Combien y a-t-il de documents avec le code de type de document BK pour chaque identifiant de produit ?
"SELECT count(*) , project_id FROM Documents WHERE document_type_code = ""BK"" GROUP BY project_id",Comptez le nombre de documents avec le code de type BK qui correspondent à chaque identifiant de produit.
"SELECT document_name , document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'",Afficher le nom du document et la date du document pour tous les documents du projet avec les détails 'Projet de base de données graphique'.
"SELECT document_name , document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'","Quels sont les noms et les dates des documents correspondant au projet dont les détails sont ""Projet de base de données de graphes"" ?"
"SELECT project_id , count(*) FROM Documents GROUP BY project_id",Afficher les identifiants de projet et le nombre de documents dans chaque projet.
"SELECT project_id , count(*) FROM Documents GROUP BY project_id",Combien de documents correspondent à chaque identifiant de projet ?
SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1,Quel est l'identifiant du projet avec le moins de documents ?
SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1,Renvoie l'identifiant du projet qui a le moins de documents correspondants.
SELECT project_id FROM Documents GROUP BY project_id HAVING count(*) >= 2,Afficher les identifiants des projets avec au moins 2 documents.
SELECT project_id FROM Documents GROUP BY project_id HAVING count(*) >= 2,Que sont les identifiants de projet des projets qui ont 2 documents correspondants ou plus ?
"SELECT document_type_code , count(*) FROM Documents GROUP BY document_type_code",Énumérez les codes de type de document et le nombre de documents dans chaque code.
"SELECT document_type_code , count(*) FROM Documents GROUP BY document_type_code",Combien y a-t-il de documents de chaque type ?
SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de type de document avec le plus grand nombre de documents ?
SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1,Renvoie le code du type de document le plus courant.
SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*) < 3,Afficher le code du type de document avec moins de 3 documents.
SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*) < 3,Quels sont les codes correspondant aux types de documents pour lesquels il existe moins de 3 documents ?
"SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'",Afficher le détail du relevé et le nom du document correspondant pour le relevé avec le détail 'Projet privé'.
"SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'","Quels sont les détails des déclarations avec les détails 'Projet privé', et quels sont les noms des documents correspondants ?"
"SELECT document_type_code , document_type_name , document_type_description FROM Ref_document_types","Afficher tous les codes de type de document, les noms de type de document, les descriptions de type de document."
"SELECT document_type_code , document_type_name , document_type_description FROM Ref_document_types","Quels sont les codes, les noms et les descriptions des différents types de documents ?"
"SELECT document_type_description FROM Ref_document_types WHERE document_type_name = ""Film""",Quelle est la description du type de document pour le type de document nommé Film ?
"SELECT document_type_description FROM Ref_document_types WHERE document_type_name = ""Film""",Renvoie la description du nom du type de document 'Film'.
"SELECT T1.document_type_name , T1.document_type_description , T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code",Quel est le nom du type de document et la description du type de document et la date de création pour tous les documents ?
"SELECT T1.document_type_name , T1.document_type_description , T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code","Renvoie le nom du type, la description du type et la date de création de chaque document."
SELECT count(*) FROM Projects,Afficher le nombre de projets.
SELECT count(*) FROM Projects,Combien y a-t-il de projets ?
"SELECT project_id , project_details FROM Projects",Liste des identifiants et des détails pour tous les projets.
"SELECT project_id , project_details FROM Projects",Quels sont les identifiants et les détails de chaque projet ?
"SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count(*) > 2",Quel est l'identifiant et les détails du projet pour le projet avec au moins deux documents ?
"SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count(*) > 2",Renvoie les identifiants et détails correspondant aux projets pour lesquels il existe plus de deux documents.
"SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = ""King Book""","Quel est le détail du projet pour le projet avec le document ""King Book"" ?"
"SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = ""King Book""",Donnez les détails du projet avec le nom du document 'King Book'.
SELECT count(*) FROM Ref_budget_codes,Combien de types de budget avons-nous ?
SELECT count(*) FROM Ref_budget_codes,Comptez le nombre de codes budgétaires.
"SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",Énumérez tous les codes et descriptions de type de budget.
"SELECT budget_type_code , budget_type_description FROM Ref_budget_codes",Quels sont les codes de type et les descriptions de chaque type de budget ?
"SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = ""ORG""",Quelle est la description du type de budget avec le code ORG ?
"SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = ""ORG""",Renvoie la description du type de budget qui a le code ORG.
SELECT count(*) FROM Documents_with_expenses,Combien de documents ont des dépenses ?
SELECT count(*) FROM Documents_with_expenses,Comptez le nombre de documents avec dépenses.
SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF',"Quels sont les ID de document pour le code de type de budget ""SF"" ?"
SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF',Donnez les identifiants des documents avec des dépenses qui ont le code budgétaire 'SF'.
"SELECT T2.budget_type_code , T2.budget_type_description , T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code",Affichez le code et la description du type de budget et l'identifiant du document correspondant.
"SELECT T2.budget_type_code , T2.budget_type_description , T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code","Renvoie les codes de type de budget, les descriptions de type de budget et les ID de document pour les documents avec dépenses."
"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = ""Government""","Afficher les identifiants pour tous les documents avec des types de budget décrits comme ""Gouvernement""."
"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = ""Government""","Donnez les identifiants des documents qui ont la description du budget ""Gouvernement""."
"SELECT budget_type_code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code",Afficher les codes de type de budget et le nombre de documents dans chaque type de budget.
"SELECT budget_type_code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code",Quels sont les différents codes de type de budget et combien de documents y a-t-il pour chacun ?
SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1,Quel est le code de type de budget avec le plus grand nombre de documents.
SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1,Indiquez le code de type de budget le plus courant parmi les documents avec dépenses.
SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses,Quels sont les identifiants des documents qui n'ont pas de budget de dépenses ?
SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses,Renvoie les identifiants des documents qui n'ont pas de dépenses.
"SELECT document_id FROM Documents WHERE document_type_code = ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses",Afficher les identifiants de tous les documents de type CV sans budget de dépenses.
"SELECT document_id FROM Documents WHERE document_type_code = ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses",Quels sont les identifiants des documents avec le code de type CV qui n'ont pas de dépenses.
SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%',Quels sont les identifiants des documents avec la lettre 's' dans le nom avec tous les budgets de dépenses.
SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%',Donnez les identifiants des documents qui ont des dépenses et contiennent la lettre s dans leurs noms.
SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses ),Combien de documents n'ont aucune dépense ?
SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses ),Comptez le nombre de documents qui n'ont pas de dépenses.
SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF',Quelles sont les dates des documents comportant à la fois des dépenses de type 'GV' et de type 'SF' ?
SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF',Donnez les dates de création des documents qui ont à la fois les codes de type de budget 'GV' et 'SF'.
"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""",Quels sont les détails du compte avec la valeur la plus élevée ou avec une valeur contenant le caractère '5' ?
"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""","Renvoie les détails du compte avec la plus grande valeur, ainsi que ceux qui incluent le caractère 5."
SELECT count(*) FROM scientists,Trouvez le nombre total de scientifiques.
SELECT count(*) FROM scientists,Combien y a-t-il de scientifiques ?
SELECT sum(hours) FROM projects,Trouver le nombre total d'heures de tous les projets.
SELECT sum(hours) FROM projects,Quel est le nombre total d'heures pour tous les projets ?
SELECT count(DISTINCT scientist) FROM assignedto,Combien de scientifiques différents sont affectés à un projet ?
SELECT count(DISTINCT scientist) FROM assignedto,Comptez le nombre de scientifiques différents affectés à un projet.
SELECT count(DISTINCT name) FROM projects,Trouver le nombre de projets distincts.
SELECT count(DISTINCT name) FROM projects,Combien y a-t-il de projets différents ?
SELECT avg(hours) FROM projects,Trouvez les heures moyennes de tous les projets.
SELECT avg(hours) FROM projects,Quelle est la moyenne d'heures sur l'ensemble des projets ?
SELECT name FROM projects ORDER BY hours DESC LIMIT 1,Trouvez le nom du projet qui dure le plus longtemps.
SELECT name FROM projects ORDER BY hours DESC LIMIT 1,Quel est le nom du projet avec le plus d'heures ?
SELECT name FROM projects WHERE hours > (SELECT avg(hours) FROM projects),Indiquez le nom de tous les projets qui sont exploités plus longtemps que les heures de travail moyennes de tous les projets.
SELECT name FROM projects WHERE hours > (SELECT avg(hours) FROM projects),Quels sont les noms des projets qui ont pris plus longtemps que le nombre moyen d'heures pour tous les projets ?
"SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1",Trouvez le nom et les heures du projet qui a le plus grand nombre de scientifiques.
"SELECT T1.name , T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1",Quel est le nom et les horaires du projet auquel le plus de scientifiques sont affectés ?
SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%',Trouvez le nom du projet pour lequel un scientifique dont le nom contient ' Smith ' est affecté.
SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%',Quel est le nom du projet auquel est affecté un scientifique dont le nom contient « Smith » ?
SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith',Trouvez le nombre total d'heures des projets auxquels des scientifiques nommés Michael Rogers ou Carol Smith sont affectés.
SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith',Quelle est la somme des heures pour les projets auxquels les scientifiques du nom de Michael Rogers ou Carol Smith sont affectés ?
SELECT name FROM projects WHERE hours BETWEEN 100 AND 300,Trouvez le nom des projets qui nécessitent entre 100 et 300 heures de travail.
SELECT name FROM projects WHERE hours BETWEEN 100 AND 300,Comment s'appellent les projets qui nécessitent entre 100 et 300 heures ?
SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax',"Trouvez le nom du scientifique qui a travaillé à la fois sur un projet intitulé ""Matter of Time"" et sur un projet intitulé ""A Puzzling Parallax""."
SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax',"Quels sont les noms des scientifiques qui ont travaillé sur des projets nommés ""Matter of Time"" et ""A Puzzling Pattern"" ?"
SELECT name FROM scientists ORDER BY name,Listez les noms de tous les scientifiques triés par ordre alphabétique.
SELECT name FROM scientists ORDER BY name,Quels sont les noms de tous les scientifiques par ordre alphabétique ?
"SELECT count(*) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",Trouvez le nombre de scientifiques impliqués pour chaque nom de projet.
"SELECT count(*) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",Quels sont les noms de tous les projets et combien de scientifiques ont été affectés à chacun d'eux ?
"SELECT count(*) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name",Trouver le nombre de scientifiques impliqués pour les projets nécessitant plus de 300 heures.
"SELECT count(*) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name","Quels sont les noms des projets qui nécessitent plus de 300 heures, et combien de scientifiques sont affectés à chacun ?"
"SELECT count(*) , T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",Trouvez le nombre de projets sur lesquels chaque scientifique travaille et le nom du scientifique.
"SELECT count(*) , T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",Comment s'appellent les scientifiques et sur combien de projets chacun d'eux travaille-t-il ?
"SELECT T3.ssn , T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT max(hours) FROM projects)",Trouvez le SSN et le nom des scientifiques qui sont affectés au projet avec les heures les plus longues.
"SELECT T3.ssn , T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT max(hours) FROM projects)",Quels sont le SSN et les noms des scientifiques travaillant sur le projet avec le plus d'heures ?
SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist = T2.ssn,Trouvez le nom des scientifiques qui sont affectés à un projet.
SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist = T2.ssn,Comment s'appellent les scientifiques affectés à un projet ?
SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo),Sélectionnez les noms de projets qui ne sont pas encore attribués.
SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo),Quels sont les noms des projets qui n'ont pas été attribués ?
SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo),Trouvez le nom des scientifiques qui ne sont affectés à aucun projet.
SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo),Quels sont les noms des scientifiques qui n'ont pas été assignés à un projet ?
SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo),Trouvez le nombre de scientifiques qui ne sont affectés à aucun projet.
SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo),Combien de scientifiques n'ont aucun projet qui leur est assigné ?
SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT max(hours) FROM projects),Trouvez les noms des scientifiques qui ne travaillent pas sur le projet avec les heures les plus élevées.
SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT max(hours) FROM projects),Quels sont les noms des scientifiques qui ne travaillent pas sur le projet avec le plus d'heures ?
"SELECT T1.Name , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name , T1.Name","Énumérez tous les noms des scientifiques, les noms de leurs projets et les heures travaillées par ce scientifique sur chaque projet, dans l'ordre alphabétique du nom du projet, puis du nom du scientifique."
"SELECT T1.Name , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name , T1.Name","Quels sont les noms de chaque scientifique, les noms des projets sur lesquels ils travaillent et les heures pour chacun de ces projets, classés par ordre alphabétique par nom de projet, puis par nom de scientifique."
"SELECT T2.name , T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT min(hours) FROM projects)",Trouvez le nom du projet qui nécessite le moins de temps pour se terminer et le nom des scientifiques qui y ont travaillé.
"SELECT T2.name , T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT min(hours) FROM projects)",Quel est le nom du projet qui nécessite le moins d'heures et les noms des scientifiques qui y sont affectés ?
SELECT Name FROM WINE ORDER BY Score LIMIT 1,Comment s'appelle le vin le mieux noté ?
SELECT Name FROM WINE ORDER BY Score LIMIT 1,Donnez le nom du vin avec le score le plus élevé.
SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1,De quelle cave est le vin qui a le score le plus élevé ?
SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1,Quelle est la cave dans laquelle le vin avec la note la plus élevée a été élaboré ?
"SELECT Name FROM WINE WHERE YEAR = ""2008""",Retrouvez les noms de tous les vins produits en 2008.
"SELECT Name FROM WINE WHERE YEAR = ""2008""",Quels sont les noms de tous les vins produits en 2008 ?
"SELECT Grape , Appelation FROM WINE",Lister les cépages et les appellations de tous les vins.
"SELECT Grape , Appelation FROM WINE",Quels sont les cépages et les appellations de chaque vin ?
"SELECT Name , Score FROM WINE",Énumérez les noms et les notes de tous les vins.
"SELECT Name , Score FROM WINE",Quels sont les noms et les notes de tous les vins ?
"SELECT Area , County FROM APPELLATIONS",Indiquez la région et le comté de toutes les appellations.
"SELECT Area , County FROM APPELLATIONS",Quels sont les domaines et les comtés pour toutes les appellations ?
SELECT Price FROM WINE WHERE YEAR < 2010,Quels sont les prix des vins produits avant l'année 2010 ?
SELECT Price FROM WINE WHERE YEAR < 2010,Restituer les prix des vins produits avant 2010.
SELECT Name FROM WINE WHERE score > 90,Énumérez les noms de tous les vins distincts qui ont des scores supérieurs à 90.
SELECT Name FROM WINE WHERE score > 90,Comment s'appellent les vins avec des notes supérieures à 90 ?
"SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""Red""",Énumérez les noms de tous les vins distincts qui sont faits de raisins de couleur rouge.
"SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""Red""",Comment s'appellent les vins élaborés à partir de raisins rouges ?
"SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = ""North Coast""",Trouvez les noms de tous les vins distincts qui ont des appellations dans la région de la côte nord.
"SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = ""North Coast""",Quels sont les noms distincts des vins qui ont des appellations dans la région de la côte nord ?
"SELECT count(*) FROM WINE WHERE Winery = ""Robert Biale""",Combien de vins sont produits à la cave Robert Biale ?
"SELECT count(*) FROM WINE WHERE Winery = ""Robert Biale""",Comptez le nombre de vins produits à la cave Robert Biale.
"SELECT count(*) FROM APPELLATIONS WHERE County = ""Napa""",Combien y a-t-il d'appellations dans le Napa Country ?
"SELECT count(*) FROM APPELLATIONS WHERE County = ""Napa""",Comptez le nombre d'appelations dans le comté de Napa.
"SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Sonoma""",Donnez-moi les prix moyens des vins produits par les appellations du comté de Sonoma.
"SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Sonoma""",Quel est le prix moyen des vins produits dans les appellations du comté de Sonoma ?
"SELECT T2.Name , T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""White""",Quels sont les noms et les scores des vins qui sont faits de raisins de couleur blanche ?
"SELECT T2.Name , T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""White""",Donnez les noms et les notes des vins issus de raisins blancs.
"SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = ""Central Coast"" AND T2.year < 2005",Retrouvez le prix maximum des vins issus des appellations de la zone Côte Centrale et produits avant l'année 2005.
"SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = ""Central Coast"" AND T2.year < 2005","Quel est le prix maximum des vins de l'appellation de la zone de la Côte Centrale, produits avant 2005 ?"
"SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""White"" AND T2.score > 90",Trouvez le cépage dont les raisins de couleur blanche sont utilisés pour produire des vins avec des notes supérieures à 90.
"SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""White"" AND T2.score > 90",Trouvez le cépage blanc utilisé pour produire des vins avec des notes supérieures à 90.
"SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""Red"" AND T2.price > 50",Quels sont les vins qui ont des prix supérieurs à 50 et faits de raisins de couleur rouge ?
"SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = ""Red"" AND T2.price > 50",Quels sont les noms des vins élaborés à partir de raisins rouges et avec des prix supérieurs à 50 ?
"SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50",Quels sont les vins qui ont des prix inférieurs à 50 et qui ont des appellations dans le comté de Monterey ?
"SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = ""Monterey"" AND T2.price < 50",Donnez les noms des vins avec des prix inférieurs à 50 et avec des appellations dans le comté de Monterey.
"SELECT count(*) , Grape FROM WINE GROUP BY Grape",Quels sont les nombres de vins pour différents cépages ?
"SELECT count(*) , Grape FROM WINE GROUP BY Grape",Combien y a-t-il de vins pour chaque cépage ?
"SELECT avg(Price) , YEAR FROM WINE GROUP BY YEAR",Quels sont les prix moyens des vins des différentes années ?
"SELECT avg(Price) , YEAR FROM WINE GROUP BY YEAR",Quel est le prix moyen des vins pour chacun ?
"SELECT DISTINCT Name FROM WINE WHERE Price > (SELECT min(Price) FROM wine WHERE Winery = ""John Anthony"")",Trouvez les noms distincts de tous les vins qui ont des prix plus élevés que certains vins de la cave John Anthony.
"SELECT DISTINCT Name FROM WINE WHERE Price > (SELECT min(Price) FROM wine WHERE Winery = ""John Anthony"")",Quels sont les noms distincts des vins avec des prix plus élevés que n'importe quel vin de la cave John Anthony.
SELECT DISTINCT Name FROM WINE ORDER BY Name,Énumérez les noms de tous les vins distincts par ordre alphabétique.
SELECT DISTINCT Name FROM WINE ORDER BY Name,"Quels sont les noms des vins, classés par ordre alphabétique ?"
SELECT DISTINCT Name FROM WINE ORDER BY price,Énumérez les noms de tous les vins distincts classés par prix.
SELECT DISTINCT Name FROM WINE ORDER BY price,"Quels sont les noms des vins, classés par prix croissant ?"
SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING T2.year < 2010 ORDER BY count(*) DESC LIMIT 1,Quelle est la zone de l'appellation qui produit le plus de vins avant le millésime 2010 ?
SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING T2.year < 2010 ORDER BY count(*) DESC LIMIT 1,Quelle est la superficie de l'appellation qui produisait le plus de vins avant 2010 ?
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1,Quelle est la couleur du raisin dont les produits viticoles ont le prix moyen le plus élevé ?
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1,Donner la couleur du cépage dont les produits viticoles ont le prix moyen le plus élevé ?
SELECT DISTINCT Name FROM WINE WHERE YEAR < 2000 OR YEAR > 2010,Trouvez les noms distincts des vins produits avant l'année 2000 ou après l'année 2010.
SELECT DISTINCT Name FROM WINE WHERE YEAR < 2000 OR YEAR > 2010,Donner les noms distincts des vins fabriqués avant 2000 ou après 2010.
SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100,Trouvez la cave distincte des vins ayant un prix entre 50 et 100.
SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100,Quels sont les établissements vinicoles distincts qui produisent des vins coûtant entre 50 et 100 ?
"SELECT AVG(Price) , AVG(Cases) FROM WINE WHERE YEAR = 2009 AND Grape = ""Zinfandel""",Quels sont les prix moyens et les caisses de vins produits au cours de l'année 2009 et issus du cépage Zinfandel ?
"SELECT AVG(Price) , AVG(Cases) FROM WINE WHERE YEAR = 2009 AND Grape = ""Zinfandel""",Donnez le prix moyen et la caisse des vins issus du cépage Zinfandel en 2009.
"SELECT max(Price) , max(Score) FROM WINE WHERE Appelation = ""St. Helena""",Quels sont le prix maximum et la note des vins produits par l'appellation Sainte-Hélène ?
"SELECT max(Price) , max(Score) FROM WINE WHERE Appelation = ""St. Helena""",Donner le prix maximum et la note des vins produits dans l'appelation Sainte-Hélène.
"SELECT max(Price) , max(Score) , YEAR FROM WINE GROUP BY YEAR",Quels sont le prix maximum et la note des vins chaque année ?
"SELECT max(Price) , max(Score) , YEAR FROM WINE GROUP BY YEAR",Quels sont le prix maximum et la note des vins pour chaque année ?
"SELECT avg(Price) , avg(Score) , Appelation FROM WINE GROUP BY Appelation",Quels sont le prix moyen et la note des vins regroupés par appellation ?
"SELECT avg(Price) , avg(Score) , Appelation FROM WINE GROUP BY Appelation",Quels sont le prix moyen et la note des vins pour chaque appellation ?
SELECT Winery FROM WINE GROUP BY Winery HAVING count(*) >= 4,Trouvez les établissements vinicoles qui ont au moins quatre vins.
SELECT Winery FROM WINE GROUP BY Winery HAVING count(*) >= 4,Quels domaines produisent au moins quatre vins ?
SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count(*) <= 3,Trouvez le pays de toutes les appellations qui ont au plus trois vins.
SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count(*) <= 3,Quels sont les pays pour les appellations avec au plus 3 vins ?
"SELECT Name FROM WINE WHERE YEAR < (SELECT min(YEAR) FROM WINE WHERE Winery = ""Brander"")",Quels sont les noms des vins dont l'année de production est antérieure à l'année de tous les vins de la cave Brander ?
"SELECT Name FROM WINE WHERE YEAR < (SELECT min(YEAR) FROM WINE WHERE Winery = ""Brander"")",Quels sont les noms des vins produits avant tout vin de la cave Brander ?
SELECT Name FROM WINE WHERE Price > (SELECT max(Price) FROM WINE WHERE YEAR = 2006),Quels sont les noms des vins qui sont plus chers que tous les vins de l'année 2006 ?
SELECT Name FROM WINE WHERE Price > (SELECT max(Price) FROM WINE WHERE YEAR = 2006),Donnez les noms des vins dont les prix sont supérieurs à tout vin produit en 2006.
"SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = ""White"" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",Trouvez les 3 meilleurs établissements vinicoles avec le plus grand nombre de vins élaborés à partir de raisins de couleur blanche.
"SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = ""White"" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",Quels sont les 3 domaines viticoles qui produisent le plus de vins à base de raisins blancs ?
"SELECT Grape , Winery , YEAR FROM WINE WHERE Price > 100 ORDER BY YEAR","Indiquez le cépage, la cave et l'année des vins dont le prix est supérieur à 100 classés par année."
"SELECT Grape , Winery , YEAR FROM WINE WHERE Price > 100 ORDER BY YEAR","Quels sont les cépages, domaines viticoles et années pour les vins dont le prix est supérieur à 100, triés par année ?"
"SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93 ORDER BY Name","Listez le cépage, l'appellation et le nom des vins dont la note est supérieure à 93 classés par Nom."
"SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93 ORDER BY Name","Quels sont les cépages, appellations et vins avec des notes supérieures à 93, triés par Nom ?"
"SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = ""Central Coast""",Retrouvez les appellations qui produisent des vins après le millésime 2008 mais pas dans la région de la Côte Centrale.
"SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = ""Central Coast""",Quelles sont les appellations des vins produits après 2008 mais pas dans la région de la Côte Centrale ?
SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'),Trouvez le prix moyen des vins qui ne sont pas produits dans le comté de Sonoma.
SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma'),Quel est le prix moyen des vins non produits dans le comté de Sonoma ?
SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1,Trouvez le comté où produit le plus grand nombre de vins avec un score supérieur à 90.
SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1,Quel est le département qui produit le plus de vins avec une note supérieure à 90 ?
SELECT count(*) FROM station,Combien y a-t-il de gares ?
"SELECT name , LOCATION , number_of_platforms FROM station","Afficher le nom, l'emplacement et le nombre de plates-formes pour toutes les stations."
SELECT DISTINCT LOCATION FROM station,Quels sont tous les emplacements des gares ?
"SELECT name , total_passengers FROM station WHERE LOCATION != 'London'",Afficher les noms et le nombre total de passagers pour toutes les gares hors de Londres.
"SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3",Affichez les noms et les principaux services des gares qui ont les trois premiers nombres de passagers.
"SELECT avg(total_passengers) , max(total_passengers) FROM station WHERE LOCATION = 'London' OR LOCATION = 'Glasgow'",Quel est le nombre moyen et maximum de passagers total pour les gares de Londres ou de Glasgow ?
"SELECT LOCATION , sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY LOCATION",Afficher tous les emplacements et le nombre total de plates-formes et de passagers pour toutes les gares de chaque emplacement.
SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms >= 15 AND total_passengers > 25,Afficher tous les emplacements qui ont des gares avec au moins 15 plates-formes et des gares avec plus de 25 passagers au total.
SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms >= 15,Afficher tous les emplacements qui n'ont pas de gare avec au moins 15 quais.
SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1,Afficher l'emplacement avec le plus grand nombre de gares.
"SELECT name , TIME , service FROM train","Afficher le nom, l'heure et le service de tous les trains."
SELECT count(*) FROM train,Afficher le nombre de trains
"SELECT name , service FROM train ORDER BY TIME",Afficher le nom et le service pour tous les trains dans l'ordre par heure.
"SELECT T2.name , count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",Afficher le nom de la gare et le nombre de trains dans chaque gare.
"SELECT T2.name , T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id",afficher le nom du train et le nom de la gare pour chaque train.
"SELECT T3.name , T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T2.location = 'London' ORDER BY T3.time DESC",Afficher tous les noms et horaires des trains dans les gares de Londres par ordre décroissant d'heure de train.
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1,Afficher le nom de la gare avec le plus grand nombre de trains.
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id HAVING count(*) >= 2,Afficher le nom de la gare avec au moins deux trains.
SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*) = 1,Afficher tous les emplacements avec une seule station.
SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station),Afficher les noms des gares sans aucun train.
"SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = ""Ananthapuri Express"" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = ""Guruvayur Express""","Quels sont les noms des gares qui desservent à la fois les trains ""Ananthapuri Express"" et ""Guruvayur Express"" ?"
"SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id = T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id = T4.station_id WHERE t4.location = ""London"")",Trouvez les noms des trains qui ne passent par aucune gare située à Londres.
"SELECT name , LOCATION FROM station ORDER BY Annual_entry_exit , Annual_interchanges","Dressez la liste des noms et des emplacements de toutes les gares classées par leur montant annuel d'entrée, de sortie et d'échange."
SELECT vehicle_id FROM Vehicles;,Lister tous les identifiants de véhicules
SELECT vehicle_id FROM Vehicles;,Quels sont les identifiants de tous les véhicules ?
SELECT count(*) FROM Vehicles;,Combien de véhicule au total ?
SELECT count(*) FROM Vehicles;,Combien de véhicules existe-t-il ?
SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;,Afficher le détail du véhicule avec l'identifiant 1.
SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;,Quels sont les détails de la voiture avec l'identifiant 1 ?
"SELECT first_name , middle_name , last_name FROM Staff;","Indiquez le prénom, le deuxième prénom et le nom de famille de tout le personnel."
"SELECT first_name , middle_name , last_name FROM Staff;","Quels sont les prénom, deuxième prénom et nom de famille de tout le personnel ?"
"SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quel est l'anniversaire du membre du personnel dont le prénom est Janessa et le nom de famille Sawyn ?
"SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quelle est la date de naissance du membre du personnel nommé Janessa Sawayn ?
"SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quand le membre du personnel dont le prénom est Janessa et le nom de famille est-il Sawyn a-t-il rejoint l'entreprise ?
"SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quand le membre du personnel nommé Janessa Sawayn a-t-il rejoint l'entreprise ?
"SELECT date_left_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quand le membre du personnel dont le prénom est Janessa et le nom de famille est-il Sawyn a-t-il quitté l'entreprise ?
"SELECT date_left_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quand la collaboratrice Janessa Sawyn a-t-elle quitté l'entreprise ?
"SELECT count(*) FROM Staff WHERE first_name = ""Ludie"";",Combien d'employés portent le prénom Ludie ?
"SELECT count(*) FROM Staff WHERE first_name = ""Ludie"";",Combien d'employés ont pour prénom Ludie ?
"SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quel est le surnom du personnel dont le prénom est Janessa et le nom de famille est Sawyn ?
"SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",Quel est le surnom de l'employée nommée Janessa Sawayn ?
SELECT count(*) FROM Staff;,Combien de personnel au total ?
SELECT count(*) FROM Staff;,Combien y a-t-il d'employés?
"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Dans quelle ville vit le personnel dont le prénom est Janessa et le nom de famille est Sawyn ?
"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Dans quelle ville habite Janessa Sawayn ?
"SELECT T1.country , T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Dans quel pays et état le personnel porte-t-il le prénom de Janessa et le nom de famille de Sawayn ?
"SELECT T1.country , T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Dans quel pays et état vit Janessa Sawayn ?
"SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"";",Quelle est la durée totale de la leçon prise par le client dont le prénom est Rylan et le nom de famille est Goodwin ?
"SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"";",Quelle est la durée totale de la leçon prise par le client nommé Rylan Goodwin ?
"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Quel est le code postal du personnel avec le prénom comme Janessa et le nom de famille comme habitait Sawayn ?
"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Quel est le code postal du domicile de l'employée nommée Janessa Sawayn ?
"SELECT T2.first_name , T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = ""Damianfort"";",Découvrez le prénom et le nom du personnel habité dans la ville de Damianfort.
"SELECT T2.first_name , T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = ""Damianfort"";",Quel est le prénom et le nom de tous les employés qui habitent la ville de Damianfort ?
"SELECT T1.city , count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",Quelle ville vit le plus de staffs ? Indiquez le nom de la ville et le nombre d'employés.
"SELECT T1.city , count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",Dans quelle ville habitent le plus d'employés et combien d'entre eux y habitent ?
SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;,Énumérez les États qui ont entre 2 et 4 membres du personnel qui y vivent.
SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;,Quels sont les noms des états qui ont 2 à 4 employés qui y vivent ?
"SELECT first_name , last_name FROM Customers;",Indiquez le prénom et le nom de tous les clients.
"SELECT first_name , last_name FROM Customers;",Quels sont les noms et prénoms de tous les clients ?
"SELECT email_address , date_of_birth FROM Customers WHERE first_name = ""Carole""",Liste adresse e-mail et anniversaire du client dont le prénom est Carole.
"SELECT email_address , date_of_birth FROM Customers WHERE first_name = ""Carole""",Quelles sont les adresses mail et date de naissance de tous les clients qui se prénomment Carole ?
"SELECT phone_number , email_address FROM Customers WHERE amount_outstanding > 2000;",Indiquez le numéro de téléphone et l'adresse e-mail du client avec plus de 2000 soldes impayés.
"SELECT phone_number , email_address FROM Customers WHERE amount_outstanding > 2000;",Quels sont les numéros de téléphone et les adresses e-mail de tous les clients qui ont un solde impayé supérieur à 2 000 ?
"SELECT customer_status_code , cell_mobile_phone_number , email_address FROM Customers WHERE first_name = ""Marina"" OR last_name = ""Kohler""","Quel est le code de statut, le numéro de téléphone portable et l'adresse e-mail du client dont le nom de famille est Kohler ou le prénom est Marina ?"
"SELECT customer_status_code , cell_mobile_phone_number , email_address FROM Customers WHERE first_name = ""Marina"" OR last_name = ""Kohler""","Quels sont le code de statut, le numéro de téléphone et l'adresse e-mail du client dont le nom de famille est Kohler ou dont le prénom est Marina ?"
SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer',"Quelle est la date d'anniversaire des clients classés dans le statut ""Bon client"" ?"
SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer',"Quelle est la date de naissance de chaque client dont le code de statut est ""Bon client"" ?"
"SELECT date_became_customer FROM Customers WHERE first_name = ""Carole"" AND last_name = ""Bernhard"";",Quand est-ce qu'un client dont le prénom était Carole et le nom de famille était Bernhard est devenu client ?
"SELECT date_became_customer FROM Customers WHERE first_name = ""Carole"" AND last_name = ""Bernhard"";",Quand Carole Bernhard est-elle devenue cliente pour la première fois ?
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;",Énumérez tous les codes de statut client et le nombre de clients ayant chaque code de statut.
"SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;","Pour chaque code de statut client, combien de clients sont ainsi classés ?"
SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;,Quel code de statut client a le moins de clients ?
SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;,Quel est le code de statut avec le moins de clients ?
"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";",Combien de leçons suivies par un client dont le prénom est Rylan et le nom de famille sont Goodwin ?
"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";",Combien de leçons le client Ryan Goodwin a-t-il suivies ?
"SELECT max(amount_outstanding) , min(amount_outstanding) , avg(amount_outstanding) FROM Customers;","Quel est le montant maximum, minimum et moyen de l'encours du client ?"
"SELECT max(amount_outstanding) , min(amount_outstanding) , avg(amount_outstanding) FROM Customers;","Quel est le montant maximum, minimum et moyen d'argent restant pour tous les clients ?"
"SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",Listez les prénom et nom des clients dont le montant d'encours est compris entre 1000 et 3000.
"SELECT first_name , last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",Quels sont les noms et prénoms de tous les clients dont l'encours se situe entre 1 000 et 3 000 dollars ?
"SELECT T1.first_name , T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = ""Lockmanfurt"";",Liste des prénoms et noms de famille des clients résidant dans la ville de Lockmanfurt.
"SELECT T1.first_name , T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = ""Lockmanfurt"";",Quels sont les noms et prénoms de tous les clients qui vivaient à Lockmanfurt ?
"SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""",Dans quel pays vit le client dont le prénom est Carole et le nom de famille Bernhard ?
"SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""",Quel est le pays dans lequel vivait la cliente Carole Bernhard ?
"SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""",Quel est le code postal du client dont le prénom est Carole et le nom de famille Bernhard ?
"SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""",Quel est le code postal de la cliente Carole Bernhard ?
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;,Quelle ville a le plus grand nombre de clients ?
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;,Quelle est la ville avec le plus de clients ?
"SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Carole"" AND T2.last_name = ""Bernhard""",Combien au total le client dont le prénom est Carole et le nom de famille Bernhard a-t-il payé ?
"SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Carole"" AND T2.last_name = ""Bernhard""",Quel est le montant total de moeny payé par la cliente Carole Bernhard ?
SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );,Indiquez le nombre de clients qui n'ont aucun historique de paiement.
SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );,Combien de clients n'ont aucun historique de paiement ?
"SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) > 2;",Indiquez le prénom et le nom des clients qui ont effectué plus de 2 paiements.
"SELECT T2.first_name , T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) > 2;",Quels sont les noms et prénoms de tous les clients avec plus de 2 paiements ?
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code;",Répertoriez tous les modes de paiement et le nombre de paiements utilisant chacun des modes de paiement.
"SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code;","Pour chaque mode de paiement, combien de paiements ont été effectués ?"
"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";",Combien de cours étaient annulés ?
"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";",Combien de cours ont été annulés ?
"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";","Indiquez l'identifiant de la leçon de toutes les leçons enseignées par le personnel avec le prénom Janessa, le nom de famille Sawayn et le surnom contenant la lettre 's'."
"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";",Quels sont les identifiants de cours de tout le personnel enseigné par Janessa Sawayn dont le surnom a la lettre s ?
"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""",Combien de leçons enseignées par le personnel dont le prénom contient la lettre « a » ?
"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""",Combien de leçons ont été enseignées par un membre du personnel dont le prénom contient la lettre « a » ?
"SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Quelle est la durée totale de la leçon enseignée par le personnel dont le prénom est Janessa et le nom de famille est Sawyn ?
"SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Quelle est la durée totale de toutes les leçons enseignées par Janessa Sawayn ?
"SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Quel est le prix moyen d'une leçon enseignée par le personnel dont le prénom est Janessa et le nom de famille est Sawyn ?
"SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",Quel est le prix moyen d'un cours dispensé par Janessa Sawayn ?
"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Ray""",Combien de cours le client prénommé Ray a-t-il suivi ?
"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Ray""",Combien de cours le client prénommé Ray a-t-il suivis ?
SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff,Quels noms de famille sont utilisés à la fois par les clients et par le personnel ?
SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff,Quels sont les noms de famille utilisés par les clients et le personnel ?
SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id,Quel est le prénom du personnel qui n'a donné aucun cours ?
SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id,Quel est le prénom de tous les employés qui ne donnent pas de cours ?
"SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le détail du véhicule utilisé dans les cours la plupart du temps ?
SELECT count(*) FROM Faculty,Combien de professeurs avons-nous?
SELECT count(*) FROM Faculty,Quel est le nombre total de professeurs ?
SELECT DISTINCT rank FROM Faculty,Quels rangs avons-nous pour le corps professoral?
SELECT DISTINCT rank FROM Faculty,Trouvez la liste des grades distincts pour le corps professoral.
SELECT DISTINCT building FROM Faculty,Montrez tous les bâtiments distincts qui ont des salles de professeurs.
SELECT DISTINCT building FROM Faculty,Quels bâtiments ont des bureaux de faculté?
"SELECT rank , Fname , Lname FROM Faculty","Affichez le rang, le prénom et le nom de famille de tous les professeurs."
"SELECT rank , Fname , Lname FROM Faculty","Quels sont le grade, le prénom et le nom des membres du corps professoral ?"
"SELECT Fname , Lname , phone FROM Faculty WHERE Sex = 'F'","Indiquez le prénom, le nom et le numéro de téléphone de toutes les femmes membres du corps professoral."
"SELECT Fname , Lname , phone FROM Faculty WHERE Sex = 'F'","Quels sont le prénom, le nom et le numéro de téléphone de toutes les femmes membres du corps professoral ?"
SELECT FacID FROM Faculty WHERE Sex = 'M',Afficher les identifiants de tous les professeurs masculins.
SELECT FacID FROM Faculty WHERE Sex = 'M',Quels sont les identifiants de faculté de tous les membres masculins du corps professoral ?
"SELECT count(*) FROM Faculty WHERE Sex = \'F\' AND Rank = ""Professor""",Combien de femmes professeurs avons-nous ?
"SELECT count(*) FROM Faculty WHERE Sex = \'F\' AND Rank = ""Professor""",Comptez le nombre de femmes professeurs que nous avons.
"SELECT phone , room , building FROM Faculty WHERE Fname = ""Jerry"" AND Lname = ""Prince""","Montrez le téléphone, la chambre et le bâtiment de la faculté nommée Jerry Prince."
"SELECT phone , room , building FROM Faculty WHERE Fname = ""Jerry"" AND Lname = ""Prince""","Quels sont le téléphone, la chambre et le bâtiment du membre du corps professoral appelé Jerry Prince ?"
"SELECT count(*) FROM Faculty WHERE Rank = ""Professor"" AND building = ""NEB""",Combien y a-t-il de professeurs dans la construction de NEB ?
"SELECT count(*) FROM Faculty WHERE Rank = ""Professor"" AND building = ""NEB""",Comptez le nombre de professeurs qui ont un bureau dans le bâtiment NEB.
"SELECT fname , lname FROM Faculty WHERE Rank = ""Instructor""",Afficher le prénom et le nom de tous les instructeurs.
"SELECT fname , lname FROM Faculty WHERE Rank = ""Instructor""",Quels sont le prénom et le nom de tous les instructeurs ?
"SELECT building , count(*) FROM Faculty GROUP BY building",Montrez tous les bâtiments ainsi que le nombre de membres du corps professoral que les bâtiments ont.
"SELECT building , count(*) FROM Faculty GROUP BY building",Combien de professeurs chaque bâtiment compte-t-il ? Indiquez le résultat avec le nom du bâtiment.
SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1,Quel bâtiment compte le plus de professeurs ?
SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1,Trouvez le bâtiment qui compte le plus grand nombre de professeurs.
"SELECT building FROM Faculty WHERE rank = ""Professor"" GROUP BY building HAVING count(*) >= 10",Montrez tous les bâtiments qui ont au moins 10 professeurs.
"SELECT building FROM Faculty WHERE rank = ""Professor"" GROUP BY building HAVING count(*) >= 10",Dans quels bâtiments y a-t-il au moins dix professeurs ?
"SELECT rank , count(*) FROM Faculty GROUP BY rank","Pour chaque rang du corps professoral, indiquez le nombre de membres du corps professoral qui l'ont."
"SELECT rank , count(*) FROM Faculty GROUP BY rank",Combien de professeurs avons-nous pour chaque rang de professeur?
"SELECT rank , sex , count(*) FROM Faculty GROUP BY rank , sex",Afficher tous les grades et le nombre de professeurs masculins et féminins pour chaque grade.
"SELECT rank , sex , count(*) FROM Faculty GROUP BY rank , sex",Combien de membres du corps professoral avons-nous pour chaque rang et sexe ?
SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1,Quel rang a le plus petit nombre de membres du corps professoral ?
SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1,Trouvez le rang de la faculté qui compte le moins de membres.
"SELECT sex , count(*) FROM Faculty WHERE rank = ""AsstProf"" GROUP BY sex",Indiquez le nombre de professeurs assistants masculins et féminins.
"SELECT sex , count(*) FROM Faculty WHERE rank = ""AsstProf"" GROUP BY sex",Combien de professeurs assistants masculins et féminins avons-nous ?
"SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T2.fname = ""Linda"" AND T2.lname = ""Smith""",Quels sont le prénom et le nom du conseiller de Linda Smith ?
"SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T2.fname = ""Linda"" AND T2.lname = ""Smith""",Qui est le conseiller de Linda Smith ? Donnez-moi le nom et le prénom.
"SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = ""Professor""",Afficher les identifiants des étudiants dont les conseillers sont des professeurs.
"SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = ""Professor""",Quels étudiants ont des professeurs comme conseillers ? Trouvez leurs identifiants d'étudiant.
"SELECT T2.fname , T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.fname = ""Michael"" AND T1.lname = ""Goodrich""",Afficher le prénom et le nom de tous les étudiants conseillés par Michael Goodrich.
"SELECT T2.fname , T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.fname = ""Michael"" AND T1.lname = ""Goodrich""",Quels étudiants sont conseillés par Michael Goodrich ? Donnez-moi leurs noms et prénoms.
"SELECT T1.FacID , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID","Affichez l'identifiant de la faculté de chaque membre du corps professoral, ainsi que le nombre d'étudiants qu'il conseille."
"SELECT T1.FacID , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",Quels sont l'identifiant de la faculté et le nombre d'étudiants de chaque faculté ?
"SELECT T1.rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",Afficher tous les rangs de la faculté et le nombre d'étudiants conseillés par chaque rang.
"SELECT T1.rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",Combien d'étudiants sont conseillés par chaque rang de faculté? Indiquez le rang et le nombre d'élèves.
"SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",Quels sont le prénom et le nom de la faculté qui compte le plus d'étudiants ?
"SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",Donnez-moi le nom et le prénom de la faculté qui conseille le plus d'étudiants.
SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count(*) >= 2,Afficher les identifiants de tous les membres du corps professoral qui ont au moins 2 étudiants.
SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count(*) >= 2,Quels membres du corps professoral conseillent deux étudiants ou plus ? Donnez-moi leurs identifiants de faculté.
SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student,Afficher les identifiants des membres du corps professoral qui ne conseillent aucun étudiant.
SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student,Quels sont les identifiants des membres du corps professoral qui ne conseillent aucun étudiant.
SELECT activity_name FROM Activity,Quelles activités avons-nous ?
SELECT activity_name FROM Activity,Listez toutes les activités que nous avons.
SELECT count(*) FROM Activity,Combien d'activités avons-nous ?
SELECT count(*) FROM Activity,Découvrez le nombre d'activités disponibles.
SELECT count(DISTINCT FacID) FROM Faculty_participates_in,Combien de professeurs participent à une activité ?
SELECT count(DISTINCT FacID) FROM Faculty_participates_in,Donnez-moi le nombre de professeurs qui participent à une activité
SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in,Afficher les identifiants des professeurs qui ne participent à aucune activité.
SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in,Quelle faculté ne participe à aucune activité? Trouvez leurs identifiants de faculté.
SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student,Afficher les identifiants de tous les membres du corps professoral qui participent à une activité et conseiller un étudiant.
SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student,Quels sont les identifiants des membres du corps professoral qui non seulement participent à une activité mais conseillent également un étudiant.
"SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T1.fname = ""Mark"" AND T1.lname = ""Giuliano""",À combien d'activités Mark Giuliano participe-t-il ?
"SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T1.fname = ""Mark"" AND T1.lname = ""Giuliano""",Découvrez le nombre d'activités auxquelles Mark Giuliano participe.
"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = ""Mark"" AND T1.lname = ""Giuliano""",Afficher les noms de toutes les activités auxquelles Mark Giuliano participe.
"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = ""Mark"" AND T1.lname = ""Giuliano""",Quels sont les noms des activités dans lesquelles Mark Giuliano est impliqué
"SELECT T1.fname , T1.lname , count(*) , T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID","Indiquez le prénom et le nom de tous les membres du corps professoral qui ont participé à une activité, ainsi que le nombre d'activités auxquelles ils ont participé."
"SELECT T1.fname , T1.lname , count(*) , T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID","Quels sont le prénom et le nom des membres du corps professoral qui ont participé à au moins une activité ? Pour chacun d'eux, indiquez également le nombre d'activités auxquelles ils ont participé."
"SELECT T1.activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",Afficher tous les noms d'activités et le nombre de professeurs impliqués dans chaque activité.
"SELECT T1.activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",Combien de professeurs participent à chaque activité ? Renvoyez les noms des activités et le nombre de membres du corps professoral.
"SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",Quel est le prénom et le nom de la faculté participant au plus grand nombre d'activités ?
"SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",Trouvez le prénom et le nom de la faculté impliquée dans le plus grand nombre d'activités.
SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'activité à laquelle participent le plus d'enseignants ?
SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1,À quelle activité participe le plus de professeurs ? Recherchez le nom de l'activité.
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in,Afficher les identifiants des élèves qui ne participent à aucune activité.
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in,Quels sont les identifiants des étudiants qui ne sont impliqués dans aucune activité
SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age < 20,Afficher les identifiants de tous les élèves qui participent à une activité et qui ont moins de 20 ans.
SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age < 20,Quelles sont les pièces d'identité des étudiants qui ont moins de 20 ans et qui participent à au moins une activité.
"SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",Quel est le prénom et le nom de l'élève participant au plus d'activités ?
"SELECT T1.fname , T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",Dites-moi le prénom et le nom de l'élève qui a le plus d'activités.
SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'activité avec le plus d'élèves ?
SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de l'activité qui compte le plus grand nombre d'élèves participants.
SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking',Trouvez les prénoms des membres du corps professoral qui pratiquent le canoë ou le kayak.
SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking',Quels membres du corps professoral jouent au canoë ou au kayak ? Dites-moi leurs prénoms.
SELECT lname FROM faculty WHERE rank = 'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking',Trouvez les prénoms des professeurs qui ne pratiquent pas le Canoë ou le Kayak.
SELECT lname FROM faculty WHERE rank = 'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking',Quels sont les prénoms des professeurs qui ne pratiquent pas le Canoë ou le Kayak comme activités ?
SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking',Retrouvez les prénoms des membres du corps professoral qui participent au Canoë-kayak.
SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking',Quels sont les prénoms des professeurs qui pratiquent à la fois le canoë et le kayak ?
SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking',Retrouvez les identifiants des élèves qui participent au Canoë Kayak.
SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking',Quels élèves participent à la fois au canoë et au kayak comme activités ? Dites-moi leur carte d'étudiant.
SELECT name FROM airports WHERE city = 'Goroka',Trouvez le nom de l'aéroport dans la ville de Goroka.
SELECT name FROM airports WHERE city = 'Goroka',Quels sont les noms des aéroports de la ville de Goroka ?
"SELECT name , city , country , elevation FROM airports WHERE city = 'New York'","Trouvez le nom, la ville, le pays et l'altitude (ou l'altitude) des aéroports de la ville de New York."
"SELECT name , city , country , elevation FROM airports WHERE city = 'New York'","Quel est le nom, la ville, le pays et l'altitude de chaque aéroport de la ville de New York ?"
SELECT count(*) FROM airlines,Combien y a-t-il de compagnies aériennes ?
SELECT count(*) FROM airlines,Quel est le nombre total de compagnies aériennes ?
SELECT count(*) FROM airlines WHERE country = 'Russia',Combien de compagnies aériennes compte la Russie ?
SELECT count(*) FROM airlines WHERE country = 'Russia',Quel est le nombre de compagnies aériennes basées en Russie ?
SELECT max(elevation) FROM airports WHERE country = 'Iceland',Quelle est l'altitude maximale de tous les aéroports du pays islandais ?
SELECT max(elevation) FROM airports WHERE country = 'Iceland',Quelle est la plus haute altitude d'un aéroport dans le pays d'Islande ?
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina',Trouvez le nom des aéroports situés à Cuba ou en Argentine.
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina',Comment s'appellent tous les aéroports de Cuba ou d'Argentine ?
SELECT country FROM airlines WHERE name LIKE 'Orbit%',Trouvez le pays des compagnies aériennes dont le nom commence par 'Orbit'.
SELECT country FROM airlines WHERE name LIKE 'Orbit%',Quels sont les pays de toutes les compagnies aériennes dont le nom commence par Orbit ?
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50,Trouver le nom des aéroports dont l'altitude est comprise entre -50 et 50.
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50,Quels sont les noms de tous les aéroports dont l'altitude est comprise entre -50 et 50 ?
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1,Dans quel pays se trouve l'aéroport qui a la plus haute altitude ?
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1,Quel est le pays de l'aéroport avec la plus haute altitude ?
SELECT count(*) FROM airports WHERE name LIKE '%International%',Trouvez le nombre d'aéroports dont le nom contient le mot 'International'.
SELECT count(*) FROM airports WHERE name LIKE '%International%',Combien de noms d'aéroports contiennent le mot Interanation ?
SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland',Combien de villes différentes ont un aéroport dans le pays du Groenland ?
SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland',Dans combien de villes y a-t-il des aéroports dans le pays de Groenland ?
SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines',Trouvez le nombre d'itinéraires opérés par American Airlines.
SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines',Combien de routes American Airlines opère-t-elle ?
SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada',Trouvez le nombre d'itinéraires dont les aéroports de destination sont au Canada.
SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada',Combien d'itinéraires se terminent dans un aéroport canadien?
"SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1","Trouvez le nom, la ville et le pays de l'aéroport qui a l'altitude la plus basse."
"SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1","Quels sont le nom, la ville et le pays de l'aéroport avec l'altitude la plus basse ?"
"SELECT name , city , country FROM airports ORDER BY elevation DESC LIMIT 1","Trouvez le nom, la ville et le pays de l'aéroport qui a la latitude la plus élevée."
"SELECT name , city , country FROM airports ORDER BY elevation DESC LIMIT 1","Quels sont le nom, la ville et le pays de l'aéroport le plus élevé ?"
"SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",Trouvez le nom et la ville de l'aéroport qui est la destination du plus grand nombre d'itinéraires.
"SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",Quel est le nom et la ville de l'aéroport où se terminent la plupart des itinéraires ?
"SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",Trouvez les noms des 10 premières compagnies aériennes qui exploitent le plus grand nombre d'itinéraires.
"SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10","Pour les identifiants des compagnies aériennes avec le top 10 des itinéraires les plus exploités, quels sont leurs noms ?"
"SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",Trouvez le nom et la ville de l'aéroport qui est la source du plus grand nombre d'itinéraires de vol.
"SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",Quel est le nom et la ville de l'aéroport à partir duquel la plupart des itinéraires commencent ?
SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines',Trouvez le nombre d'aéroports différents qui sont les destinations d'American Airlines.
SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines',Quel est le nombre d'aéroports différents qui sont des destinations pour American Airlines ?
SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1,Quels pays ont le plus grand nombre de compagnies aériennes ?
SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1,Quel est le nom du pays avec le plus grand nombre de compagnies aériennes nationales ?
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1,Quels pays ont le plus grand nombre de compagnies aériennes dont le statut actif est « Y » ?
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1,Quels sont les pays avec le plus de compagnies aériennes dont le statut actif est Y ?
"SELECT country , count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC",Énumérez tous les pays et leur nombre de compagnies aériennes dans l'ordre décroissant du nombre de compagnies aériennes.
"SELECT country , count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC",Combien de compagnies aériennes opèrent à partir de chaque pays par ordre décroissant ?
"SELECT count(*) , country FROM airports GROUP BY country ORDER BY count(*) DESC",Combien y a-t-il d'aéroports par pays ? Classez les pays par nombre décroissant d'aéroports.
"SELECT count(*) , country FROM airports GROUP BY country ORDER BY count(*) DESC","Quel est le nombre d'aéroports par pays, classés du plus au moins ?"
"SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC",Combien y a-t-il d'aéroports par ville aux États-Unis ? Classez les villes par nombre décroissant d'aéroports.
"SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC","Combien y a-t-il d'aéroports par ville aux États-Unis, classés du plus au moins ?"
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3,Renvoie les villes avec plus de 3 aéroports aux États-Unis.
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3,Quel est le nombre de villes aux États-Unis avec plus de 3 aéroports ?
SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*) > 3),Combien y a-t-il de villes qui ont plus de 3 aéroports ?
SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*) > 3),Quel est le nombre de villes avec plus de 3 aéroports ?
"SELECT city , count(*) FROM airports GROUP BY city HAVING count(*) > 1",Énumérez les villes qui ont plus d'un aéroport et le nombre d'aéroports.
"SELECT city , count(*) FROM airports GROUP BY city HAVING count(*) > 1",Quels sont les noms de toutes les villes avec plus d'un aéroport et combien d'aéroports ont-elles ?
SELECT city FROM airports GROUP BY city HAVING count(*) > 2 ORDER BY count(*),Listez les villes qui ont plus de 2 aéroports triés par le nombre d'aéroports.
SELECT city FROM airports GROUP BY city HAVING count(*) > 2 ORDER BY count(*),Quelles sont les villes qui ont plus de 2 aéroports triées par nombre d'aéroports ?
"SELECT count(*) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name",Trouvez le nombre d'itinéraires pour chaque aéroport source et le nom de l'aéroport.
"SELECT count(*) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name","Pour chaque nom d'aéroport, combien d'itinéraires partent de cet aéroport ?"
"SELECT count(*) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC","Trouvez le nombre d'itinéraires et le nom de l'aéroport pour chaque aéroport source, triez les résultats par nombre décroissant d'itinéraires."
"SELECT count(*) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC","Pour chaque nom d'aéroport, combien d'itinéraires partent de cet aéroport, classés du plus au moins ?"
"SELECT avg(elevation) , country FROM airports GROUP BY country",Trouvez l'altitude moyenne de tous les aéroports pour chaque pays.
"SELECT avg(elevation) , country FROM airports GROUP BY country","Pour chaque pays, quelle est l'altitude moyenne des aéroports de ce pays ?"
SELECT city FROM airports GROUP BY city HAVING count(*) = 2,Trouvez les villes qui ont exactement deux aéroports.
SELECT city FROM airports GROUP BY city HAVING count(*) = 2,Quelles sont les villes avec exactement deux aéroports ?
"SELECT T1.country , T1.name , count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country , T1.name","Pour chaque pays et nom de compagnie aérienne, combien y a-t-il d'itinéraires ?"
"SELECT T1.country , T1.name , count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country , T1.name",Quel est le nombre total d'itinéraires pour chaque pays et compagnie aérienne dans ce pays ?
SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy',Trouvez le nombre d'itinéraires avec des aéroports de destination en Italie.
SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy',Quel est le nombre d'itinéraires dont les destinations sont des aéroports italiens ?
SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines',Renvoie le nombre d'itinéraires avec l'aéroport de destination en Italie opérés par la compagnie aérienne avec le nom 'American Airlines'.
SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines',Quel est le nombre de lignes opérées par la compagnie aérienne American Airlines dont les destinations sont en Italie ?
SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport',Trouver le nombre de trajets qui ont pour destination Aéroport international John F. Kennedy.
SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport',Quel est le nombre d'itinéraires qui se terminent à l'aéroport international John F Kennedy ?
SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country = 'United States'),Trouvez le nombre d'itinéraires entre les États-Unis et le Canada.
SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country = 'United States'),Combien de trajets relient les États-Unis au Canada ?
SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND src_apid IN (SELECT apid FROM airports WHERE country = 'United States'),Trouver l'identifiant des itinéraires dont les aéroports source et destination se trouvent aux États-Unis.
SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND src_apid IN (SELECT apid FROM airports WHERE country = 'United States'),Quel est l'identifiant des routes dont les aéroports d'origine et de destination sont aux États-Unis ?
SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,Trouvez le nom de la compagnie aérienne qui gère le plus grand nombre de routes.
SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,Quel est le nom de la compagnie aérienne avec le plus de trajets ?
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,Trouvez l'aéroport source le plus fréquenté qui gère le plus grand nombre d'itinéraires en Chine.
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'aéroport avec le plus grand nombre de trajets au départ de Chine ?
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,Trouvez l'aéroport de destination le plus fréquenté qui gère le plus grand nombre d'itinéraires en Chine.
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,Quel est le nom de l'aéroport qui est la destination du plus grand nombre d'itinéraires qui partent de Chine ?
SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1,Quel est l'identifiant de la commande la plus récente ?
SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1,Trouvez l'identifiant de la commande la plus récente.
"SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",quels sont l'identifiant de commande et l'identifiant client de la commande la plus ancienne ?
"SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1",Recherchez l'ID de commande et l'ID client associés à la commande la plus ancienne.
"SELECT order_id FROM shipments WHERE shipment_tracking_number = ""3452""","Trouvez l'identifiant de la commande dont le numéro de suivi d'expédition est ""3452""."
"SELECT order_id FROM shipments WHERE shipment_tracking_number = ""3452""","Quel numéro de suivi d'expédition de commande est ""3452"" ? Donnez-moi l'identifiant de la commande."
SELECT order_item_id FROM order_items WHERE product_id = 11,Trouvez les identifiants de tous les articles de commande dont l'identifiant de produit est 11.
SELECT order_item_id FROM order_items WHERE product_id = 11,Trouvez tous les articles de commande dont l'ID de produit est 11. Quels sont les ID d'articles de commande ?
"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Packing""","Listez le nom de tous les clients distincts qui ont des commandes avec le statut ""Emballage""."
"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Packing""","Quels clients ont des commandes avec le statut ""Emballage"" ? Donnez-moi les noms des clients."
"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road""","Retrouvez les détails de tous les clients distincts qui ont des commandes avec le statut ""On Road""."
"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road""","Quels sont les clients distincts qui ont des commandes avec le statut ""On Road"" ? Donnez-moi les coordonnées du client ?"
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom du client qui a le plus de commandes ?
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Quel client a passé le plus de commandes ? Trouvez le nom du client.
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Quel est le nom du client qui a le plus grand nombre de commandes ?
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Trouvez le nom du client qui a passé le plus de commandes.
SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Quel est l'identifiant client du client qui a le plus de commandes ?
SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,Trouvez l'identifiant du client qui a passé le plus de commandes.
"SELECT T2.order_id , T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""","Donnez-moi une liste d'identifiants et le statut des commandes qui appartiennent au client nommé ""Jeramie""."
"SELECT T2.order_id , T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""","Quelles commandes sont passées par le client nommé ""Jeramie"" ? Donnez-moi les identifiants et le statut de la commande."
"SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""","Retrouver les dates des commandes qui appartiennent au client nommé ""Jeramie""."
"SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""","Quelles sont les dates des commandes passées par le client nommé ""Jeramie"" ?"
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""",Donnez-moi les noms des clients qui ont passé des commandes entre le 01/01/2009 et le 01/01/2010.
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""",Quels clients ont passé des commandes entre le 01/01/2009 et le 01/01/2010 ? Trouvez leurs noms.
"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""",Donnez-moi une liste des identifiants de produits distincts des commandes passées entre le 01/01/1975 et le 01/01/1976 ?
"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""",Quels sont les identifiants distincts des produits commandés entre le 1975-01-01 et le 1976-01-01 ??
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road"" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Shipped""","Trouvez les noms des clients qui ont le statut de commande à la fois ""En route"" et ""Expédié""."
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road"" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Shipped""","Quels clients ont à la fois ""En route"" et ""Expédié"" comme statut de commande ? Listez les noms des clients."
"SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road"" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Shipped""","Trouvez l'identifiant des clients qui ont le statut de commande à la fois ""En route"" et ""Expédié""."
"SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road"" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Shipped""","Quels clients ont à la fois ""En route"" et ""Expédié"" comme statut de commande ? Répertoriez les identifiants des clients."
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452,Quand a été passée la commande dont le numéro de suivi d'expédition est le 3452 ? Donnez-moi la date.
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452,Quel jour a été passée la commande dont le numéro de suivi d'expédition est le 3452 ?
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10,Quelle est la date de passation de la commande dont le numéro de facture est 10 ?
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10,Quel jour la commande avec le numéro de facture 10 a-t-elle été passée ?
"SELECT count(*) , T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",Indiquez le nombre et l'identifiant de chaque produit dans toutes les commandes.
"SELECT count(*) , T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","Pour chaque produit, retournez son identifiant et le nombre de fois qu'il a été commandé."
"SELECT T3.product_name , count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",Indiquez le nom et le nombre de chaque produit dans toutes les commandes.
"SELECT T3.product_name , count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","Pour chaque produit, indiquez son nom et le nombre de fois qu'il a été commandé."
"SELECT order_id FROM shipments WHERE shipment_date > ""2000-01-01""",Recherchez les identifiants des commandes expédiées après le 01/01/2000.
"SELECT order_id FROM shipments WHERE shipment_date > ""2000-01-01""",Quelles commandes sont expédiées après le 01/01/2000 ? Donnez-moi les identifiants de commande.
SELECT order_id FROM shipments WHERE shipment_date = (SELECT max(shipment_date) FROM shipments),Trouvez l'identifiant de la commande qui a été expédiée le plus récemment.
SELECT order_id FROM shipments WHERE shipment_date = (SELECT max(shipment_date) FROM shipments),Quelle commande a l'expédition la plus récente ? Donnez-moi l'identifiant de la commande.
SELECT DISTINCT product_name FROM products ORDER BY product_name,Dressez la liste des noms de tous les produits distincts par ordre alphabétique.
SELECT DISTINCT product_name FROM products ORDER BY product_name,Triez tous les produits distincts par ordre alphabétique.
SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed,Répertorier les identifiants de toutes les commandes distinctes classées par date passée.
SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed,"Quels sont les identifiants de toutes les commandes distinctes, triées par date de placement ?"
SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1,Quel est l'identifiant de la commande qui contient le plus d'articles ?
SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1,Quelle commande contient le plus d'articles ? Renvoyez l'identifiant de la commande.
"SELECT invoice_number FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",Trouvez les numéros de facture créés avant le 1989-09-03 ou après le 2007-12-25.
"SELECT invoice_number FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",Quels sont les numéros de facture créés avant le 03/09/1989 ou après le 25/12/2007 ?
"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",Trouvez les détails distincts des factures créées avant le 1989-09-03 ou après le 2007-12-25.
"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",Quels sont les détails distincts des factures créées avant le 03/09/1989 ou après le 25/12/2007 ?
"SELECT T2.customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*) >= 2","Pour chaque client qui a au moins deux commandes, trouvez le nom du client et le nombre de commandes passées."
"SELECT T2.customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*) >= 2",Quels clients ont passé au moins deux commandes ? Donnez-moi le nom de chaque client et le nombre de commandes passées.
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*) <= 2,Trouvez le nom des clients qui ont au plus deux commandes.
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*) <= 2,Quels sont les noms des clients qui ont passé deux commandes ou moins ?
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*) >= 1","Dressez la liste des noms des clients qui ont déjà acheté le produit ""nourriture""."
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*) >= 1",Quels sont les noms des clients qui ont acheté au moins une fois le produit « food » ?
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = ""Cancel"" AND T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*) >= 1","Répertoriez les noms des clients qui ont une fois annulé l'achat du produit ""nourriture"" (le statut de l'article est ""Annuler"")."
"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = ""Cancel"" AND T4.product_name = ""food"" GROUP BY T1.customer_id HAVING count(*) >= 1","Quels clients ont déjà annulé l'achat du produit ""nourriture"" (le statut de l'article est ""Annuler"") ?"
SELECT count(*) FROM architect WHERE gender = 'female',Combien d'architectes sont des femmes ?
"SELECT name , nationality , id FROM architect WHERE gender = 'male' ORDER BY name","Énumérez le nom, la nationalité et l'identité de tous les architectes masculins classés par leurs noms lexicographiquement."
"SELECT max(T1.length_meters) , T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id = T2.id",Quelle est la longueur maximale en mètres des ponts et quels sont les noms des architectes ?
SELECT avg(length_feet) FROM bridge,Quelle est la longueur moyenne en pieds des ponts ?
"SELECT name , built_year FROM mill WHERE TYPE = 'Grondzeiler'",Quels sont les noms et l'année de construction des moulins de type 'Grondzeiler' ?
"SELECT DISTINCT T1.name , T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id = T2.architect_id",Quels sont les noms distincts et les nationalités des architectes qui ont déjà construit un moulin ?
SELECT name FROM mill WHERE LOCATION != 'Donceel',Comment s'appellent les moulins qui ne sont pas situés à 'Donceel' ?
SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id WHERE T2.nationality = 'American' OR T2.nationality = 'Canadian',Quels sont les différents types de moulins construits par des architectes américains ou canadiens ?
"SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count(*) >= 3",Quels sont les identifiants et les noms des architectes qui ont construit au moins 3 ponts ?
"SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","Quels sont l'identité, le nom et la nationalité de l'architecte qui a construit la plupart des moulins ?"
"SELECT T1.id , T1.name , T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count(*) = 2 UNION SELECT T1.id , T1.name , T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count(*) = 1","Quels sont les identifiants, les noms et les sexes des architectes qui ont construit deux ponts ou un moulin ?"
SELECT LOCATION FROM bridge WHERE name = 'Kolob Arch' OR name = 'Rainbow Bridge',Quel est l'emplacement du pont nommé 'Kolob Arch' ou 'Rainbow Bridge' ?
SELECT name FROM mill WHERE name LIKE '%Moulin%',"Lequel des noms de moulins contient le mot français ""Moulin"" ?"
SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id JOIN bridge AS T3 ON T3.architect_id = T2.id WHERE T3.length_meters > 80,Quel est le nom distinct des moulins construits par les architectes qui ont également construit un pont de plus de 80 mètres ?
"SELECT TYPE , count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",Quel est le type de moulin le plus courant et combien y en a-t-il ?
SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year < 1850 );,Combien d'architectes n'ont pas construit de moulin avant 1850 ?
SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id = t2.id WHERE t2.nationality = 'American' ORDER BY t1.length_feet,affichez le nom de tous les ponts conçus par un architecte américain et triez le résultat en fonction de la longueur des pieds du pont.
SELECT count(*) FROM book_club,Combien y a-t-il de clubs de lecture ?
SELECT count(*) FROM book_club,Comptez le nombre de clubs de lecture.
"SELECT book_title , author_or_editor FROM book_club WHERE YEAR > 1989",indiquez les titres et les auteurs ou éditeurs de tous les livres publiés après 1989.
"SELECT book_title , author_or_editor FROM book_club WHERE YEAR > 1989",Quels sont les titres et auteurs ou éditeurs qui correspondent aux livres réalisés après 1989 ?
SELECT DISTINCT publisher FROM book_club,Afficher tous les éditeurs distincts pour les livres.
SELECT DISTINCT publisher FROM book_club,Quels sont tous les différents éditeurs de livres ?
"SELECT YEAR , book_title , publisher FROM book_club ORDER BY YEAR DESC","Affichez les années, les titres de livres et les éditeurs de tous les livres, par ordre décroissant d'année."
"SELECT YEAR , book_title , publisher FROM book_club ORDER BY YEAR DESC","Quels sont les années, les titres et les éditeurs de tous les livres, classés par année décroissante ?"
"SELECT publisher , count(*) FROM book_club GROUP BY publisher",Afficher tous les éditeurs et le nombre de livres pour chaque éditeur.
"SELECT publisher , count(*) FROM book_club GROUP BY publisher",Combien y a-t-il de livres pour chaque éditeur ?
SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1,Quel est l'éditeur avec le plus grand nombre de livres ?
SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1,Renvoie l'éditeur qui a publié le plus de livres.
"SELECT category , count(*) FROM book_club GROUP BY category",Afficher toutes les catégories de livres et le nombre de livres dans chaque catégorie.
"SELECT category , count(*) FROM book_club GROUP BY category",Combien de livres entrent dans chaque catégorie ?
SELECT category FROM book_club WHERE YEAR > 1989 GROUP BY category HAVING count(*) >= 2,Listez les catégories qui ont au moins deux livres après l'année 1989.
SELECT category FROM book_club WHERE YEAR > 1989 GROUP BY category HAVING count(*) >= 2,Quelles catégories ont deux ou plusieurs livres correspondants qui ont été fabriqués après 1989 ?
SELECT publisher FROM book_club WHERE YEAR = 1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR = 1990,Afficher les éditeurs avec un livre publié en 1989 et un livre en 1990.
SELECT publisher FROM book_club WHERE YEAR = 1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR = 1990,Quels sont les éditeurs qui ont publié un livre à la fois en 1989 et en 1990 ?
SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989,Afficher tous les éditeurs qui n'ont pas de livre en 1989.
SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989,Quels éditeurs n'ont pas publié de livre en 1989 ?
"SELECT title , YEAR , director FROM movie ORDER BY budget_million","Afficher tous les titres de films, années et réalisateurs, classés par budget."
"SELECT title , YEAR , director FROM movie ORDER BY budget_million","Quels sont les titres, les années et les réalisateurs de tous les films, classés par budget en millions ?"
SELECT COUNT (DISTINCT director) FROM movie,Combien y a-t-il de réalisateurs de films ?
SELECT COUNT (DISTINCT director) FROM movie,Comptez le nombre d'administrateurs différents.
"SELECT title , director FROM movie WHERE YEAR <= 2000 ORDER BY gross_worldwide DESC LIMIT 1",Quels sont le titre et le réalisateur du film avec le plus gros chiffre d'affaires mondial en 2000 ou avant ?
"SELECT title , director FROM movie WHERE YEAR <= 2000 ORDER BY gross_worldwide DESC LIMIT 1",Renvoyez le titre et le réalisateur du film sorti en 2000 ou avant qui avait le chiffre d'affaires mondial le plus élevé.
SELECT director FROM movie WHERE YEAR = 2000 INTERSECT SELECT director FROM movie WHERE YEAR = 1999,Afficher tous les noms de réalisateurs qui ont un film en 1999 et 2000.
SELECT director FROM movie WHERE YEAR = 2000 INTERSECT SELECT director FROM movie WHERE YEAR = 1999,Quels réalisateurs ont eu un film à la fois en 1999 et 2000 ?
SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000,Afficher tous les noms de réalisateurs qui ont réalisé un film en 1999 ou 2000.
SELECT director FROM movie WHERE YEAR = 1999 OR YEAR = 2000,Quels réalisateurs ont eu un film en 1999 ou 2000 ?
"SELECT avg(budget_million) , max(budget_million) , min(budget_million) FROM movie WHERE YEAR < 2000","Quel est le budget moyen, maximum et minimum pour tous les films avant 2000."
"SELECT avg(budget_million) , max(budget_million) , min(budget_million) FROM movie WHERE YEAR < 2000","Renvoie les budgets moyen, maximum et minimum en millions pour les films réalisés avant l'an 2000."
SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson',Listez tous les noms d'entreprises avec un livre publié par Alyson.
SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson',Quels sont tous les noms d'entreprises qui ont un livre publié par Alyson ?
"SELECT T1.title , T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",Afficher les titres de films et les titres de livres pour toutes les entreprises en Chine.
"SELECT T1.title , T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",Quels sont les titres de films et de livres correspondant aux sociétés constituées en Chine ?
SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.year = 1999,Afficher tous les noms d'entreprises avec un film réalisé en 1999.
SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.year = 1999,Quels sont tous les noms de sociétés qui ont un film correspondant réalisé en 1999 ?
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle est la plus grande ville du wyoming
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle ville du wyoming a la plus grande population
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle est la plus grande ville du wyoming
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",où est la région la plus peuplée du wyoming
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle ville du wyoming a la plus grande population
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelles villes du wyoming ont le plus grand nombre de citoyens
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelles villes du wyoming ont les plus fortes populations
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle est la ville la plus peuplée du wyoming
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle est la plus grande ville du wyoming par population
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle est la plus grande ville du wyoming
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""wyoming"" ) AND state_name = ""wyoming"";",quelle est la ville du wyoming avec la plus grande population
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city ) );,quelles rivières traversent l'état avec la plus grande ville des états-unis
"SELECT area FROM state WHERE state_name = ""new mexico"";",quelle est la taille du nouveau mexique
"SELECT area FROM state WHERE state_name = ""new mexico"";",quelle est la superficie du nouveau mexique
"SELECT area FROM state WHERE state_name = ""new mexico"";",quelle est la taille du nouveau mexique
"SELECT area FROM state WHERE state_name = ""new mexico"";",quelle est la superficie de l'état du nouveau mexique
"SELECT area FROM state WHERE state_name = ""new mexico"";",quelle est la taille du nouveau mexique
"SELECT area FROM state WHERE state_name = ""new mexico"";",quelle est la superficie du nouveau mexique en kilomètres carrés
"SELECT population FROM state WHERE state_name = ""california"";",combien de personnes vivent en californie
"SELECT population FROM state WHERE state_name = ""california"";",combien de personnes résident en californie
"SELECT population FROM state WHERE state_name = ""california"";",combien d'habitants vivent en californie
"SELECT population FROM state WHERE state_name = ""california"";",combien d'habitants la californie a-t-elle
"SELECT population FROM state WHERE state_name = ""california"";",quelle est la population de la californie
"SELECT population FROM state WHERE state_name = ""california"";",quelle est la population de la californie
"SELECT population FROM state WHERE state_name = ""california"";",combien de personnes sont dans l'état de californie
"SELECT population FROM state WHERE state_name = ""california"";",que pouvez-vous me dire sur la population de la californie
"SELECT population FROM state WHERE state_name = ""california"";",combien de personnes y a-t-il en californie
"SELECT population FROM state WHERE state_name = ""california"";",combien de citoyens en californie
"SELECT population FROM state WHERE state_name = ""california"";",combien de personnes restent en californie
"SELECT population FROM state WHERE state_name = ""california"";",combien de citoyens vivent en californie
SELECT state_name FROM state WHERE population = ( SELECT MIN ( population ) FROM state );,quel état a la plus petite population
SELECT state_name FROM state WHERE population = ( SELECT MIN ( population ) FROM state );,quel est l'état le moins peuplé
SELECT state_name FROM state WHERE population = ( SELECT MIN ( population ) FROM state );,quel est l'état avec la plus faible population
"SELECT city_name FROM city WHERE state_name = ""texas"";",donne moi les villes du texas
"SELECT city_name FROM city WHERE state_name = ""texas"";",Dis-moi quelles sont les villes du Texas
"SELECT city_name FROM city WHERE state_name = ""texas"";",quelles villes sont situées au texas
"SELECT city_name FROM city WHERE state_name = ""texas"";",quelles sont les villes du texas
"SELECT city_name FROM city WHERE state_name = ""texas"";",quelles villes au texas
"SELECT city_name FROM city WHERE state_name = ""texas"";",donne moi les villes qui sont au texas
"SELECT area FROM state WHERE capital = ""albany"";",quelle est la superficie de l'état avec la capitale albany
"SELECT lake_name FROM lake WHERE state_name = ""california"";",donne moi les lacs de californie
"SELECT lake_name FROM lake WHERE area > 750 AND state_name = ""michigan"";",nommer les principaux lacs du michigan
SELECT state_name FROM state;,quels sont les états
SELECT state_name FROM state;,lister les états
SELECT state_name FROM state;,donne moi tous les états des états unis
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états la rivière ohio traverse-t-elle
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états traverse la rivière ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états bordent la rivière ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états bordent la rivière ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états traverse l'ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",où est la rivière ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états la rivière ohio traverse-t-elle ?
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états traverse l'ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états la rivière ohio traverse-t-elle ?
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels sont les états traversés par l'ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quel état a la rivière ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états ont des rivières nommées ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",par quels états l'ohio coule
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états sont à côté de l'ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",par quels états passe l'ohio
"SELECT traverse FROM river WHERE river_name = ""ohio"";",quels états traverse la rivière ohio
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a la plus grande population
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel est l'état le plus peuplé
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état est le plus peuplé
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a la plus grande population
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a la plus grande population
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a le plus de population
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a le plus de monde
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a le plus d'habitants
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel est l'état le plus peuplé des états-unis
SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quel état a la population la plus élevée
"SELECT lowest_elevation FROM highlow WHERE state_name = ""pennsylvania"";",quelle est l'altitude la plus basse en pennsylvanie
"SELECT highest_point , state_name FROM highlow WHERE lowest_elevation = 0;",quel est le point le plus élevé dans chaque état dont le point le plus bas est le niveau de la mer
SELECT LENGTH FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quelle est la longueur du plus long fleuve des états-unis
SELECT LENGTH FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,combien de temps dure le plus long fleuve des états-unis
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la plus longue rivière qui traverse le texas
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la plus grande rivière de l'état du texas
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la plus longue rivière du texas
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la plus grande rivière du texas
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la plus longue rivière qui traverse le texas
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelles sont les plus grandes rivières du texas
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",combien y a t'il de rivières dans l'idaho
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",donne moi le nombre de rivières dans l'idaho
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",combien de rivières l'idaho a-t-il
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",combien y a t'il de rivières dans l'idaho
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",combien de rivières traversent l'idaho
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",combien de rivières se trouvent dans l'idaho
"SELECT COUNT ( river_name ) FROM river WHERE traverse = ""idaho"";",combien de rivières dans l'idaho
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels états voisin kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels états bordent le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels états bordent le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",Donnez-moi les états qui bordent le Kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quel état borde le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels états sont à côté du kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels états entourent le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quel état borde le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels sont les états voisins du kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quels états jouxtent le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",États limitrophes du Kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quel état borde le kentucky
"SELECT border FROM border_info WHERE state_name = ""kentucky"";",quel est l'état adjacent du kentucky
"SELECT river_name FROM river WHERE traverse = ""illinois"";",nommer toutes les rivières de l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",rivières dans l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles sont toutes les rivières de l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles sont les rivières dans l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles rivières sont dans l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles rivières y a-t-il dans l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles rivières traversent l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles rivières traversent l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelle rivière traverse l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles sont les rivières dans l'état de l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",nommer les rivières de l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles sont les rivières de l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles rivières sont dans l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelles rivières traversent l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelle est la rivière qui traverse l'illinois
"SELECT river_name FROM river WHERE traverse = ""illinois"";",quelle rivière traverse l'illinois
"SELECT state_name FROM city WHERE city_name = ""springfield"";",dans quel état est springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",Où est Springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",springfield est dans quel état
"SELECT state_name FROM city WHERE city_name = ""springfield"";",quels états ont des villes nommées springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",quels états ont des villes nommées springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",dans quel état se trouve springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",quels états ont une ville nommée springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",quel état a la ville de springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",quels états ont des villes nommées springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",dans quel état se trouve springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",dans quel état est springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",dans quel état se trouve la ville de springfield
"SELECT state_name FROM city WHERE city_name = ""springfield"";",quels états aux états-unis ont une ville de springfield
SELECT population FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quelle est la population de l'état avec la plus grande superficie
SELECT population FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quelle est la population du plus grand état
"SELECT population FROM city WHERE city_name = ""boulder"";",combien de personnes vivent à boulder
"SELECT population FROM city WHERE city_name = ""boulder"";",quelle est la population de rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",combien de personnes vivaient dans le rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",nombre de personnes dans le bloc
"SELECT population FROM city WHERE city_name = ""boulder"";",quelle est la population de boulder city
"SELECT population FROM city WHERE city_name = ""boulder"";",quelle est la taille de la ville de rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",population de rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",quelle est la population de rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",les gens dans le rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",combien de personnes dans le rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",combien d'habitants a boulder
"SELECT population FROM city WHERE city_name = ""boulder"";",nombre de citoyens dans le rocher
"SELECT population FROM city WHERE city_name = ""boulder"";",combien de citoyens dans le rocher
"SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city WHERE state_name = ""alaska"" ) AND state_name = ""alaska"";",quelle est la plus petite ville d'alaska
SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quels états se trouvent sur le plus grand fleuve des états-unis
SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quel état traverse la plus longue rivière
SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quel état a le plus long fleuve
SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quels sont les états traversés par le plus long fleuve
SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quel état traverse la plus longue rivière
SELECT density FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quelle est la densité de population de l'état avec la plus petite superficie
SELECT density FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quelle est la densité de population du plus petit état
"SELECT state_name FROM highlow WHERE highest_elevation > ( SELECT highest_elevation FROM highlow WHERE state_name = ""colorado"" );",quels états ont des points supérieurs au point le plus élevé du colorado
"SELECT state_name FROM highlow WHERE highest_elevation > ( SELECT highest_elevation FROM highlow WHERE state_name = ""colorado"" );",quels états ont des points supérieurs au point le plus élevé du colorado
"SELECT state_name FROM highlow WHERE highest_elevation > ( SELECT highest_elevation FROM highlow WHERE state_name = ""colorado"" );",quels états point culminant sont plus élevés que celui du colorado
"SELECT highest_elevation FROM highlow WHERE state_name = ""delaware"";",quelle est la plus haute altitude du delaware
"SELECT highest_elevation FROM highlow WHERE state_name = ""delaware"";",quelle est la hauteur du point culminant du delaware
"SELECT highest_elevation FROM highlow WHERE state_name = ""delaware"";",quelle est la hauteur du point culminant du delaware
"SELECT highest_elevation FROM highlow WHERE state_name = ""delaware"";",quel est le point culminant du delaware en mètres
"SELECT highest_elevation FROM highlow WHERE state_name = ""delaware"";",quelle est la hauteur du point culminant du delaware
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,donne-moi le plus long fleuve qui nous traverse
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quel est le plus long fleuve des etats unis
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quel est le plus long fleuve d'amérique
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,nomme le plus long fleuve de nous
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quelle rivière est la plus longue des états-unis
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quelle est la plus longue rivière des états-unis
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quelle est la plus longue rivière
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river );,quel est le plus long fleuve des etats unis
SELECT state_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,dans quel état se trouve la ville la plus peuplée
SELECT state_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quel état a la plus grande ville
SELECT state_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quel état a la plus grande ville
SELECT state_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,dans quel état se trouve la ville la plus peuplée
SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quelle est la plus petite ville du plus grand état
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel état est le plus grand
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est l'état avec la plus grande superficie
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel état a la plus grande superficie
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est le plus grand état des États-Unis continentaux
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,indiquer l'état avec la plus grande superficie
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est le plus grand état des états-unis
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est le plus grand état
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est le plus grand état des états-unis
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,donne moi le plus grand état
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est le plus grand état des états-unis
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quel est le plus grand état
"SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""mississippi"" );",quels sont les points culminants des états entourant le mississippi
"SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""mississippi"" );",quels sont les points culminants des états entourant le mississippi
"SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""colorado"" ) ORDER BY highest_elevation DESC LIMIT 1;",quel est le point culminant des états bordant le colorado
"SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""colorado"" ) ORDER BY highest_elevation DESC LIMIT 1;",quel est le point culminant des états bordant le colorado
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel est l'état avec la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus petite densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus faible densité de population
SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quel état a la plus petite densité de population
"SELECT highest_point FROM highlow WHERE state_name = ""texas"";",où est le point culminant du texas
"SELECT highest_point FROM highlow WHERE state_name = ""texas"";",quel est le point culminant du texas
"SELECT highest_point FROM highlow WHERE state_name = ""texas"";",quel est le point culminant du texas
"SELECT highest_point FROM highlow WHERE state_name = ""texas"";",quelle est la plus haute montagne du texas
"SELECT highest_point FROM highlow WHERE state_name = ""texas"";",pourriez-vous me dire quel est le point culminant de l'état du texas
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );,quels états n'ont pas d'état limitrophe
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );,nommer les états qui n'ont pas d'états environnants
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );,quels états ne bordent aucun autre état
SELECT area FROM state WHERE density = ( SELECT MIN ( density ) FROM state );,quelle est la zone de l'état avec la plus petite densité de population
"SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation < ( SELECT lowest_elevation FROM highlow WHERE state_name = ""alabama"" );",compter les états qui ont des altitudes inférieures à ce que l'Alabama a
"SELECT highest_elevation FROM highlow WHERE highest_point = ""guadalupe peak"";",quelle est la hauteur du pic de guadalupe
"SELECT highest_elevation FROM highlow WHERE highest_point = ""guadalupe peak"";",quelle est la hauteur du pic de guadalupe
"SELECT highest_elevation FROM highlow WHERE highest_point = ""guadalupe peak"";",quelle est l'altitude maximale du pic de guadalupe
SELECT MAX ( highest_elevation ) FROM highlow;,quelle est la hauteur du point culminant de l'amérique
SELECT MAX ( highest_elevation ) FROM highlow;,quelle est la plus haute altitude aux états-unis
SELECT MAX ( highest_elevation ) FROM highlow;,quelle est l'altitude du point culminant des états-unis
SELECT MAX ( highest_elevation ) FROM highlow;,quelle est la hauteur du point culminant des états-unis
"SELECT LENGTH FROM river WHERE river_name = ""rio grande"";",combien de temps dure le rio grande
"SELECT LENGTH FROM river WHERE river_name = ""rio grande"";",quelle est la longueur du fleuve rio grande
"SELECT LENGTH FROM river WHERE river_name = ""rio grande"";",quelle est la longueur du rio grande
"SELECT LENGTH FROM river WHERE river_name = ""rio grande"";",combien de temps dure le rio grande
"SELECT LENGTH FROM river WHERE river_name = ""rio grande"";",combien de temps mesure la rivière rio grande en miles
"SELECT LENGTH FROM river WHERE river_name = ""rio grande"";",combien de temps dure le rio grande
"SELECT LENGTH FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",combien de temps dure la plus longue rivière du texas
"SELECT LENGTH FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la longueur de la plus longue rivière qui traverse le texas
"SELECT COUNT ( capital ) FROM state WHERE state_name = ""rhode island"";",combien de capitales a rhode island
SELECT COUNT ( city_name ) FROM city;,combien y a-t-il de villes aux états-unis
SELECT COUNT ( city_name ) FROM city;,combien de villes les états-unis ont-ils
SELECT COUNT ( city_name ) FROM city;,combien de villes y a-t-il aux états-unis
SELECT COUNT ( city_name ) FROM city;,combien y a-t-il de villes aux états-unis
SELECT COUNT ( city_name ) FROM city;,combien de villes y a-t-il en nous
SELECT COUNT ( city_name ) FROM city WHERE population > 150000;,combien y a-t-il de grandes villes
SELECT population FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,combien de citoyens la plus grande ville compte-t-elle aux états-unis ?
"SELECT COUNT ( river_name ) FROM river WHERE river_name = ""colorado"";",combien y a-t-il de rivières colorado
"SELECT COUNT ( river_name ) FROM river WHERE river_name = ""colorado"";",combien de rivières s'appellent colorado
"SELECT population FROM city WHERE city_name = ""seattle"" AND state_name = ""washington"";",quelle est la population de seattle washington
"SELECT population FROM city WHERE city_name = ""seattle"" AND state_name = ""washington"";",combien de personnes vivent à seattle washington
"SELECT population FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""alaska"" ) AND state_name = ""alaska"";",combien de personnes vivent dans la plus grande ville de l'état de l'alaska
"SELECT population FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""alaska"" ) AND state_name = ""alaska"";",quelle est la taille de la plus grande ville d'alaska
"SELECT population FROM city WHERE city_name = ( SELECT capital FROM state WHERE state_name = ""texas"" );",combien de personnes vivent dans la capitale du texas
"SELECT population FROM city WHERE city_name = ( SELECT capital FROM state WHERE state_name = ""texas"" );",quelle est la taille de la capitale du texas
SELECT SUM ( population ) FROM state;,combien de personnes vivent aux etats unis
SELECT SUM ( population ) FROM state;,quelle est la population combinée des 50 états
SELECT COUNT ( state_name ) FROM state;,combien d'états sont aux états-unis
SELECT COUNT ( state_name ) FROM state;,combien y a-t-il d'états
SELECT COUNT ( state_name ) FROM state;,combien d'états y a-t-il aux états-unis
SELECT COUNT ( state_name ) FROM state;,combien d'états les états-unis ont-ils
SELECT COUNT ( state_name ) FROM state;,combien y a-t-il d'états aux états-unis
SELECT COUNT ( state_name ) FROM state;,combien y a-t-il d'états aux états-unis
"SELECT COUNT ( border ) FROM border_info WHERE state_name = ""kentucky"";",combien d'états bordent le kentucky
"SELECT COUNT ( border ) FROM border_info WHERE state_name = ""kentucky"";",combien d'états borde le kentucky
"SELECT COUNT ( border ) FROM border_info WHERE state_name = ""kentucky"";",kentucky borde combien d'états
"SELECT COUNT ( border ) FROM border_info WHERE state_name = ""kentucky"";",nombre d'états limitrophes du kentucky
"SELECT COUNT ( border ) FROM border_info WHERE state_name = ""kentucky"";",quel est le nombre d'états voisins pour le kentucky
SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) );,combien d'états bordent l'état avec la plus grande population
SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );,combien d'états n'ont pas de rivières
SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation > ( SELECT highest_elevation FROM highlow WHERE state_name = ( SELECT state_name FROM state WHERE capital = ( SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city ) ) ) );,combien d'états ont un point plus élevé que le point le plus élevé de l'état avec la plus grande capitale des états-unis
"SELECT river_name FROM river WHERE LENGTH > 750 AND traverse = ""illinois"";",nommer les principales rivières de l'illinois
"SELECT river_name FROM river WHERE LENGTH > 750 AND traverse = ""illinois"";",quelles sont les principales rivières de l'illinois
"SELECT river_name FROM river WHERE LENGTH > 750 AND traverse = ""illinois"";",quelles sont les principales rivières de l'illinois
"SELECT river_name FROM river WHERE LENGTH > 750 AND traverse = ""illinois"";",quels grands fleuves traversent l'illinois
"SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse = ""texas"" );",quels états traversent le plus long fleuve du texas
"SELECT capital FROM state WHERE state_name = ""texas"";",quelle est la capitale du texas
"SELECT capital FROM state WHERE state_name = ""texas"";",quelle est la capitale du texas
"SELECT capital FROM state WHERE state_name = ""texas"";",quelle est la capitale de l'état du texas
"SELECT capital FROM state WHERE state_name = ""texas"";",quelle est la capitale du texas
"SELECT capital FROM state WHERE state_name = ""texas"";",quelle est la capitale de l'état du texas
"SELECT capital FROM state WHERE state_name = ""texas"";",pouvez-vous me dire la capitale du texas
"SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name = t1.border WHERE t1.state_name = ""texas"";",quelles sont les capitales des états qui bordent le texas
"SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name = t1.border WHERE t1.state_name = ""texas"";",quelles sont les capitales des états qui bordent le texas
"SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name = t1.border WHERE t1.state_name = ""texas"";",quelles sont les capitales des états qui bordent le texas
"SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name = t1.border WHERE t1.state_name = ""texas"";",quelles capitales sont dans les états qui bordent le texas
"SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les villes des états traversés par le mississippi
SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow ) );,quelles sont les villes de l'état avec le point culminant
SELECT highest_point FROM highlow;,quels sont les points les plus élevés de tous les états
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",quelles sont les principales villes du kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",quelles sont les principales villes de l'état du kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",quelles grandes villes sont situées dans le kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",afficher les principales villes du kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",quels sont les noms des principales villes du kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",quelles sont les principales villes du kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name = ""kansas"";",quelles sont les principales villes du kansas
"SELECT city_name FROM city WHERE population > 150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH > 750 AND river_name = ""mississippi"" );",quelles sont les principales villes des états traversés par le mississippi
SELECT city_name FROM city WHERE population > 150000;,quelles sont les principales villes des états-unis
SELECT city_name FROM city WHERE population > 150000;,quelles sont les grandes villes des états-unis
SELECT city_name FROM city WHERE population > 150000;,quelles sont les principales villes des états-unis
SELECT density FROM state;,quelles sont les densités de population de chaque état américain
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le fleuve mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le fleuve mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le fleuve mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le mississippi
"SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quelles sont les populations des états traversés par le fleuve mississippi
"SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name = t1.border WHERE t1.state_name = ""texas"";",quelles sont les populations des états qui bordent le texas
"SELECT population FROM city WHERE population > 150000 AND state_name = ""wisconsin"";",quelles sont les populations des grandes villes du wisconsin
"SELECT population FROM city WHERE population > 150000 AND state_name = ""wisconsin"";",quelles sont les populations de toutes les grandes villes du wisconsin
"SELECT population FROM city WHERE population > 150000 AND state_name = ""wisconsin"";",quelle est la population des grandes villes du wisconsin
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle ville a le plus de monde
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle ville des états-unis a la plus forte densité de population
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle est la ville la plus peuplée
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle ville américaine a la plus forte densité de population
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle est la plus grande ville des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle est la plus grande ville
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle ville a la plus grande population
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle est la plus grande ville des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city );,quelle est la plus grande ville des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle est la plus grande capitale des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle est la plus grande capitale des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle est la plus grande capitale d'état en population
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle est la plus grande capitale
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle est la capitale la plus peuplée des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quel capital est le plus grand aux états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle capitale a la plus grande population
SELECT city_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle est la plus grande capitale
"SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.state_name = t1.state_name WHERE t1.city_name = ""durham"";",quelle est la capitale des états qui ont des villes nommées durham
SELECT capital FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quelle est la capitale du plus petit état
SELECT DISTINCT capital FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quelle est la capitale de l'état avec la plus grande densité de population
SELECT capital FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quelle est la capitale de l'état avec la plus grande population
SELECT capital FROM state WHERE population = ( SELECT MAX ( population ) FROM state );,quelle est la capitale de l'état avec le plus d'habitants
SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river ) );,quelle est la capitale de l'état avec le plus long fleuve
SELECT SUM ( area ) FROM state;,quelle est la superficie combinée des 50 états
SELECT SUM ( area ) FROM state;,quelle est l'aire de tous les états réunis
SELECT SUM ( area ) FROM state;,combien de kilomètres carrés aux états-unis
SELECT SUM ( area ) FROM state;,quelle est la superficie totale des états-unis
"SELECT density FROM state WHERE state_name = ""wyoming"";",quelle est la densité du wyoming
"SELECT density FROM state WHERE state_name = ""wyoming"";",quelle est la densité de population du wyoming
"SELECT density FROM state WHERE state_name = ""wyoming"";",quelle est la densité du wyoming
SELECT mountain_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain );,quelle est la plus haute montagne des états-unis
SELECT mountain_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain );,quelle est la plus haute montagne en nous
SELECT mountain_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain );,quelle est la plus haute montagne d'amérique
SELECT mountain_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain );,quelle est la plus haute montagne des états-unis
"SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital = ""des moines"" );",quel est le point culminant de l'état avec la capitale des moines
"SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital = ""des moines"" );",quel est le point culminant de l'état avec la capitale des moines
SELECT highest_point FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est le point culminant des états-unis
SELECT highest_point FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est le point culminant des états-unis
SELECT highest_point FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est le point culminant du pays
SELECT highest_point FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est le point culminant des états-unis
SELECT highest_point FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est le point culminant des états-unis
SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density = ( SELECT MIN ( density ) FROM state ) );,quel est le point culminant de l'état avec la plus petite densité de population
"SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) AND area = ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) ) ) ORDER BY population DESC LIMIT 1;",quelle est la plus grande ville du plus petit état traversé par le mississippi
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quelle est la plus grande ville du plus petit état des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quelle est la plus grande ville du plus petit état
"SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" );",quel est le plus grand état bordant la californie
"SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" );",quel est le plus grand état qui borde la californie
"SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" );",quel état qui borde la californie est le plus grand
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quel est le plus long fleuve du plus grand état
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""tennessee"" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name = ""tennessee"" );",quelle est la plus longue rivière des états qui bordent le tennessee
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""tennessee"" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name = ""tennessee"" );",quelle est la plus longue rivière qui traverse un état qui borde le tennessee
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""tennessee"" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name = ""tennessee"" );",quelle est la plus longue rivière qui traverse un état qui borde le tennessee
SELECT river_name FROM river WHERE traverse = ( SELECT state_name FROM city WHERE population > 150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;,quel est le plus long fleuve de l'état avec le plus de grandes villes
"SELECT lowest_point FROM highlow WHERE state_name = ""iowa"";",quel est le point le plus bas de l'iowa
"SELECT lowest_point FROM highlow WHERE state_name = ""iowa"";",quel est le point le plus bas de l'iowa en mètres
"SELECT lowest_point FROM highlow WHERE state_name = ""iowa"";",quel est le point le plus bas de l'état de l'iowa
"SELECT lowest_point FROM highlow WHERE state_name = ""iowa"";",où est le point le plus bas de l'iowa
"SELECT lowest_point FROM highlow WHERE state_name = ""iowa"";",quel est le point le plus bas de l'iowa
"SELECT lowest_point FROM highlow WHERE state_name = ""iowa"";",où est le point le plus bas de l'iowa
SELECT lowest_point FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,quel est le point le plus bas aux états-unis
SELECT lowest_point FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,quel est le point le plus bas aux états-unis
SELECT lowest_point FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,où est le point le plus bas aux états-unis
SELECT lowest_point FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,quel est le point le plus bas des états-unis
"SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) ORDER BY lowest_elevation LIMIT 1;",quel est le point le plus bas de tous les états traversés par le fleuve mississippi
"SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) ORDER BY lowest_elevation LIMIT 1;",qui est le point le plus bas des états traversés par le mississippi
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel est l'état le plus dense des états-unis
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel état a la densité de population la plus élevée
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel état a la plus grande densité
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel état a la densité de population la plus élevée
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel état a la plus grande densité de population
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel état a la plus grande densité de population
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel est l'état avec la plus grande densité aux états-unis
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel est l'état avec la plus grande densité de population
SELECT state_name FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quel état a la plus grande densité
"SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quel est l'état le plus peuplé traversé par le mississippi
"SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quel état traversé par le mississippi a la plus grande population
SELECT density FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quelle est la densité de population du plus grand état
SELECT population FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quelle est la population de la plus grande ville de l'état avec la plus grande superficie
SELECT population FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quelle est la population du plus petit état
SELECT population FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,quelle est la population de l'état avec la plus forte densité de population
SELECT population FROM state WHERE density = ( SELECT MAX ( density ) FROM state );,combien de personnes vivent dans l'état avec la plus grande densité de population
SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city );,quelle est la plus petite ville des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city );,quelle est la plus petite ville des états-unis
SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city );,quelle ville a le moins d'habitants
SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city );,quelle est la ville la moins peuplée
"SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" );",quel est le plus petit état bordant le texas
"SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" );",quel est le plus petit état qui borde le texas
"SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" );",quel état a la plus petite superficie qui borde le texas
"SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quel est le plus petit état traversé par le fleuve mississippi
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quel est l'état avec la plus petite superficie
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quel est le plus petit état
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quel état est le plus petit
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quel est le plus petit état des états-unis
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quel est le plus petit état par zone
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quel état a la plus petite superficie
SELECT SUM ( LENGTH ) FROM river;,quelle est la longueur totale de toutes les rivières aux états-unis
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse le plus d'états
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse le plus d'états
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse la plupart des états
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse la plupart des états
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse le plus d'états
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse le plus d'états
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;,quelle rivière traverse le plus d'états
"SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""alabama"" );",quelles rivières sont dans les états qui bordent l'alabama
"SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""alabama"" );",quelles rivières traversent les états bordant l'alabama
"SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""alabama"" );",quelles rivières traversent les États bordant l'Alabama
"SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""oklahoma"" ) ORDER BY population DESC LIMIT 1;",quel état bordant l'oklahoma a la plus grande population
"SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""oklahoma"" ) ORDER BY population DESC LIMIT 1;",lequel des états bordant l'oklahoma a la plus grande population
"SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""oklahoma"" ) ORDER BY population DESC LIMIT 1;",quel état qui borde l'oklahoma a la population la plus élevée
"SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""oklahoma"" ) ORDER BY population DESC LIMIT 1;",quel est l'état le plus peuplé bordant l'oklahoma
"SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""colorado"" ) );",quel état contient le point le plus élevé de ceux que traverse le fleuve colorado
SELECT state_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quel état a le plus grand capital
SELECT state_name FROM city WHERE population = ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle capitale de l'état est la plus grande
SELECT DISTINCT traverse FROM river WHERE LENGTH = ( SELECT MAX ( DISTINCT LENGTH ) FROM river );,quel état a le plus long fleuve
SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) LIMIT 1;,quel état a la plus petite population urbaine
"SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""colorado"" );",quels états bordent les états qui bordent le colorado
"SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quels états bordent les états traversés par le mississippi
"SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",qui indique les états frontaliers à travers lesquels le mississippi traverse
"SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",quels états états frontaliers traversés par le mississippi
"SELECT state_name FROM border_info WHERE border = ""texas"" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH > 750 );",quels états bordent le texas et ont une grande rivière
SELECT border FROM border_info WHERE state_name = ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) );,quels états bordent l'état le plus peuplé
SELECT border FROM border_info WHERE state_name = ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) );,quels sont les états qui bordent l'état avec la plus grande population
SELECT border FROM border_info WHERE state_name = ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quels états bordent l'état avec la plus petite superficie
SELECT border FROM border_info WHERE state_name = ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quels états bordent l'état avec la plus petite superficie
SELECT traverse FROM river WHERE LENGTH > 750;,quels états contiennent au moins un fleuve majeur
SELECT state_name FROM mountain;,où sont les montagnes
SELECT state_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain );,où est la plus haute montagne des états-unis
SELECT state_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain );,quel état a le plus haut sommet du pays
SELECT state_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city );,où est la plus petite ville
SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river ) );,qui est la densité de l'état traversé par le plus grand fleuve des états-unis
"SELECT mountain_name FROM mountain WHERE mountain_altitude = ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != ""alaska"" );",qui est le plus haut sommet pas en Alaska
"SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse = ""tennessee"" );",quelles rivières ne traversent pas le tennessee
"SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse = ""tennessee"" );",quelles rivières ne traversent pas le tennessee
"SELECT river_name FROM river WHERE country_name != ""usa"";",quelles rivières ne traversent pas les états-unis
"SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital = ""atlanta"" ) );",quelles rivières traversent les états qui bordent l'état avec la capitale atlanta
"SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital = ""atlanta"" ) );",quelles rivières traversent les états qui bordent l'état avec la capitale atlanta
SELECT city_name FROM city WHERE population = ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name );,quelle capitale de l'état a la plus petite population
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel état a la plus haute altitude
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel état a le point le plus élevé
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel état a la plus haute altitude
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,dans quel état existe le point culminant des états-unis
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel état a la plus haute altitude
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est l'état avec la plus haute altitude aux états-unis
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel est l'état qui contient le point le plus haut
SELECT state_name FROM highlow WHERE highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quel état contient le point culminant des états-unis
SELECT state_name FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,quel état a l'altitude la plus basse
SELECT state_name FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,quel est le nom de l'état avec le point le plus bas
SELECT state_name FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow );,quel est l'état avec le point le plus bas
"SELECT state_name FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""idaho"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""idaho"" );",quel état a le point le plus bas qui borde l'idaho
SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;,quel état a la plus petite population urbaine moyenne
"SELECT state_name FROM mountain WHERE mountain_name = ""whitney"";",dans quel état se trouve mount whitney
"SELECT state_name FROM mountain WHERE mountain_name = ""whitney"";",dans quel état est le mont whitney
"SELECT state_name FROM mountain WHERE mountain_name = ""whitney"";",où est le mont Whitney
"SELECT state_name FROM mountain WHERE mountain_name = ""whitney"";",où se trouve le mont Whitney
SELECT traverse FROM river;,quels états ont un fleuve
SELECT traverse FROM river;,quels états ont des rivières qui les traversent
"SELECT state_name FROM city WHERE city_name = ""austin"" AND population > 150000;",quels états ont une grande ville nommée austin
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" );",quelle est la plus grande ville d'un état qui borde la californie
"SELECT city_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""california"" );",quelle est la plus grande ville des états qui bordent la californie
"SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital = ""albany"" );",combien de rivières ne traversent pas l'état avec la capitale albany
"SELECT river_name FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river WHERE traverse = ""texas"" ) AND traverse = ""texas"";",quelle est la rivière la plus courte du texas
SELECT city_name FROM city WHERE population > 150000 AND state_name = ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quelles sont les principales villes du plus petit état des états-unis
"SELECT population FROM city WHERE city_name = ( SELECT capital FROM state WHERE area = ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name = t2.traverse WHERE t2.river_name = ""mississippi"" ) );",quelle est la population de la capitale du plus grand état traversé par le mississippi
SELECT river_name FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,quelle est la rivière la plus courte des états-unis
SELECT river_name FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,quelle est la rivière la plus courte
SELECT river_name FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,quelle est la rivière la plus courte des états-unis
SELECT river_name FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,quelle est la rivière la plus courte des états-unis
SELECT river_name FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,quelle est la rivière la plus courte
"SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" ) );",quelle est la capitale de l'état qui borde l'état qui borde le texas
SELECT city_name FROM city WHERE population = ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quelle est la plus petite ville du plus petit état des états-unis
"SELECT population FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" );",quelle est la population du plus grand état qui borde le texas
"SELECT state_name FROM state WHERE capital = ""salem"";",de quel état salem est la capitale
"SELECT state_name FROM state WHERE capital = ""salem"";",quelle est la capitale de l'état de salem
"SELECT state_name FROM state WHERE capital = ""salem"";",salem est la capitale de quel état
"SELECT state_name FROM state WHERE capital = ""salem"";",quel état a la capitale salem
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) );,quelles rivières traversent l'état avec la plus grande population
SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) ) );,quel est le plus grand état qui borde l'état le plus peuplé
SELECT COUNT ( river_name ) FROM river;,combien de rivières y a-t-il en nous
SELECT DISTINCT capital FROM state;,nommer les 50 capitales des états-unis
"SELECT COUNT ( state_name ) FROM city WHERE city_name = ""springfield"";",combien d'états ont une ville nommée springfield
"SELECT COUNT ( state_name ) FROM city WHERE city_name = ""springfield"";",combien d'états ont une ville appelée springfield
"SELECT COUNT ( state_name ) FROM city WHERE city_name = ""springfield"";",combien d'états ont des villes nommées springfield
"SELECT COUNT ( state_name ) FROM city WHERE city_name = ""springfield"";",combien d'états ont des villes ou des villages nommés springfield
SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population = ( SELECT MIN ( population ) FROM state ) );,quel état borde l'état avec la plus petite population
"SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""texas"" );",quels sont les lacs dans les états bordant le texas
"SELECT COUNT ( city_name ) FROM city WHERE population > 150000 AND state_name = ""texas"";",combien de grandes villes sont au texas
"SELECT COUNT ( city_name ) FROM city WHERE population > 150000 AND state_name = ""texas"";",combien y a t'il de grandes villes au texas
"SELECT COUNT ( city_name ) FROM city WHERE population > 150000 AND state_name = ""texas"";",combien de grandes villes y a-t-il au texas
SELECT highest_elevation FROM highlow;,quelle est la hauteur des points les plus élevés de tous les états
"SELECT COUNT ( traverse ) FROM river WHERE river_name = ""missouri"";",combien d'états traverse le missouri
"SELECT COUNT ( traverse ) FROM river WHERE river_name = ""missouri"";",combien d'états le fleuve missouri traverse-t-il
"SELECT COUNT ( traverse ) FROM river WHERE river_name = ""missouri"";",combien d'états traverse le fleuve missouri
SELECT river_name FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quelle est la plus longue rivière du plus petit état des états-unis
"SELECT population / area FROM state WHERE state_name = ""pennsylvania"";",quelle est la population moyenne au kilomètre carré en pennsylvanie
"SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""florida"" ) );",quels états bordent états cette frontière états cette frontière floride
SELECT COUNT ( DISTINCT state_name ) FROM border_info;,combien d'états bordent au moins un autre état
"SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name = ""texas"";",quelle est la hauteur de la plus haute montagne du texas
"SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name = ""new mexico"" ) AND state_name = ""colorado"";",combien d'états bordent le colorado et bordent le nouveau mexique
"SELECT COUNT ( city_name ) FROM city WHERE population > 150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""nebraska"" );",combien de grandes villes se trouvent dans les états bordant le nebraska
"SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name = t1.border WHERE t1.state_name = ""texas"";",quelle est la population totale des états qui bordent le texas
SELECT lake_name FROM lake WHERE area > 750;,quels sont les principaux lacs aux états-unis
SELECT lake_name FROM lake WHERE area > 750;,Montrez-moi tous les principaux lacs des États-Unis
SELECT lake_name FROM lake;,nomme tous les lacs de nous
"SELECT COUNT ( river_name ) FROM river WHERE LENGTH > 750 AND traverse = ""ohio"";",combien de grands fleuves traversent l'ohio
SELECT DISTINCT traverse FROM river WHERE LENGTH = ( SELECT MIN ( DISTINCT LENGTH ) FROM river );,quel état a le fleuve le plus court
SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH > 750;,combien d'états sont à côté des grands fleuves
"SELECT mountain_altitude FROM mountain WHERE mountain_name = ""mckinley"";",quelle est la hauteur du mont mckinley
SELECT traverse FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,quels états traverse la rivière la plus courte
SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name = t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population = ( SELECT MIN ( population ) FROM state ) );,quel est le point culminant de l'état avec la plus petite population
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow ) );,quelles rivières traversent l'état avec l'altitude la plus basse aux états-unis
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow ) );,quelles rivières traversent l'état avec le point le plus bas aux états-unis
"SELECT mountain_name FROM mountain WHERE state_name = ""alaska"";",quelles montagnes sont en alaska
SELECT COUNT ( traverse ) FROM river WHERE LENGTH > 750;,combien d'états ont de grands fleuves
SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river ) );,quel est le plus petit état traversé par le plus long fleuve
"SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""rio grande"" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name = ""rio grande"" );",quel est le plus grand état traversé par le fleuve rio grande
"SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""rio grande"" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name = ""rio grande"" );",quel est le plus grand de l'état traversé par le rio grande
"SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name = ""colorado"" );",combien de rivières traversent les états bordant le colorado
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );,quel état n'a pas de rivières
SELECT capital FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quelle est la capitale du plus grand état
SELECT capital FROM state WHERE area = ( SELECT MAX ( area ) FROM state );,quelle est la capitale du plus grand état des états-unis
"SELECT COUNT ( city_name ) FROM city WHERE state_name = ""texas"";",combien y a-t-il de villes au texas
"SELECT COUNT ( city_name ) FROM city WHERE state_name = ""texas"";",combien de villes le texas a-t-il
SELECT area FROM state;,quelle est la superficie des états
SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH = ( SELECT MIN ( DISTINCT LENGTH ) FROM river );,combien d'états aux états-unis la rivière la plus courte traverse-t-elle
SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) ) );,quelles rivières traversent les états qui bordent l'état avec la plus grande population
SELECT city_name FROM city WHERE population > 150000 AND state_name = ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quelles sont les grandes villes du plus grand état
SELECT area FROM state WHERE area = ( SELECT MIN ( area ) FROM state );,quelle est la superficie du plus petit état
SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH = ( SELECT MAX ( LENGTH ) FROM river ) );,quels états bordent le plus long fleuve des états-unis
SELECT density FROM state WHERE population = ( SELECT MIN ( population ) FROM state );,quelle est la densité de population de l'état avec la plus petite population
"SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name = ""mississippi"" );",combien d'états bordent le fleuve mississippi
SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital = t2.highest_point;,quels états ont une capitale qui est le point culminant de l'état
SELECT population FROM city WHERE city_name = ( SELECT capital FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );,quelle est la population de la capitale du plus petit état
SELECT population FROM city WHERE city_name = ( SELECT capital FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quelle est la population de la capitale du plus grand état
SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name = t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quel est le point le plus bas de l'état avec la plus grande superficie
SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border = t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) );,quels états bordent les états qui bordent l'état avec la plus grande population
SELECT MAX ( area ) FROM state;,quelle est la taille du plus grand état des états-unis
SELECT MAX ( area ) FROM state;,quelle est la superficie du plus grand état
SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital = t1.city_name WHERE t1.population <= 150000;,quelles capitales ne sont pas des grandes villes
SELECT city_name FROM city;,donne moi les villes aux etats unis
SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name = t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quel est le point culminant de l'état avec la plus grande superficie
"SELECT country_name FROM state WHERE state_name = ""massachusetts"";",où est le massachusetts
SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) DESC LIMIT 1;,quel état a la plus grande population urbaine
SELECT river_name FROM river;,quels sont les principaux fleuves aux états-unis
"SELECT COUNT ( city_name ) FROM city WHERE city_name = ""austin"";",combien de villes nommées austin y a-t-il aux états-unis
"SELECT population FROM state WHERE population = ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name = ""wyoming"" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name = ""wyoming"" );",combien de personnes vivent dans le plus petit état bordant le wyoming
"SELECT LENGTH FROM river WHERE river_name = ""colorado"" AND traverse = ""texas"";",quelle est la longueur du fleuve colorado au texas
"SELECT density FROM state WHERE capital = ""austin"";",quelle est la densité de population dans l'état avec la capitale austin
SELECT LENGTH FROM river WHERE LENGTH = ( SELECT MIN ( LENGTH ) FROM river );,combien de temps dure la rivière la plus courte des états-unis
"SELECT lowest_elevation FROM highlow WHERE lowest_point = ""death valley"";",quelle est l'altitude de la vallée de la mort
SELECT AVG ( population ) FROM state;,quelle est la population moyenne des états-unis par état
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,quelles rivières traversent le plus grand état
"SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border = t1.state_name JOIN border_info AS t3 ON t3.border = t2.state_name JOIN border_info AS t4 ON t4.border = t3.state_name WHERE t4.state_name = ""texas"";",quels états bordent les états qui bordent les états qui bordent les états qui bordent le texas
"SELECT COUNT ( border ) FROM border_info WHERE state_name = ( SELECT state_name FROM state WHERE capital = ""boston"" );",combien d'états bordent l'état dont la capitale est boston
"SELECT city_name FROM city WHERE population > 150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH > 750 AND traverse = ""virginia"" ) );",quelles sont les principales villes des États traversées par le principal fleuve de virginie
"SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name = ""texas"" );",quels états ne bordent pas le texas
SELECT COUNT ( border ) FROM border_info WHERE state_name = ( SELECT state_name FROM state WHERE area = ( SELECT MAX ( area ) FROM state ) );,combien d'états bordent le plus grand état
"SELECT state_name FROM city WHERE population = ( SELECT MAX ( population ) FROM city WHERE state_name = ""montana"" ) AND state_name = ""montana"";",quel état est la plus grande ville du montana en
SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name = t2.state_name WHERE t2.lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;,quelle est la capitale de l'état avec le point le plus bas
SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse = t1.state_name WHERE t1.population = ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse = t1.state_name );,quelle est la plus grande ville américaine dans un état avec une rivière
SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name = t2.traverse WHERE t1.state_name = ( SELECT state_name FROM state WHERE population = ( SELECT MAX ( population ) FROM state ) );,combien de rivières sont dans l'état avec la plus grande population
SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name = t1.border JOIN state AS t2 ON t2.state_name = t1.border WHERE t3.lowest_elevation = ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;,quel est le plus grand état qui borde l'état avec le point le plus bas aux états-unis
SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name = t2.state_name WHERE t2.highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quelle est la capitale de l'état avec le point culminant
SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name = t2.state_name WHERE t2.highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,quelle est la capitale de l'état avec la plus haute altitude
SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name = t2.state_name WHERE t1.area = ( SELECT MIN ( area ) FROM state );,quel est le point le plus élevé dans le plus petit état
SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse = t2.state_name WHERE t2.highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow );,combien de rivières sont dans l'état avec le point culminant.
SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name = t2.state_name WHERE t1.area = ( SELECT MAX ( area ) FROM state );,quelle est la hauteur du point le plus élevé dans le plus grand état
SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse = t2.state_name WHERE t2.highest_elevation = ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;,quelle est la plus longue rivière de l'état avec le point culminant
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",articles co-écrits par Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",articles écrits par Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",quels sont les articles qui ont Peter Mertens et Dina Barbian comme co-auteurs
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quels articles ont écrit Peter Mertens et Dina Barbian ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",quel article Peter Mertens et Dina Barbian ont-ils écrit ensemble ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Peter Mertens et Dina Barbian ont-ils écrit un article ensemble ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Articles de Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",articles des auteurs Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quels articles ont été écrits par les auteurs Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",articles de Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",articles écrits par les auteurs Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quand Peter Mertens et Dina Barbian ont-ils collaboré ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",quelles sont les collaborations de Peter Mertens et Dina Barbian ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Peter Mertens et Dina Barbian ont-ils écrit un article ensemble ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Peter Mertens et Dina Barbian en tant que co-auteurs
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Peter Mertens a-t-il déjà collaboré avec Dina Barbian ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quels articles ont Peter Mertens et Dina Barbian comme co-auteurs ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",articles co-écrits par Peter Mertens et Dina Barbian
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quels articles ont été écrits par Peter Mertens et Dina Barbian ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quels articles ont été écrits par Peter Mertens et Dina Barbian ?
"SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Peter Mertens"" AND t1.authorname = ""Dina Barbian"";",Quels articles ont été écrits par Peter Mertens et Dina Barbian .
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a écrit le plus d'articles d'analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui est l'auteur le plus publié en analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a le plus de publications en analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a écrit le plus d'articles sur l'analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",Énumérer des spécialistes éminents de l'analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a écrit le plus d'articles sur l'analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",Quels sont les auteurs les plus publiés en analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",meilleur auteur d'analyse syntaxique
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",meilleur auteur en analyse syntaxique
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a publié le plus en analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""syntactic parsing"" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a publié le plus d'articles sur l'analyse syntaxique ?
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",Combien de citation noah un forgeron a-t-il ?
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",nombre de citations de noah a smith
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",combien de citations a noé un forgeron ?
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",Combien de citations a noé un forgeron ?
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",nombre de citations de noé un forgeron
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",Combien de citations Noé un forgeron a-t-il
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",Combien de fois Noah forgeron a-t-il été cité ?
"SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""noah a smith"";",Combien de citations a noé un forgeron ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",papiers chi
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",papiers à chi
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",papiers en chi
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",chi
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",Articles sur le chi
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",Montrez-moi des papiers chi.
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",quels articles chi a-t-il publiés ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",liste des articles publiés en chi
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""chi"";",Articles sur le chi
"SELECT DISTINCT COUNT ( t3.paperid ) , t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""mirella lapata"" AND t3.year = 2016 GROUP BY t2.authorid;",Mirella Lapata a-t-elle écrit des articles en 2016 ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Quels articles Sharon Goldwater a-t-elle rédigés ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Quels papiers a écrit par Sharon Goldwater ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",articles de sharon goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Qu'a écrit Sharon Goldwater ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",articles dont sharon goldwater est l'auteur
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Articles rédigés par Sharon Goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",papiers de sharon goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Articles de Sharon Goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Articles écrits par Sharon Goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Quels articles Sharon Goldwater a-t-elle rédigés ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",articles rédigés par sharon goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Qu'a publié Sharon Goldwater ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Sharon Goldwater a-t-elle publié des articles ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",papiers de sharon goldwater
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",montre moi des papiers de sharon goldwater .
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",Quels articles sont écrits par Sharon Goldwater ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""sharon goldwater"";",papiers de sharon goldwater ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""oren etzioni"" ORDER BY t3.year DESC;",Quel était le dernier article d'oren etzioni ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""oren etzioni"" ORDER BY t3.year DESC;",Dernier article d'oren etzioni
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""oren etzioni"" ORDER BY t3.year DESC;",Quel est le dernier article d'oren etzioni ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""oren etzioni"" ORDER BY t3.year DESC;",Quel est le dernier article d'oren etzioni ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""oren etzioni"" ORDER BY t3.year DESC;",Quels sont les derniers articles d'oren etzioni ?
"SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""oren etzioni"" ORDER BY t3.year DESC;",articles les plus récents par oren etzioni
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""monte carlo simulation"" AND t3.year > 2011;",y a-t-il des papiers de simulation de monte carlo depuis 2011 ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""monte carlo simulation"" AND t3.year > 2011;",papiers de simulation de monte carlo postérieurs à 2011
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""monte carlo simulation"" AND t3.year > 2011;",simulation de monte carlo après 2011
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""monte carlo simulation"" AND t3.year > 2011;",articles de simulation de monte carlo publiés après 2011
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""monte carlo simulation"" AND t3.year > 2011;",papiers de simulation de monte carlo depuis 2011
"SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""ras bodik"";",est-ce que ras bodik publie beaucoup ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien d'articles David M. Blei a-t-il publiés à l'AISTATS ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien d'articles David M. Blei a-t-il dans AISTATS ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien d'articles David M. Blei a-t-il publiés dans AISTATS ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",combien de papiers David M. Blei a-t-il à AISTATS
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien de papiers David M. Blei a-t-il dans AISTATS ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien y a-t-il d'articles de David M. Blei dans AISTATS ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien de papiers David M. Blei a dans AISTATS ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""David M. Blei"" AND t4.venuename = ""AISTATS"";",Combien d'articles David M. Blei a-t-il dans AISTATS
"SELECT DISTINCT paperid FROM paper WHERE title = ""machine networks for one shot learning"";",Répertorier tous les articles académiques sur les réseaux de machines pour un apprentissage ponctuel
"SELECT DISTINCT paperid FROM paper WHERE title = ""machine networks for one shot learning"";",réseaux de machines pour un apprentissage ponctuel
"SELECT DISTINCT t3.citedpaperid , COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2010 AND t2.venuename = ""EMNLP"" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",quels articles EMNLP 2010 ont le plus de citations ?
"SELECT DISTINCT t3.citedpaperid , COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2010 AND t2.venuename = ""EMNLP"" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",Quel article de l'EMNLP 2010 a été le plus cité ?
"SELECT DISTINCT t3.citedpaperid , COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2010 AND t2.venuename = ""EMNLP"" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",articles EMNLP 2010 les plus cités
"SELECT DISTINCT t3.citedpaperid , COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2010 AND t2.venuename = ""EMNLP"" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",quels articles EMNLP 2010 ont été le plus cités ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.datasetname = ""RGB-D Object Dataset"" AND t3.title = ""Class consistent multi-modal fusion with binary features"" AND t3.year = 2016 AND t4.venuename = ""CVPR"";",Quels articles ont été publiés au CVPR en 2016 sur la fusion multimodale cohérente de classe avec des fonctionnalités binaires appliquées à l'ensemble de données d'objets RVB-D ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.datasetname = ""RGB-D Object Dataset"" AND t3.title = ""Class consistent multi-modal fusion with binary features"" AND t3.year = 2016 AND t4.venuename = ""CVPR"";",Quels articles ont été publiés au CVPR '16 sur la fusion multimodale cohérente de classe avec des fonctionnalités binaires appliquées à l'ensemble de données d'objets RVB-D ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"";",Combien y a-t-il d'articles en apprentissage profond ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"";",Combien d'articles traitent de l'apprentissage en profondeur ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"";",combien d'articles sur le deep learning ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"";",Combien d'articles sont liés à l'apprentissage en profondeur ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien d'articles Christopher D. Manning a-t-il rédigés ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien de papiers Christopher D. Manning a-t-il ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien d'articles a Christopher D. Manning ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien d'articles Christopher D. Manning a-t-il publiés ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien d'articles Christopher D. Manning a-t-il rédigés ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Christopher D. Manning a-t-il publié des articles ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien d'articles Christopher D. Manning a-t-il publiés ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien de papiers Christopher D. Manning a-t-il ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien de papiers Christopher D. Manning a-t-il ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien de publications a Christopher D. Manning ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",Combien d'articles Christopher D. Manning a-t-il
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Christopher D. Manning"";",nombre d'articles écrits par Christopher D. Manning
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",quel genre d'articles publie Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",Phrases clés utilisées par Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",Quels sont les mots-clés dans les articles de Luke Zettlemoyer ?
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",mots-clés utilisés par Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",quels mots clés sont utilisés par Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",phrases clés utilisées par Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",phrases clés de Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",donnez-moi les mots clés utilisés par Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",Sur quel sujet Luke Zettlemoyer écrit-il ?
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",dans quels sujets Luke Zettlemoyer publie-t-il
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",mots-clés dans les articles écrits par Luke Zettlemoyer
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",phrases clés utilisées par Luke Zettlemoyer .
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Luke Zettlemoyer"";",sujets utilisés par Luke Zettlemoyer
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",Dans quelle conférence Daniella Coelho publie-t-elle ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",conférences que Daniella Coelho a publiées dans
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",Dans quelles conférences Daniella Coelho publie-t-elle généralement ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",dans quelles conférences Daniella Coelho publie-t-elle ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",Dans quelles conférences Daniella Coelho publie-t-elle ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",A quelles conférences Daniella Coelho publie-t-elle ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Daniella Coelho"";",À quelles conférences Daniella Coelho soumet-elle ?
SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;,Combien y a-t-il de papiers ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t1.paperid JOIN author AS t2 ON t3.authorid = t2.authorid WHERE t2.authorname = ""Ed Desmond"" AND t4.keyphrasename = ""Semantic Parsing"";",Combien d'articles d'Ed Desmond contiennent les phrases clés Semantic Parsing ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t1.paperid JOIN author AS t2 ON t3.authorid = t2.authorid WHERE t2.authorname = ""Ed Desmond"" AND t4.keyphrasename = ""Semantic Parsing"";",Combien d'articles Ed Desmond a-t-il dans le domaine de l'analyse sémantique ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t1.paperid JOIN author AS t2 ON t3.authorid = t2.authorid WHERE t2.authorname = ""Ed Desmond"" AND t4.keyphrasename = ""Semantic Parsing"";",Combien d'articles d'analyse sémantique Ed Desmond a-t-il rédigés ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t1.paperid JOIN author AS t2 ON t3.authorid = t2.authorid WHERE t2.authorname = ""Ed Desmond"" AND t4.keyphrasename = ""Semantic Parsing"";",Combien d'articles Ed Desmond a-t-il écrits sur l'analyse sémantique ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""li dong"" AND t3.year = 2016;",À quelles conférences li dong a-t-il participé en 2016 ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""li dong"" AND t3.year = 2016;",Où li dong a-t-il publié en 2016
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""li dong"" AND t3.year = 2016;",Dans quelles conférences li dong a-t-il publié en 2016 ?
"SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""li dong"" AND t3.year = 2016;",Où li dong a-t-il publié en 2016 ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",articles acl en 2012 sur l'analyse syntaxique
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",Quels articles ont été publiés dans acl en 2012 sur le Parsing ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",des articles sur l'analyse syntaxique ont paru à acl l'année dernière
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",Analyse des documents de l'ACL 2012
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",articles sur l'analyse syntaxique dans acl 2012
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",articles acl en 2012 dans Parsing
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",articles acl en 2012 sur l'analyse syntaxique
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",Quels articles ont été publiés à acl en 2012 sur l'analyse syntaxique ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",des articles sur l'analyse syntaxique sont apparus à acl en 2012
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",combien d'articles d'analyse syntaxique acl 2012 avait-il?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",qui a publié des articles sur l'analyse syntaxique à acl 2012
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",quels articles dans acl 2012 contenaient l'analyse syntaxique ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Parsing"" AND t3.year = 2012 AND t4.venuename = ""acl"";",quels étaient les articles basés sur l'analyse syntaxique dans acl 2012 ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Lister les publications populaires sur les types dépendants
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Quel article dois-je lire sur les types dépendants ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",principaux types de papiers dépendants
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Lister les articles qui ont un mot-clé Question Answering
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Documents de recherche sur les questions-réponses
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",articles sur la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",articles liés à la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",articles sur la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Articles sur la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",articles publiés dans le domaine de la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Expériences de questions-réponses
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Montrez-moi les articles sur la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",papiers qui ont utilisé la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",articles qui mentionnent la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Feuilles de questions-réponses
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Montrez-moi les papiers de réponse aux questions.
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Publications de questions-réponses
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Apportez-moi des papiers sur la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",articles sur les expériences de questions-réponses
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Quels journaux parlent de Question Answering ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Quel est l'article sur la réponse aux questions ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Quels articles traitent de Question Answering ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",répertorier les articles qui ont utilisé la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",papiers pour la réponse aux questions
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",Répertorier les articles contenant le mot-clé Question Answering
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""dependent types"";",papiers avec réponse aux questions dans les phrases clés
"SELECT DISTINCT t2.keyphraseid , t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Luke S Zettlemoyer"" ORDER BY t3.year , t2.keyphraseid;",phrases clés utilisées par Luke S Zettlemoyer pour chaque année
"SELECT DISTINCT t1.keyphrasename , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""sanjeev arora"" ORDER BY t3.year DESC;",intérêts de recherche récents de sanjeev arora
"SELECT DISTINCT t1.keyphrasename , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""sanjeev arora"" ORDER BY t3.year DESC;",articles récents de sanjeev arora
"SELECT DISTINCT t1.keyphrasename , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""sanjeev arora"" ORDER BY t3.year DESC;",articles récents écrits par sanjeev arora
"SELECT DISTINCT t3.paperid , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""balakrishnan prabhakaran"";",liste des articles publiés par balakrishnan prabhakaran
"SELECT DISTINCT t3.paperid , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""balakrishnan prabhakaran"";",nombre de citations des articles de zachary tatlock
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""subhasis chaudhuri"";",Sous-hasis Chaudhuri
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""subhasis chaudhuri"";",liste des articles par subhasis chaudhuri
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""subhasis chaudhuri"";",Liste des articles par subhasis chaudhuri
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""subhasis chaudhuri"";",Documents de conférence de Subhasis Chaudhuri
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""parsing"" AND t3.year = 2014 AND t4.venuename = ""ACL"";",combien de papiers d'analyse dans ACL 2014
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""parsing"" AND t3.year = 2014 AND t4.venuename = ""ACL"";",combien d'articles de parsing sont apparus dans les débats d'ACL 2014 ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""parsing"" AND t3.year = 2014 AND t4.venuename = ""ACL"";",combien d'articles d'analyse ont été publiés à ACL 2014 ?
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",papier de convolution sans boucles brian
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",convolution par brian curlless
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",articles de brian curlless sur la convolution
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",article de brian curless sur la convolution
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",Quels sont les papiers de brian curlless en convolution ?
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",articles que brian curlless a écrits sur la convolution
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",articles de brian curlless sur la convolution
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",Quel est l'article sur la convolution de Brian Curless ?
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",articles de brian curlless dans le sujet de convolution
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",Je veux les papiers sur keyphrase0 par brian curlless
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",papiers de convolution par brian curlless
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",Quels articles Brian Curless a-t-il écrits sur la convolution ?
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",Quels articles Brian Curless a-t-il écrits sur la convolution ?
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",papier de convolution par brian curlless
"SELECT DISTINCT t1.authorid , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""brian curless"" AND t5.keyphrasename = ""convolution"";",Brian Curless fait-il de la convolution ?
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Quels articles Liwen Xiong a écrit en 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",articles de Liwen Xiong en 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Qu'a publié Liwen Xiong en 2015 ?
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Articles écrits par Liwen Xiong en 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Quels sont les papiers de Liwen Xiong en 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",articles de Liwen Xiong de 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Articles publiés en 2015 par Liwen Xiong
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",qu'a fait Liwen Xiong l'année dernière
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Quels articles Liwen Xiong a-t-il publiés l'année dernière ?
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",articles publiés en 2015 par Liwen Xiong
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Liwen Xiong 's papers in 2015 ?
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Liwen Xiong 's papers in 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Liwen Xiong publication 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Articles rédigés par Liwen Xiong en 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",Articles de Liwen Xiong en 2015
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Liwen Xiong"" AND t3.year = 2015;",quels articles sont publiés par Liwen Xiong en 2015
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",Quel article TAIL publié dans NIPS ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",Lister les articles sur TAIL qui ont été publiés dans NIPS
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",quels sont les articles du NIPS sur TAIL ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",Articles sur TAIL dans NIPS
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",articles au NIPS liés à TAIL
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",articles sur TAIL publiés au NIPS
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",Documents TAIL dans NIPS
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",articles sur TAIL NIPS
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""TAIL"" AND t4.venuename = ""NIPS"";",Papiers TAIL utilisés dans NIPS
"SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname != ""Mark Steedman"" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Mark Steedman"" );",Combien de co-auteurs Mark Steedman a-t-il eu ?
"SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Christof Dallermassl"" AND t3.year = 2000;",phrases clés utilisées par Christof Dallermassl en 2000
"SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Christof Dallermassl"" AND t3.year = 2000;",Phrases clés utilisées par Christof Dallermassl en 2000
"SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Christof Dallermassl"" AND t3.year = 2000;",phrases clés que Christof Dallermassl a utilisées dans des articles écrits l'année dernière
"SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Christof Dallermassl"" AND t3.year = 2000;",Quelles sont les phrases clés de Christof Dallermassl en 2000 ?
"SELECT DISTINCT t1.authorname , COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN cite AS t3 ON t2.paperid = t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;",quel auteur est le plus cité ?
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""mohammad rastegari"" AND t3.journalid >= 0;",articles de journaux par mohammad rastegari
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""mohammad rastegari"" AND t3.journalid >= 0;",Journal Papers par mohammad rastegari
"SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid ) , t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2014 AND t2.venuename = ""TACL"" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;",meilleur article au TACL 2014 ?
"SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid ) , t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2014 AND t2.venuename = ""TACL"" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;",Quel a été le meilleur papier au TACL 2014 ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",qui a publié à acl 2016 ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",ACL 2016 auteurs
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",auteurs des articles acl 2016
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",Liste des auteurs acl 2016
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",auteur publié acl 2016
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",qui a eu des papiers à acl 2016 ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2016 AND t3.venuename = ""acl"";",Liste des auteurs dans acl 2016
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Multiuser Receiver in the Decision Feedback"" AND t3.year = 2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename ) > 1;",Combien d'articles ont été écrits sur Multiuser Receiver dans le Decision Feedback cette année ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname LIKE ""ImageNet"";",Combien d'articles exécutent des expériences sur ImageNet ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname LIKE ""ImageNet"";",Combien d'articles ont utilisé le jeu de données ImageNet ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname LIKE ""ImageNet"";",Combien d'articles écrits sur ImageNet ?
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname LIKE ""ImageNet"";",combien d'articles sont basés sur ImageNet
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname LIKE ""ImageNet"";",combien de papiers utilisent ImageNet ?
"SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN cite AS t3 ON t2.paperid = t3.citingpaperid WHERE t1.authorname = ""Mirella Lapata"";",Combien d'articles Mirella Lapata a-t-elle cités ?
"SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN cite AS t3 ON t2.paperid = t3.citingpaperid WHERE t1.authorname = ""Mirella Lapata"";",Combien d'articles Mirella Lapata cite-t-elle
"SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN cite AS t3 ON t2.paperid = t3.citingpaperid WHERE t1.authorname = ""Mirella Lapata"";",Combien d'articles Mirella Lapata a-t-elle cités ?
"SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Michael Stonebraker"" AND t4.venuename = ""VLDB"" ORDER BY t3.year;",Quand Michael Stonebraker publie-t-il le premier article VLDB ?
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensemble de données d'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données pour l'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",lister les ensembles de données pour l'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données pour l'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",Ensembles de données avec des informations d'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données utilisés par les articles d'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données dans les articles d'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données d'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données dans des articles sur l'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données utilisés pour l'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données à grande échelle utilisés dans l'analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données avec analyse sémantique
"SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid = t4.keyphraseid WHERE t4.keyphrasename = ""semantic parsing"";",ensembles de données utilisés pour évaluer l'analyse sémantique
"SELECT DISTINCT t3.journalid , t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Peter Mertens"";",où publie Peter Mertens ?
"SELECT DISTINCT t3.journalid , t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Peter Mertens"";",dans quels lieux publie Peter Mertens ?
"SELECT DISTINCT t3.journalid , t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Peter Mertens"";",Où publie Peter Mertens ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",combien d'articles ont paru à nature communications l'année dernière
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien y avait-il de communications à nature communications 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",combien de papiers acceptés dans nature communications 2015
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien d'articles ont été publiés dans nature communications en 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien de papiers sur la communication nature en 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",combien d'articles dans nature communications 2015
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien de communications ont été acceptées à nature communications 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien de papiers sont présentés dans nature communications 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien d'articles publiés dans nature communications en 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",combien d'articles publiés dans nature communications 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien d'articles ont été publiés dans la conférence nature communications 2015 ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""nature communications"";",Combien d'articles ont été publiés dans nature communications en 2015
"SELECT DISTINCT t2.datasetid , t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN paper AS t4 ON t4.paperid = t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid = t5.keyphraseid WHERE t5.keyphrasename = ""deep learning"" ORDER BY t4.year ASC;",quel a été le premier article sur le deep learning ?
"SELECT DISTINCT t2.datasetid , t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN paper AS t4 ON t4.paperid = t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid = t5.keyphraseid WHERE t5.keyphrasename = ""deep learning"" ORDER BY t4.year ASC;",en quelle année a été publié le premier article sur le deep learning ?
"SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t4.venuename = ""ACL"";",ensembles de données mentionnés à ACL
"SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t4.venuename = ""ACL"";",quels ensembles de données les articles d'ACL utilisent-ils le plus ?
"SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid = t3.keyphraseid JOIN paper AS t2 ON t2.paperid = t5.paperid JOIN venue AS t6 ON t6.venueid = t2.venueid JOIN writes AS t4 ON t4.paperid = t2.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""li dong"" AND t3.keyphrasename = ""semantic parsing"" AND t2.year = 2016 AND t6.venuename = ""acl"";",les articles sur l'analyse sémantique par li dong à acl en 2016
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""convolutional neural networks"" AND t3.year = 2016;",Combien d'articles ont été écrits sur les réseaux de neurones convolutifs au cours de la dernière année ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""convolutional neural networks"" AND t3.year = 2016;",Combien d'articles ont été publiés sur les réseaux de neurones convolutifs en 2016 ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""convolutional neural networks"" AND t3.year = 2016;",Combien d'articles ont été écrits sur les réseaux de neurones convolutifs en 2016 ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""convolutional neural networks"" AND t3.year = 2016;",Combien d'articles ont été écrits sur les réseaux de neurones convolutifs cette année ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""convolutional neural networks"" AND t3.year = 2016;",combien d'articles sur les réseaux de neurones convolutifs ont été publiés l'année dernière ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""question answering"" AND t3.year = 2016;",Quels articles ont été écrits sur les questions-réponses cette année ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""question answering"" AND t3.year = 2016;",question répondre aux articles de 2016
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""question answering"" AND t3.year = 2016;",Quels articles ont été écrits sur la question-réponse en 2016 ?
"SELECT DISTINCT COUNT ( t1.paperid ) , t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""NIPS"" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",quelle année a eu le plus d'articles NIPS ?
"SELECT DISTINCT COUNT ( t1.paperid ) , t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""NIPS"" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",quelle année a eu le plus d'articles NIPS ?
"SELECT DISTINCT COUNT ( t1.paperid ) , t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""NIPS"" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",quelle année a eu le plus grand nombre d'articles NIPS ?
"SELECT DISTINCT COUNT ( t1.paperid ) , t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""NIPS"" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",Quand la plupart des articles du NIPS ont-ils été publiés ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",qui écrit des articles avec Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",Qui est co-auteur avec Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",Qui sont les co-auteurs de Noah A Smith
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",Qui a coécrit avec Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",co-auteurs de Noah A Smith
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",auteur qui a écrit des articles avec Noah A Smith
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",auteurs qui ont collaboré avec Noah A Smith
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",avec qui écrit Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",Qui sont les coauteurs de Noah A Smith
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",qui sont tous les co-auteurs de Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",avec qui travaille Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",avec qui collabore Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",Qui sont les coauteurs de Noah A Smith ?
"SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Noah A Smith"";",co-auteurs de Noah A Smith
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",quels ensembles de données jitendra malik a-t-il utilisés ?
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",quels ensembles de données sont utilisés dans les articles de jitendra malik
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",Quels ensembles de données Jitendra Malik a-t-il utilisés dans ses articles ?
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",quels ensembles de données ont été utilisés par jitendra malik ?
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",jeux de données utilisés dans les articles écrits par jitendra malik ?
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",Ensembles de données par jitendra malik
"SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""jitendra malik"";",Quels ensembles de données ont utilisé Jitendra Malik
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",articles récents sur l'apprentissage en profondeur
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",nouveaux articles d'apprentissage en profondeur
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Quelles sont les dernières publications sur le deep learning ?
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Dernière conférence sur le deep learning ?
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Montrez-moi des articles récents sur l'apprentissage en profondeur ?
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Quels sont les articles récents écrits en deep learning ?
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Quel est l'article le plus récent sur le deep learning ?
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Quels sont les articles récents sur le deep learning ?
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",Recherches actuelles sur l'apprentissage profond
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",derniers articles sur l'apprentissage en profondeur
"SELECT DISTINCT t3.paperid , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" ORDER BY t3.year DESC;",derniers articles d'apprentissage en profondeur
"SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Pedro Domingos"" GROUP BY t3.year;",En quelles années Pedro Domingos a-t-il publié des articles ?
"SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Pedro Domingos"" GROUP BY t3.year;",En quelles années Pedro Domingos a-t-il publié un article ?
"SELECT DISTINCT t3.paperid , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""jamie callan"" ORDER BY t3.year;",publications de jamie callan par année
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""jamie callan"" GROUP BY t3.year;",Combien d'articles jamie callan publie-t-il chaque année ?
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""jamie callan"" GROUP BY t3.year;",nombre d'articles par an de jamie callan
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""jamie callan"" GROUP BY t3.year;",combien d'articles jamie callan publie chaque année ?
"SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citingpaperid JOIN writes AS t2 ON t2.paperid = t4.citedpaperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"";",qui cite oren etzioni
"SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citingpaperid JOIN writes AS t2 ON t2.paperid = t4.citedpaperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"";",quels papiers oren etzioni cite-t-il
"SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citingpaperid JOIN writes AS t2 ON t2.paperid = t4.citedpaperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"";",articles citant Daniel Jurafsky
"SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citingpaperid JOIN writes AS t2 ON t2.paperid = t4.citedpaperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"";",Quels articles citent Daniel Jurafsky ?
"SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citingpaperid JOIN writes AS t2 ON t2.paperid = t4.citedpaperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"";",Quels articles citent Daniel Jurafsky ?
"SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citingpaperid JOIN writes AS t2 ON t2.paperid = t4.citedpaperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"";",citations pour Daniel Jurafsky
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""instance segmentation"" AND t3.journalid >= 0;",articles de revues par exemple segmentation
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""semantic parsing"" AND t4.year > 2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a le plus d'articles en analyse sémantique après 2005 ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""semantic parsing"" AND t4.year > 2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a écrit le plus d'articles sur l'analyse sémantique depuis 2005 ?
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""semantic parsing"" AND t4.year > 2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",qui a publié le plus en analyse sémantique après 2005 ?
"SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid = t3.keyphraseid JOIN writes AS t4 ON t4.paperid = t2.paperid JOIN cite AS t5 ON t4.paperid = t5.citedpaperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Dan Makumbi"" AND t3.keyphrasename = ""Genetic Identity"";",Combien de citations l'article sur l'identité génétique de Dan Makumbi a-t-il ?
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""character recognition"" AND t3.year < 2010;",documents de reconnaissance de caractères antérieurs à 2010
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""character recognition"" AND t3.year < 2010;",articles avant 2010 sur la reconnaissance de caractères
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""character recognition"" AND t3.year < 2010;",documents de reconnaissance de caractères d'avant 2010
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""character recognition"" AND t3.year < 2010;",articles sur la reconnaissance de caractères d'avant 2010
"SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""character recognition"" AND t3.year < 2010;",papiers de reconnaissance de caractères avant 2010
"SELECT DISTINCT COUNT ( t2.keyphraseid ) , t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""oren etzioni"" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;",sur quels sujets oren etzioni écrit-il le plus ?
"SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid = t2.datasetid JOIN paper AS t4 ON t4.paperid = t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid = t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid = t5.keyphraseid WHERE t2.datasetname = ""ImageNet"" AND t5.keyphrasename = ""deep learning"";",Combien d'articles liés à l'apprentissage en profondeur ont cité le jeu de données ImageNet ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",articles les plus cités sur l'analyse syntaxique
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",analyser les meilleurs papiers
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Lister les meilleurs articles à analyser
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",analyser les articles qui ont le plus de citations
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Quel est l'article sur l'analyse syntaxique le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Article sur l'analyse syntaxique avec la plupart des citations
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",analyse des articles avec le plus de citations
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",articles d'analyse les plus cités
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",quels sont les articles de parsing qui ont le plus de citations ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",articles d'analyse très cités
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",les articles les plus cités pour l'analyse
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""parsing"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Articles les plus cités sur l'analyse syntaxique
"SELECT DISTINCT t3.year , t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname LIKE ""Michael Armstrong"" AND t3.year LIKE ""199"";",Quel article Michael Armstrong a-t-il écrit dans les années 90 ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Quel est l'article d'ohad shamir le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Quel est l'article d'ohad shamir le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Quel est l'article d'ohad shamir le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Quel est l'article d'ohad shamir le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",Quel article d'ohad shamir est le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",quel est l'article d'ohad shamir le plus cité ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ohad shamir"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",quel est l'article le plus cité d'ohad shamir ?
"SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""michael i. jordan"" AND t3.year = 2016;",Combien de papiers a fait michael i. jordan publier en 2016 ?
"SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""michael i. jordan"" AND t3.year = 2016;",Combien de papiers Michael i. jordan a en 2016 ?
"SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""michael i. jordan"" AND t3.year = 2016;",Combien de papiers a fait michael i. jordan publier en 2016
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""ACL"" GROUP BY t1.authorid;",nombre d'articles ACL par auteur
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""ACL"" GROUP BY t1.authorid;",combien d'articles ACL par auteur
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""ACL"" GROUP BY t1.authorid;",nombre d'articles ACL par auteur
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2007 AND t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",qui a écrit le plus d'articles pour le CVPR 2007
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2007 AND t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",qui a publié des articles dans CVPR 2007
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2007 AND t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",qui a écrit le plus d'articles CVPR en 2007
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2007 AND t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",auteur le plus publié au CVPR 2007
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2007 AND t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",qui a publié le plus d'articles dans CVPR 2007
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2007 AND t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",Qui a publié le plus d'articles en 2007 au CVPR ?
"SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""ACL"";",Combien de papiers dans ACL 2015 ?
"SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""ACL"";",nombre d'articles publiés dans ACL 2015
SELECT DISTINCT paperid FROM paper WHERE YEAR = 2014;,articles de 2014
SELECT DISTINCT paperid FROM paper WHERE YEAR = 2014;,articles 2014
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",Quels papiers Richard Ladner a-t-il en chi ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",quel article Richard Ladner a-t-il publié dans chi journal ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",quel article Richard Ladner a-t-il publié dans chi ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",articles de Richard Ladner publiés au chi
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",Richard Ladner publie-t-il en chi ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",Qu'est-ce que Richard Ladner a publié chez chi ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",Quels articles Richard Ladner a-t-il écrits au chi ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Richard Ladner"" AND t4.venuename = ""chi"";",Quel article Richard Ladner a-t-il présenté au chi ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""Artificial Intelligence"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;",Quel est l'article le plus cité sur l'Intelligence Artificielle ?
"SELECT DISTINCT t4.citedpaperid , COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""Artificial Intelligence"" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;",Cherchez-moi les publications les plus citées pour l'Intelligence Artificielle
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",sujets à ACL 2014
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",sujets les plus courants au NIPS 2015
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",sujets les plus populaires au NIPS 2015
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",sujets d'actualité au NIPS 2015
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",sujets populaires au NIPS 2015
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",quels sujets étaient les plus populaires au NIPS 2015
"SELECT DISTINCT COUNT ( t3.paperid ) , t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t3.year = 2014 AND t4.venuename = ""ACL"" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",sujets populaires au NIPS 2015
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""deep reinforcement learning"" AND t4.venuename = ""nips"";",Combien d'articles liés à l'apprentissage par renforcement profond dans les nips ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",Articles sur WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",quels papiers ont utilisé WebKB ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",articles sur WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",Lister les articles qui ont utilisé l'ensemble de données WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",articles utilisant WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",articles qui utilisent WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",Documents WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",articles utilisant WebKB
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""WebKB"";",Articles qui utilisent l'ensemble de données WebKB
SELECT DISTINCT venueid FROM paper WHERE YEAR = 2013;,conférences en 2013
"SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid JOIN cite AS t4 ON t1.paperid = t4.citedpaperid WHERE t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",comment est l'auteur le plus cité dans CVPR ?
"SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid JOIN cite AS t4 ON t1.paperid = t4.citedpaperid WHERE t3.venuename = ""CVPR"" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",qui est l'auteur le plus cité au CVPR ?
"SELECT DISTINCT t1.authorname , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname != ""chris dyer"" AND t5.keyphrasename = ""syntactic parsing"";",Quels sont les articles d'analyse syntaxique que Chris Dyer n'a pas écrits ?
"SELECT DISTINCT t1.authorname , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname != ""chris dyer"" AND t5.keyphrasename = ""syntactic parsing"";",y a-t-il des articles d'analyse syntaxique non écrits par Chris Dyer ?
"SELECT DISTINCT t1.authorname , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname != ""chris dyer"" AND t5.keyphrasename = ""syntactic parsing"";",quels sont les articles d'analyse syntaxique non écrits par chris dyer
"SELECT DISTINCT t1.authorname , t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname != ""chris dyer"" AND t5.keyphrasename = ""syntactic parsing"";",articles d'analyse syntaxique non écrits par chris dyer
SELECT DISTINCT paperid FROM paper WHERE YEAR = ( SELECT MAX ( YEAR ) FROM paper );,articles publiés l'année dernière
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""benjamin mako hill"" GROUP BY t3.year ORDER BY t3.year;",De quand date la première publication de Benjamin Mako Hill ?
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""benjamin mako hill"" GROUP BY t3.year ORDER BY t3.year;",Quand le premier article de Benjamin Mako Hill a-t-il été écrit ?
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""benjamin mako hill"" GROUP BY t3.year ORDER BY t3.year;",Quand a rencontré soni a-t-il publié ?
"SELECT DISTINCT COUNT ( t4.citingpaperid ) , t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN cite AS t4 ON t2.paperid = t4.citedpaperid JOIN writes AS t3 ON t3.paperid = t4.citingpaperid WHERE t1.authorname = ""Daniel A Reed"" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;",Qui cite le plus Daniel A Reed
"SELECT DISTINCT COUNT ( t4.citingpaperid ) , t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN cite AS t4 ON t2.paperid = t4.citedpaperid JOIN writes AS t3 ON t3.paperid = t4.citingpaperid WHERE t1.authorname = ""Daniel A Reed"" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;",Qui cite le plus Daniel A Reed ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""sigir"";",combien y a-t-il de papiers dans sigir ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""sigir"";",combien de papiers a sigir ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""sigir"";",combien d'articles sont publiés dans sigir ?
"SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = ""sigir"";",nombre de communications à la conférence sigir
"SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t2.venuename = ""ACL"" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid ) < 5;",quels articles ont moins de 5 citations par les articles de l'ACL ?
"SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t2.venuename = ""ACL"" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid ) < 5;",Articles ACL avec moins de 5 citations
"SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t2.venuename = ""ACL"" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid ) < 5;",quels articles ACL ont moins de 5 citations ?
"SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t2.venuename = ""ACL"" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid ) < 5;",quels articles ont moins de 5 citations par les articles de l'ACL
"SELECT DISTINCT t3.paperid , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Mirella Lapata"" ORDER BY t3.year DESC LIMIT 5;",Quels sont les 5 articles les plus récents de Mirella Lapata ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Quels ont été les articles publiés au pldi 2015 ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Articles de la conférence pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",articles publiés au pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Quels sont les papiers du pldi 2015 ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Articles du pldi 2015 ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Quels articles ont été acceptés au pldi 2015 ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Quels articles ont été publiés lors de la conférence pldi 2015 ?
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",articles dans pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Liste des articles dans le pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",papiers pldi en 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",quels articles sont publiés dans pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",articles du pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",papiers pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",conférence pldi 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",Prix ​​pldi du meilleur article 2015
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = 2015 AND t2.venuename = ""pldi"";",pldi 2015 liste des articles
SELECT DISTINCT journalid FROM paper WHERE YEAR = 2011 GROUP BY journalid;,Lister les revues du jour
SELECT DISTINCT journalid FROM paper WHERE YEAR = 2011 GROUP BY journalid;,Lister les revues publiées en mars 2011
"SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.title LIKE ""neural attention"" AND t1.year = 2016 AND t2.venuename = ""ACL"";",Articles ACL en 2016 avec une attention neurale dans le titre
"SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t2.paperid JOIN author AS t1 ON t3.authorid = t1.authorid WHERE t4.keyphrasename = ""Machine Learning"" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",Qui écrit beaucoup d'articles en Machine Learning ?
"SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t2.paperid JOIN author AS t1 ON t3.authorid = t1.authorid WHERE t4.keyphrasename LIKE ""sensor fusion"";",Qui a écrit la fusion de capteurs ?
"SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t2.paperid JOIN author AS t1 ON t3.authorid = t1.authorid WHERE t4.keyphrasename LIKE ""sensor fusion"";",Auteurs d'articles sur la fusion de capteurs
"SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t2.paperid JOIN author AS t1 ON t3.authorid = t1.authorid WHERE t4.keyphrasename LIKE ""sensor fusion"";",personnes travaillant sur la fusion de capteurs
"SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t2.paperid JOIN author AS t1 ON t3.authorid = t1.authorid WHERE t4.keyphrasename LIKE ""sensor fusion"";",Qui publie dans la fusion de capteurs ?
"SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid JOIN writes AS t3 ON t3.paperid = t2.paperid JOIN author AS t1 ON t3.authorid = t1.authorid WHERE t4.keyphrasename LIKE ""sensor fusion"";",qui publie des articles sur la fusion de capteurs
"SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN cite AS t5 ON t3.paperid = t5.citedpaperid JOIN writes AS t4 ON t4.paperid = t5.citingpaperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""michael i. jordan"" AND t1.authorname = ""dan klein"";",combien d'articles de dan klein sont cités par michael i. Jordan
"SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN cite AS t5 ON t3.paperid = t5.citedpaperid JOIN writes AS t4 ON t4.paperid = t5.citingpaperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""michael i. jordan"" AND t1.authorname = ""dan klein"";",combien d' articles de dan klein citent michael i. Jordan
"SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN writes AS t5 ON t5.paperid = t4.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = ""Ameet Soni"" AND t1.authorname = ""Ras Bodik"";",qui d'autre était sur le papier avec Ameet Soni et Ras Bodik ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""ImageNet"" AND t3.year = 2014;",Articles de 2014 utilisant ImageNet
"SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Takashi Matsumoto"" GROUP BY t3.journalid;",Dans quelles revues les articles de Takashi Matsumoto sont-ils publiés ?
"SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Takashi Matsumoto"" GROUP BY t3.journalid;",Dans quelles revues Takashi Matsumoto a-t-il publié ?
"SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Takashi Matsumoto"" GROUP BY t3.journalid;",Dans quelles revues savantes Takashi Matsumoto publie-t-il ?
"SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid JOIN author AS t5 ON t3.authorid = t5.authorid WHERE t2.keyphrasename = ""Bacterial Wilt"" AND t4.year = 2016;",Quels auteurs ont écrit des articles sur le flétrissement bactérien en 2016 ?
"SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid JOIN author AS t5 ON t3.authorid = t5.authorid WHERE t2.keyphrasename = ""Bacterial Wilt"" AND t4.year = 2016;",Qui a écrit sur le thème de la flétrissure bactérienne en 2016 ?
"SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Luke S Zettlemoyer"" ORDER BY t3.year;",Quand Luke S Zettlemoyer a-t-il publié ?
"SELECT DISTINCT COUNT ( t3.citingpaperid ) , t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN cite AS t3 ON t2.paperid = t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;",quelles phrases clés obtiennent le plus de citations ?
"SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Temporal Data"" GROUP BY t3.journalid;",Trouvez des revues sur les données temporelles .
"SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Temporal Data"" GROUP BY t3.journalid;",Lister les revues liées aux Données Temporelles
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid = t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid = t3.paperid JOIN paper AS t2 ON t2.paperid = t3.paperid JOIN venue AS t6 ON t6.venueid = t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid = t1.keyphraseid WHERE t5.datasetname = ""Jeopardy! Questions"" AND t1.keyphrasename = ""Parsing"" AND t2.year = 2014 AND t6.venuename = ""ACL"";",quels articles ACL 2014 sur l'analyse ont utilisé Jeopardy ! Des questions ?
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid = t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid = t3.paperid JOIN paper AS t2 ON t2.paperid = t3.paperid JOIN venue AS t6 ON t6.venueid = t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid = t1.keyphraseid WHERE t5.datasetname = ""Jeopardy! Questions"" AND t1.keyphrasename = ""Parsing"" AND t2.year = 2014 AND t6.venuename = ""ACL"";",Analyser des papiers à l'aide de Jeopardy ! Questions publiées à ACL 2014
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid = t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid = t3.paperid JOIN paper AS t2 ON t2.paperid = t3.paperid JOIN venue AS t6 ON t6.venueid = t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid = t1.keyphraseid WHERE t5.datasetname = ""Jeopardy! Questions"" AND t1.keyphrasename = ""Parsing"" AND t2.year = 2014 AND t6.venuename = ""ACL"";",Analyse des articles de l'ACL 2014 à l'aide de Jeopardy ! Des questions
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid = t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid = t3.paperid JOIN paper AS t2 ON t2.paperid = t3.paperid JOIN venue AS t6 ON t6.venueid = t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid = t1.keyphraseid WHERE t5.datasetname = ""Jeopardy! Questions"" AND t1.keyphrasename = ""Parsing"" AND t2.year = 2014 AND t6.venuename = ""ACL"";",Analyse des articles d'ACL 2014 qui utilisaient Jeopardy ! Des questions
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid = t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid = t3.paperid JOIN paper AS t2 ON t2.paperid = t3.paperid JOIN venue AS t6 ON t6.venueid = t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid = t1.keyphraseid WHERE t5.datasetname = ""Jeopardy! Questions"" AND t1.keyphrasename = ""Parsing"" AND t2.year = 2014 AND t6.venuename = ""ACL"";",articles sur l'analyse syntaxique qui utilisaient Jeopardy! Questions et ont été publiés à ACL 2014
"SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid = t2.journalid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""linda shapiro"";",dans quelles revues linda shapiro publie-t-elle ?
"SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid = t2.journalid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""linda shapiro"";",À quelles revues linda shapiro a-t-elle soumis des articles ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""NIPS"";",Auteurs NIPS
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""NIPS"";",qui sont les auteurs au NIPS ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""NIPS"";",qui a rédigé des articles au NIPS ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""NIPS"";",qui publie dans NIPS ?
"SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""NIPS"";",qui a des papiers au NIPS ?
"SELECT DISTINCT COUNT ( t3.paperid ) , t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""deep learning"" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;",quel lieu publie le plus d'articles sur l'apprentissage en profondeur
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid = t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid = t1.paperid WHERE t2.journalname = ""Cell"" AND t3.year = 2015;",Combien de publications ont été ajoutées à la revue Cell cette année ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid = t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid = t1.paperid WHERE t2.journalname = ""Cell"" AND t3.year = 2015;",Combien d'articles ont été publiés dans la revue Cell en 2015 ?
"SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Donald E Knuth"";",Quels sont tous les titres de publications de Donald E Knuth ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ali farhadi"" AND t3.year = 2016 AND t4.venuename = ""eccv"";",articles publiés dans eccv 2016 par ali farhadi
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ali farhadi"" AND t3.year = 2016 AND t4.venuename = ""eccv"";",Ali Farhadi a-t-il un papier à l'eccv en 2016 ?
"SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""ali farhadi"" AND t3.year = 2016 AND t4.venuename = ""eccv"";",papiers d'ali farhadi dans eccv 2016
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid = t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid = t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid = t4.keyphraseid WHERE t1.datasetname = ""YAGO"" AND t4.keyphrasename = ""Semantic Data"";",Quels sont les articles traitant des données sémantiques dans YAGO ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""chi"" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",Qui a publié le plus d'articles en chi ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""chi"" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",Qui a écrit le plus d'articles au chi ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""chi"" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",comment est l'auteur le plus prolifique en chi ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""chi"" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",qui a publié le plus à chi
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname LIKE ""Ye Cao"" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",En quelle année Ye Cao a-t-il publié le plus d'articles
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname LIKE ""Ye Cao"" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",En quelle année Ye Cao a-t-il publié le plus d'articles
"SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.datasetname = ""ImageNet"";",conférences qui mentionnent ImageNet
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" GROUP BY t3.year ORDER BY t3.year ASC;",premier article d'apprentissage en profondeur
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" GROUP BY t3.year ORDER BY t3.year ASC;",Quel a été le premier article sur le deep learning écrit ?
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" GROUP BY t3.year ORDER BY t3.year ASC;",Quand le deep learning a-t-il été proposé ?
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""deep learning"" GROUP BY t3.year ORDER BY t3.year ASC;",quand a été publié le premier article sur le deep learning ?
"SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid = t1.journalid WHERE t1.journalname = ""Academic radiology"" AND t2.year = 1995;",quels articles ont été publiés dans Academic radiology en 1995 ?
"SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citingpaperid WHERE t1.keyphrasename = ""parsing"";",quels articles les articles d'analyse citent-ils généralement ?
"SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citingpaperid WHERE t1.keyphrasename = ""parsing"";",articles généralement cités par l'analyse des articles
"SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Trophic Cascade"";",lieu de Trophic Cascade
"SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Trophic Cascade"";",conférences pour Trophic Cascade
"SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Trophic Cascade"";",quelles conférences sont liées à Trophic Cascade
"SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Trophic Cascade"";",Quel était le nom de la conférence qui a approuvé Trophic Cascade ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""question answering"" AND t3.year >= 2011;",Combien d'articles ont été écrits sur la question-réponse de 2011 à 2016 ?
"SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid ) , t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = ""NLP"" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",Quelles sont les meilleures conférences PNL ?
"SELECT DISTINCT t2.paperid , t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t3.venuename = ""ACL"";",Articles ACL par auteur
SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid = t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid ) > 10;,articles avec plus de 10 citations
SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid = t2.paperid WHERE t2.year = 2015;,Quels auteurs ont publié des articles en 2015 ?
SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid = t2.paperid WHERE t2.year = 2015;,qui a écrit des articles en 2015
"SELECT DISTINCT t1.keyphrasename , SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Brian DeRenzi"" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;",sur quelle phrase clé Brian DeRenzi écrit-il et qui obtient le plus de citations ?
"SELECT DISTINCT t1.keyphrasename , SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = ""Brian DeRenzi"" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;",principaux thèmes de travail de Brian DeRenzi
"SELECT DISTINCT COUNT ( t2.paperid ) , t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid = t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid ) >= 5;",auteurs avec au moins 5 articles
SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;,articles qui n'ont pas été publiés l'année dernière
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Michael Stonebraker"" AND t5.keyphrasename = ""GIS Database"";",Quand la base de données SIG Michael Stonebraker a-t-elle été publiée ?
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Michael Stonebraker"" AND t5.keyphrasename = ""GIS Database"";",Quand Michael Stonebraker a-t-il publié son article GIS Database ?
"SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname = ""Michael Stonebraker"" AND t5.keyphrasename = ""GIS Database"";",Quand Michael Stonebraker publie-t-il l'article GIS Database ?
"SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""Trophic Cascade"" AND t3.year = 2010 GROUP BY t3.journalid;","En 2010, quelle revue a publié un article sur Trophic Cascade ?"
"SELECT DISTINCT t3.citedpaperid , COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2016 AND t2.venuename = ""CVPR"" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;",Quel est l'article le plus lu cette année dans CVPR ?
"SELECT DISTINCT COUNT ( t4.citedpaperid ) , t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid = t4.citedpaperid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""luke zettlemoyer"" GROUP BY t3.year;",Combien de citations Luke Zettlemoyer a-t-il par an
"SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid = t1.datasetid JOIN paper AS t4 ON t4.paperid = t3.paperid JOIN writes AS t2 ON t2.paperid = t4.paperid WHERE t1.datasetname = ""ImageNet"" GROUP BY t2.paperid;",auteurs travaillant sur ImageNet
"SELECT DISTINCT paperid , title FROM paper WHERE title LIKE ""the effects of juicing for cancer patients"" AND YEAR > 2006;",Quels articles ont été publiés depuis 2006 sur les effets du juicing pour les patients atteints de cancer ?
"SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid = t3.keyphraseid JOIN writes AS t4 ON t4.paperid = t5.paperid JOIN paper AS t2 ON t4.paperid = t2.paperid JOIN author AS t1 ON t4.authorid = t1.authorid JOIN venue AS t6 ON t6.venueid = t2.venueid WHERE t1.authorname = ""Eric C. Kerrigan"" AND t3.keyphrasename = ""Liquid"" AND t6.venuename = ""Automatica"";",Papier Liquid Automatica d'Eric C. Kerrigan
"SELECT DISTINCT t3.venueid , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""sergey levine"" GROUP BY t3.venueid , t3.year ORDER BY t3.year DESC;",Où Sergey Levine a-t-il publié son dernier article ?
"SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid JOIN writes AS t5 ON t5.paperid = t3.paperid JOIN author AS t1 ON t5.authorid = t1.authorid WHERE t1.authorname = ""dan klein"" AND t4.venuename = ""emnlp"";",phrases clés utilisées par dan klein dans ses articles emnlp
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = ""Neutralizing Antibody"" AND t4.year = 2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",Qui sont les chercheurs éminents en matière d'anticorps neutralisants en 2012 ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.datasetname = ""ImageNet"" AND t3.year = 2014 AND t4.venuename = ""eccv"";",les articles à l'eccv en 2014 en utilisant l'ensemble de données ImageNet
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.datasetname = ""ImageNet"" AND t3.year = 2014 AND t4.venuename = ""eccv"";",quels articles de l'eccv 2014 utilisent ImageNet ?
"SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.datasetname = ""ImageNet"" AND t3.year = 2014 AND t4.venuename = ""eccv"";",articles eccv 2014 utilisant ImageNet
"SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN cite AS t5 ON t2.paperid = t5.citingpaperid JOIN paper AS t3 ON t3.paperid = t5.citedpaperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = ""Euclidean Distance"" AND t4.venuename = ""NIPS"";",Articles sur la distance euclidienne citant des articles du NIPS
"SELECT DISTINCT COUNT ( t4.paperid ) , t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t4 ON t4.paperid = t2.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t1.datasetname = ""ImageNet"" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;",meilleurs auteurs travaillant sur ImageNet ?
"SELECT DISTINCT ( t1.paperid ) , COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t1.year = 2012 AND t2.venuename = ""ACL"" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid ) > 7;",combien d'articles ACL 2012 ont plus de 7 citations ?
"SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid ) , t1.keyphraseid , t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid = t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid = t1.paperid JOIN venue AS t3 ON t3.venueid = t2.venueid WHERE t2.year = 2012 AND t3.venuename = ""EMNLP-CoNLL"" GROUP BY t2.paperid , t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",Quel était le sujet du meilleur article en 2012 EMNLP-CoNLL ?
"SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname != ""Noah Smith"" AND t3.year > 2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname LIKE ""Noah Smith"" );",Combien d'articles Noah Smith a-t-il co-écrit depuis 2009 ?
"SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t2.venuename = ""ACL"" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid ) > 2;",Nombre d'articles ACL avec plus de 2 citations
"SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid = t3.keyphraseid JOIN writes AS t4 ON t4.paperid = t5.paperid JOIN paper AS t2 ON t4.paperid = t2.paperid JOIN author AS t1 ON t4.authorid = t1.authorid JOIN venue AS t6 ON t6.venueid = t2.venueid WHERE t1.authorname LIKE ""Eric C. Kerrigan"" AND t3.keyphrasename = ""Liquid"" AND t6.venuename = ""Automatica"";",Comment s'appelle le papier Liquid Automatica d'Eric C. Kerrigan ?
"SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid = t1.datasetid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.datasetname = ""ImageNet"" AND t4.venuename = ""cvpr"";",Combien d'articles ont utilisé des ensembles de données ImageNet dans cvpr ?
"SELECT DISTINCT venueid FROM venue WHERE venuename = ""Neuroscience"";",Quels lieux pour les Neurosciences ?
"SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Mary Crainie"";",À quand remonte la dernière fois que Mary Crainie a publié un article ?
"SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid = t3.keyphraseid JOIN writes AS t4 ON t4.paperid = t6.paperid JOIN writes AS t5 ON t5.paperid = t4.paperid JOIN author AS t1 ON t5.authorid = t1.authorid JOIN author AS t2 ON t4.authorid = t2.authorid WHERE t2.authorname = ""Philipp Koehn"" AND t3.keyphrasename = ""Machine Translation Output"";",Je veux les co-auteurs d'articles sur la production de traduction automatique avec Philipp Koehn
"SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid = t3.venueid JOIN writes AS t2 ON t2.paperid = t3.paperid JOIN author AS t1 ON t2.authorid = t1.authorid WHERE t1.authorname = ""Samuel Madden"" AND t4.venuename != ""PVLDB"";",Combien d'articles Samuel Madden publie-t-il en dehors de la zone PVLDB ?
"SELECT DISTINCT t3.journalid , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Donald E Knuth"" GROUP BY t3.journalid , t3.year ORDER BY t3.year DESC;",dans quelle revue Donald E Knuth a-t-il publié son dernier article ?
"SELECT DISTINCT venueid FROM paper WHERE title = ""Fracture of acrylic bone cement"";",Quel est le lieu de Fracture du ciment osseux acrylique ?
"SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid = t2.venueid JOIN writes AS t1 ON t1.paperid = t2.paperid WHERE t2.year = 2010 AND t3.venuename = ""sigcse"";",Combien d'auteurs ont publié au sigcse en 2010 ?
"SELECT DISTINCT title , YEAR FROM paper WHERE title = ""A Switching Architecture For ISDN"";",Quelle est l'année de publication de « A Switching Architecture For ISDN » ?
"SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t4.venuename = ""uist"";",quels mots-clés sont utilisés par les articles à uist
"SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = ""Su-In Lee"" AND t3.year < 2012;",Donnez-moi les articles écrits par Su-In Lee avant 2012 .
"SELECT DISTINCT COUNT ( t3.paperid ) , t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = ""semantic parsing"" GROUP BY t3.year ORDER BY t3.year DESC;",articles en analyse sémantique pour chaque année
SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid = t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid ) >= 5;,articles avec au moins 5 citations
SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid = t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid ) >= 5;,articles cités par au moins 5 articles
"SELECT DISTINCT t3.citedpaperid , COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid = t3.citedpaperid JOIN venue AS t2 ON t2.venueid = t1.venueid WHERE t2.venuename = ""sigcomm"" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;",Quel est l'article le plus cité au sigcomm ?
"SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid = t5.keyphraseid JOIN writes AS t4 ON t4.paperid = t2.paperid JOIN paper AS t3 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t1.authorname LIKE ""Ranjit Jhala"" AND t5.keyphrasename = ""Liquid Haskell"";",Quel est le nom du papier Liquid Haskell de Ranjit Jhala ?
SELECT name FROM business WHERE rating > 4.5;,"Lister toutes les entreprises avec plus de 4,5 étoiles"
SELECT name FROM business WHERE rating = 3.5;,"Lister toutes les entreprises avec une note de 3,5"
"SELECT user_id FROM USER WHERE name = ""Michelle"";",Répertorier tous les identifiants d'utilisateur avec le nom Michelle
"SELECT state FROM business WHERE name = ""Whataburger"";",Trouver tous les états dans lesquels il y a un Whataburger
"SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""MGM Grand Buffet"" AND t2.category_name = ""category_category_name0"";","Trouver toutes les villes dans lesquelles il y a un restaurant appelé "" MGM Grand Buffet """
"SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""MGM Grand Buffet"" AND t2.category_name = ""category_category_name0"";","trouver toutes les villes qui ont un restaurant "" Taj Mahal """
SELECT city FROM business WHERE rating < 1.5;,"Retrouvez les villes des entreprises notées en dessous de 1,5"
"SELECT city FROM business WHERE name = ""Taj Mahal"";","Trouvez toutes les villes qui ont un "" Taj Mahal "" ."
SELECT text FROM review WHERE rating < 1;,Répertorier tous les avis qui ont évalué une entreprise à moins de 1
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.rating > 3.5 AND t2.category_name = ""restaurant"";","Lister tous les restaurants notés plus de 3,5"
"SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t2.name = ""Niloofar"";",lister tous les avis de Niloofar
"SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t3.name = ""Niloofar"";",lister tous les commerces qui ont un avis par Niloofar
"SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t2.rating = 5 AND t3.name = ""Niloofar"";",lister toutes les entreprises que Niloofar a notées 5
"SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN review AS t4 ON t4.business_id = t1.business_id JOIN USER AS t5 ON t5.user_id = t4.user_id WHERE t2.category_name = ""Italian"" AND t3.category_name = ""category_category_name1"" AND t5.name = ""Michelle"";",Lister tous les avis de Michelle pour restaurant italien
"SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id WHERE t1.name = ""Cafe Zinho"" AND t1.state = ""Texas"" AND t2.category_name = ""restaurant"";","trouver le nombre d'avis rédigés pour le restaurant "" Cafe Zinho "" au Texas"
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.rating = 5 AND t2.category_name = ""Italian"" AND t3.category_name = ""restaurant"";",Lister tous les restaurants italiens 5 étoiles
"SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id = t2.business_id JOIN category AS t4 ON t4.business_id = t2.business_id JOIN neighbourhood AS t1 ON t1.business_id = t2.business_id WHERE t2.city = ""Madison"" AND t3.category_name = ""Italian"" AND t4.category_name = ""restaurant"";",Lister tous les quartiers avec restaurant italien à Madison
"SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id = t2.business_id JOIN category AS t4 ON t4.business_id = t2.business_id JOIN neighbourhood AS t1 ON t1.business_id = t2.business_id WHERE t2.city = ""Madison"" AND t2.rating < 2.5 AND t3.category_name = ""Italian"" AND t4.category_name = ""restaurant"";","Lister tous les quartiers avec un restaurant italien noté moins de 2,5 à Madison"
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.state = ""Pennsylvania"" AND t2.category_name = ""restaurant"";",trouver tous les restaurant de Pennsylvanie
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.state = ""Pennsylvania"" AND t2.category_name = ""restaurant"";",Dressez la liste de toutes les entreprises qui sont restaurant en Pennsylvanie.
"SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id WHERE t1.review_count > 100 AND t2.category_name = ""Pet Groomers"";",Retrouvez tous les avis de tous les toiletteurs avec plus de 100 avis
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""breweries"";",Quelles sont toutes les brasseries de « Los Angeles » ?
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""breweries"";",Trouver toutes les brasseries à Los Angeles
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""breweries"";","Trouver toutes les brasseries de "" Los Angeles """
"SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.name = ""Mesa Grill"" AND t2.category_name = ""restaurant"";","Retrouvez tous les utilisateurs qui ont donné leur avis sur le restaurant "" Mesa Grill """
"SELECT full_address FROM business WHERE city = ""Los Angeles"" AND name = ""Walmart"";","Lister les adresses de tous les Walmart à "" Los Angeles """
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.city = ""Dallas"" AND t2.category_name = ""restaurant"" AND t4.name = ""Patrick"";","Trouver tous les restaurants évalués par Patrick dans "" Dallas """
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.city = ""Dallas"" AND t2.category_name = ""restaurant"" AND t4.name = ""Patrick"";",Quel restaurant à Dallas a été évalué par l'utilisateur Patrick ?
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = ""Bars"" AND t4.name = ""Patrick"";",Retrouvez tous les Bars évalués par Patrick
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.rating >= 3 AND t2.category_name = ""Bars"" AND t4.name = ""Patrick"";",Retrouvez tous les Bars évalués par Patrick avec au moins 3 étoiles
"SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.name = ""Barrio Cafe"" AND t2.year = 2015;","Trouver tous les utilisateurs qui ont écrit des astuces pour "" Barrio Cafe "" en 2015"
"SELECT name FROM business WHERE rating < 2 AND state = ""Texas"";",Trouver toutes les entreprises du Texas avec une note inférieure à 2
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""Seafood"" AND t3.category_name = ""restaurant"";",Trouver tous les restaurant Fruits de mer à Los Angeles
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""Seafood"" AND t3.category_name = ""restaurant"";","Lister tous les restaurant Fruits de mer à "" Los Angeles """
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""Seafood"" AND t3.category_name = ""restaurant"";","Trouvez tous les restaurants qui servent des fruits de mer à "" Los Angeles """
"SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t1.rating > 4 AND t2.name = ""Patrick"";",Retrouvez tous les avis de Patrick avec une note supérieure à 4
"SELECT business_id FROM business WHERE city = ""Los Angeles"" AND name = ""Apple Store"";","Retrouvez tous les Apple Store de "" Los Angeles """
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t1.rating > 4.5 AND t2.category_name = ""restaurant"";","Trouvez tous les restaurants de Dallas avec une note supérieure à 4,5"
"SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id = t2.business_id JOIN neighbourhood AS t1 ON t1.business_id = t2.business_id WHERE t2.name = ""Flat Top Grill"" AND t3.category_name = ""category_category_name0"";","Dans quel quartier se trouve le restaurant "" Flat Top Grill "" ?"
"SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""Vintner Grill"" AND t2.likes > 9;","Retrouvez tous les bons plans "" Vintner Grill "" ayant reçu plus de 9 likes"
"SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""Kabob Palace"" AND t2.year = 2014;","Retrouvez tous les avis sur "" Kabob Palace "" de l'année 2014"
"SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.city = ""Dallas"";",Trouver tous les utilisateurs qui ont écrit des conseils sur les entreprises à Dallas
"SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""MGM Grand Buffet"" AND t1.state = ""Texas"" AND t2.category_name = ""restaurant"";","Trouver toutes les villes du Texas dans lesquelles il y a un restaurant appelé "" MGM Grand Buffet """
"SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN tip AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = ""Pet Groomers"";",Retrouvez les utilisateurs qui ont donné des conseils sur les toiletteurs
"SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""Cafe Zinho"" AND t1.state = ""Texas"";","Retrouvez tous les bons plans pour ""Café Zinho"" au Texas."
"SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = ""restaurant"";",Répertorier tous les utilisateurs qui ont évalué les entreprises qui sont des restaurants .
"SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""Cafe Zinho"" AND t1.state = ""Pennsylvania"" AND t2.year = 2010;","Listez tous les conseils pour "" Cafe Zinho "" en Pennsylvanie en 2010 ."
"SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t2.category_name = ""restaurant"" AND t3.year = 2010;",Répertorier tous les utilisateurs qui ont évalué les entreprises qui sont des restaurants en 2010 .
SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id = t1.user_id JOIN tip AS t2 ON t3.user_id = t2.user_id WHERE t1.year = 2012;,Retrouvez tous les conseils d'un utilisateur ayant rédigé un avis en 2012
SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.rating = 2.5;,"Retrouvez tous les avis des entreprises notées 2,5"
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t2.category_name = ""escape games"";",trouver le nombre de jeux d'évasion à Madison
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t2.category_name = ""escape games"";",Quel est le nombre de jeux d'évasion à Madison
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t2.category_name = ""escape games"";",Combien de jeux d'évasion existent à Madison
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t2.category_name = ""escape games"";","Combien y a-t-il d'escape game à ""Madison"" ?"
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t2.category_name = ""escape games"";",Combien y a-t-il d'escape game à Madison ?
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.rating > 3.5 AND t2.category_name = ""restaurant"";","trouver le nombre de restaurant noté plus de 3,5"
"SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""restaurant"" AND t3.category_name = ""Moroccan"";","retrouvez le total des checkins au restaurant marocain à "" Los Angeles """
"SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""Moroccan"" AND t3.category_name = ""restaurant"" AND t4.day = ""Friday"";",retrouvez le total des checkins au restaurant marocain de « Los Angeles » ce vendredi
"SELECT t4.day , SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t2.category_name = ""Moroccan"" AND t3.category_name = ""restaurant"" GROUP BY t4.day;","trouver le total des checkins au restaurant marocain à "" Los Angeles "" par jour"
"SELECT t1.state , SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t2.category_name = ""Italian"" AND t3.category_name = ""Delis"" AND t4.day = ""Sunday"" GROUP BY t1.state;",trouver le nombre total d'enregistrements dans les Delis italiens de chaque État le dimanche
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t1.year = 2015 AND t2.name = ""Niloofar"";",Combien d'avis Niloofar a écrit en 2015
"SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t2.name = ""Michelle"";",quelle est la note moyenne donnée dans les avis de Michelle
"SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""Cafe Zinho"" AND t2.day = ""Friday"";",Quel est le nombre d'enregistrements pour le « Café Zinho » le vendredi ?
"SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.city = ""Pittsburgh"" AND t1.name = ""Sushi Too"";","combien d'utilisateurs ont évalué "" Sushi Too "" à Pittsburgh"
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Pittsburgh"" AND t1.rating = 4.5 AND t2.category_name = ""restaurant"";",Quel est le nombre de restaurant à Pittsburgh noté 4.5
SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR = 2015;,Combien de conseils ont été écrits en 2015
"SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t2.name = ""Niloofar"";",Quel est le total des likes sur les conseils de Niloofar
"SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.name = ""Cafe Zinho"";","Quel est le nombre total de likes sur les conseils sur "" Cafe Zinho """
"SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.name = ""Cafe Zinho"" AND t3.name = ""Niloofar"";","Quel est le nombre total de likes sur les conseils de Niloofar à propos du "" Café Zinho """
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t1.year = 2010 AND t2.name = ""Michelle"";",Combien de conseils Michelle a-t-elle écrits en 2010
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t1.year = 2010 AND t2.name = ""Michelle"";",Rapportez-moi le nombre de conseils qui sont écrits par Michelle en 2010 .
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t1.month = ""April"" AND t2.name = ""Michelle"";",Combien de conseils Michelle a-t-elle écrits en avril
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.state = ""Texas"" AND t2.category_name = ""restaurant"";",quel est le nombre de restaurants au Texas
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t1.rating > 3.5 AND t2.category_name = ""Bars"";","Combien de Bars dans « Dallas » ont une note supérieure à 3,5 ?"
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t1.rating > 3.5 AND t2.category_name = ""Bars"";","Combien de bars à Dallas ont une note supérieure à 3,5 ?"
"SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.city = ""Dallas"" AND t1.name = ""Texas de Brazil"" AND t1.state = ""Texas"" AND t2.category_name = ""restaurant"";",Combien de personnes ont donné leur avis sur le restaurant « Texas de Brazil » à Dallas Texas ?
"SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.name = ""Bistro Di Napoli"" AND t2.year = 2015;","Combien de personnes ont donné leur avis sur "" Bistro Di Napoli "" en 2015 ?"
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id = t1.business_id JOIN neighbourhood AS t2 ON t2.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t3.category_name = ""restaurant"" AND t2.neighbourhood_name = ""Hazelwood"";",Combien y a-t-il de restaurant dans le quartier Hazelwood de Dallas ?
"SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city = ""Dallas"" AND name = ""Starbucks"" AND state = ""Texas"";",Combien y a-t-il de Starbucks à Dallas au Texas ?
"SELECT review_count FROM business WHERE name = ""Acacia Cafe"";","Combien d'avis a "" Acacia Café "" ?"
"SELECT AVG ( t3.count ) , t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN checkin AS t3 ON t3.business_id = t1.business_id WHERE t1.name = ""Barrio Cafe"" AND t2.category_name = ""restaurant"" GROUP BY t3.day;","Trouvez le nombre moyen de checkins au restaurant "" Barrio Cafe "" par jour"
"SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t2.neighbourhood_name = ""Stone Meadows"";",Combien y a-t-il d'entreprises dans le quartier « Stone Meadows » à Madison ?
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t2.name = ""Adrienne"";",Combien d'avis a écrit Adrienne ?
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id WHERE t1.month = ""March"" AND t1.year = 2014 AND t2.name = ""Michelle"";",Combien d'avis Michelle a-t-elle écrit en mars 2014 ?
"SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t2.year = 2010 AND t3.name = ""Michelle"";",Combien d'entreprises Michelle a-t-elle examinées en 2010 ?
"SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN USER AS t3 ON t3.user_id = t2.user_id WHERE t1.city = ""San Diego"" AND t2.year = 2010 AND t3.name = ""Christine"";",Combien d'entreprises de « San Diego » Christine a-t-elle examinées en 2010 ?
"SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city = ""Los Angeles"" AND name = ""Target"";",Combien y a-t-il de Target à « Los Angeles » ?
"SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.city = ""Dallas"" AND t2.category_name = ""Irish Pub"";",Combien d'utilisateurs ont donné leur avis sur Irish Pub à Dallas ?
SELECT AVG ( rating ) FROM review WHERE YEAR = 2014;,Quelle est la note moyenne des avis rédigés en 2014 ?
"SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN review AS t3 ON t3.business_id = t1.business_id JOIN USER AS t4 ON t4.user_id = t3.user_id WHERE t1.name = ""Vintner Grill"" AND t2.category_name = ""category_category_name0"" AND t3.year = 2010;",Combien de personnes ont donné leur avis sur le restaurant « Vintner Grill » en 2010 ?
"SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id = t2.business_id JOIN review AS t3 ON t3.business_id = t2.business_id WHERE t1.neighbourhood_name = ""South Summerlin"";","Retrouvez le nombre d'avis sur les commerces situés dans le quartier "" South Summerlin """
"SELECT COUNT ( DISTINCT name ) FROM USER WHERE name = ""Michelle"";",Trouver le nombre d'utilisateurs qui s'appelle Michelle
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t2.category_name = ""restaurant"";",Renvoyez-moi le nombre de commerces qui font restaurant.
"SELECT COUNT ( DISTINCT city ) FROM business WHERE name = ""Panda Express"";","Renvoie moi le nombre de villes qui ont "" Panda Express "" ."
"SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id = t1.user_id WHERE t2.name = ""Michelle"";",Retournez-moi le nombre de conseils qui sont écrits par Michelle.
"SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id = t1.business_id JOIN neighbourhood AS t2 ON t2.business_id = t1.business_id WHERE t2.neighbourhood_name = ""Brighton Heights"";","Trouver le total des checkins dans le quartier "" Brighton Heights """
"SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH = ""March"";",Trouver le nombre total d'avis rédigés en mars
"SELECT COUNT ( DISTINCT text ) , MONTH FROM tip GROUP BY MONTH;",Trouver le nombre de conseils écrits chaque mois
"SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id = t2.business_id WHERE t2.city = ""Madison"" AND t2.rating = 5;",Combien de quartiers ont une entreprise avec la note 5 à Madison ?
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.state = ""Texas"" AND t2.category_name = ""Moroccan"" AND t3.category_name = ""restaurant"";",Donne-moi tout le restaurant marocain du Texas
SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;,quelle entreprise a le plus grand nombre de checkins
"SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id = t2.business_id WHERE t2.city = ""Madison"" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;",quel quartier a le plus grand nombre d'entreprises à Madison
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t1.rating > 3.5 AND t2.category_name = ""Mexican"" AND t3.category_name = ""restaurant"";","Trouvez tous les restaurants mexicains à Dallas avec au moins 3,5 étoiles"
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t1.rating > 3.5 AND t2.category_name = ""Mexican"" AND t3.category_name = ""restaurant"";","Trouvez tous les restaurants mexicains à Dallas avec une note supérieure à 3,5"
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Dallas"" AND t1.state = ""Texas"" AND t2.category_name = ""Valet Service"" AND t3.category_name = ""restaurant"";",Trouvez tous les restaurants avec service de voiturier à Dallas Texas
"SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id = t1.business_id JOIN category AS t4 ON t4.business_id = t1.business_id JOIN neighbourhood AS t2 ON t2.business_id = t1.business_id WHERE t1.city = ""Madison"" AND t3.category_name = ""Italian"" AND t4.category_name = ""restaurant"" AND t2.neighbourhood_name = ""Meadowood"";",Trouvez tous les restaurants italiens du quartier Meadowood de Madison
"SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t1.city = ""Los Angeles"" AND t1.rating > 3 AND t1.review_count > 30 AND t2.category_name = ""Bars"";","Trouvez tous les Bars de "" Los Angeles "" avec au moins 30 avis et une note moyenne supérieure à 3 étoiles"
"SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id WHERE t1.city = ""Edinburgh"" AND t2.category_name = ""restaurant"" AND t3.category_name = ""Egyptian"";",Combien de restaurants égyptiens y a-t-il à Edimbourg ?
SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id = t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating ) < 3;,Rechercher des utilisateurs dont la note moyenne des avis est inférieure à 3
"SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id WHERE t2.month = ""April"" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;",Trouvez l'entreprise avec le plus grand nombre d'avis en avril
SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;,Trouvez l'entreprise qui a le plus grand nombre de catégories
"SELECT homepage FROM journal WHERE name = ""PVLDB"";",renvoie moi la page d'accueil de PVLDB .
"SELECT homepage FROM author WHERE name = ""H. V. Jagadish"";","renvoyez-moi la page d'accueil de "" H. V. Jagadish "" ."
"SELECT abstract FROM publication WHERE title = ""Making database systems usable"";","renvoyez - moi le résumé de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT YEAR FROM publication WHERE title = ""Making database systems usable"";","rendez-moi l'année de "" Rendre les systèmes de bases de données utilisables """
"SELECT YEAR FROM publication WHERE title = ""Making database systems usable"";",rendez-moi l'année de « Rendre les systèmes de bases de données utilisables ».
SELECT title FROM publication WHERE YEAR > 2000;,rendez-moi les papiers après 2000 .
"SELECT homepage FROM conference WHERE name = ""VLDB"";",renvoyez moi la page d'accueil de la conférence VLDB .
SELECT keyword FROM keyword;,retournez-moi tous les mots-clés.
SELECT name FROM organization;,rendez-moi toutes les organisations .
"SELECT name FROM organization WHERE continent = ""North America"";",renvoyez-moi toutes les organisations en « Amérique du Nord ».
"SELECT homepage FROM organization WHERE name = ""University of Michigan"";","renvoyez-moi la page d'accueil de ""l'Université du Michigan""."
"SELECT reference_num FROM publication WHERE title = ""Making database systems usable"";","retournez-moi le nombre de références de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT reference_num FROM publication WHERE title = ""Making database systems usable"";","renvoyez - moi les références de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT citation_num FROM publication WHERE title = ""Making database systems usable"";","renvoyez-moi le nombre de citations de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT citation_num FROM publication WHERE title = ""Making database systems usable"";","renvoyez - moi les citations de "" Rendre les systèmes de bases de données utilisables "" ."
SELECT title FROM publication WHERE citation_num > 200;,renvoyez-moi le papier avec plus de 200 citations.
"SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""PVLDB"" AND t4.year = 2010;",renvoyez moi les auteurs qui ont des articles dans PVLDB 2010 .
"SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""PVLDB"" AND t4.year > 2010;",renvoyez moi les auteurs qui ont des articles dans PVLDB après 2010 .
"SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"" AND t4.year = 2002;",renvoyez moi les auteurs qui ont des papiers à la conférence VLDB en 2002 .
"SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"" AND t4.year < 2002;",renvoyez - moi les auteurs qui ont des articles dans la conférence VLDB avant 2002 .
"SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"" AND t4.year < 2002 AND t4.year > 1995;",renvoyez moi les auteurs qui ont des papiers au congrès VLDB avant 2002 après 1995 .
"SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did = t1.did JOIN journal AS t2 ON t2.jid = t1.jid WHERE t2.name = ""PVLDB"";",retournez moi la zone de PVLDB .
"SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""PVLDB"";",renvoyez-moi les auteurs qui ont des articles dans PVLDB .
"SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid WHERE t1.name = ""H. V. Jagadish"";","retournez-moi l'organisation dans laquelle se trouve ""H. V. Jagadish""."
"SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","renvoyez-moi les conférences, qui ont des articles de "" H. V. Jagadish "" ."
"SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","rendez-moi les journaux, qui contiennent des articles de "" H. V. Jagadish "" ."
"SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid = t1.aid JOIN DOMAIN AS t2 ON t2.did = t3.did WHERE t1.name = ""H. V. Jagadish"";","retournez-moi le domaine où "" H. V. Jagadish "" est concentré ."
"SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t3.title = ""Making database systems usable"";","renvoyez - moi les auteurs de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t2.title = ""Making database systems usable"";","rendez-moi la conférence, qui a publié "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"";","renvoyez-moi les papiers par "" H. V. Jagadish "" ."
"SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"";",renvoyez-moi les articles sur la conférence VLDB.
"SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"";",renvoyez moi les papiers sur PVLDB .
"SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.year > 2000;",renvoyez moi les papiers sur PVLDB après 2000 .
"SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.year > 2000;",renvoyez - moi les articles sur la conférence VLDB après 2000 .
"SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""PVLDB"";","renvoyez-moi les papiers de "" H. V. Jagadish "" sur PVLDB ."
"SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""VLDB"";","renvoyez-moi les articles de "" H. V. Jagadish "" sur la conférence VLDB ."
"SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"" AND t3.year > 2000;","renvoyez - moi les papiers de "" H. V. Jagadish "" après 2000 ."
"SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""PVLDB"" AND t4.year > 2000;","renvoyez - moi les papiers de "" H. V. Jagadish "" sur PVLDB après 2000 ."
"SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""VLDB"" AND t4.year > 2000;","renvoyez - moi les articles de "" H. V. Jagadish "" sur la conférence VLDB après 2000 ."
"SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid = t1.cid JOIN DOMAIN AS t2 ON t2.did = t3.did WHERE t1.name = ""VLDB"";",rendez-moi la zone de la conférence VLDB .
"SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"";",renvoyez moi les auteurs qui ont des papiers à la conférence VLDB .
"SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did = t2.did JOIN keyword AS t1 ON t1.kid = t2.kid WHERE t3.name = ""Databases"";",renvoyez-moi tous les mots-clés dans la zone Bases de données.
"SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid = t1.kid JOIN publication AS t3 ON t3.pid = t2.pid WHERE t1.keyword = ""Natural Language"";","renvoyez-moi tous les papiers, qui contiennent le mot-clé "" Natural Language "" ."
"SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid = t1.kid JOIN publication AS t2 ON t2.pid = t3.pid WHERE t2.title = ""Making database systems usable"";","renvoyez - moi les mots - clés de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"";","renvoyez-moi les mots clés liés à "" H. V. Jagadish "" ."
"SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t2.name = ""VLDB"";",retournez-moi les mots clés dans la conférence VLDB.
"SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t3.name = ""PVLDB"";",renvoyez moi les mots clés dans PVLDB .
"SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid = t2.oid JOIN writes AS t4 ON t4.aid = t2.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN publication_keyword AS t3 ON t5.pid = t3.pid JOIN keyword AS t1 ON t3.kid = t1.kid WHERE t6.name = ""University of Michigan"";","retournez-moi les mots clés dans les articles de ""l'Université du Michigan""."
"SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid = t1.kid JOIN publication AS t5 ON t5.pid = t3.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.keyword = ""User Study"";","renvoyez-moi les papiers de "" H. V. Jagadish "" contenant le mot clé "" User Study "" ."
"SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid = t1.kid JOIN publication AS t4 ON t4.pid = t2.pid JOIN journal AS t3 ON t4.jid = t3.jid WHERE t3.name = ""PVLDB"" AND t1.keyword = ""Keyword search"";","renvoyez moi les papiers dans PVLDB contenant le mot clé "" Recherche par mot clé "" ."
"SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid = t1.kid JOIN publication AS t4 ON t4.pid = t3.pid JOIN conference AS t2 ON t4.cid = t2.cid WHERE t2.name = ""VLDB"" AND t1.keyword = ""Information Retrieval"";","renvoyez moi les papiers de la conférence VLDB contenant le mot clé "" Information Retrieval "" ."
"SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t1.keyword = ""Relational Database"";","renvoyez-moi les auteurs qui ont des articles contenant le mot-clé ""Base de données relationnelle""."
"SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = ""Databases"";",renvoyez-moi toutes les organisations dans la zone Bases de données .
"SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = ""Databases"" AND t2.continent = ""North America"";",renvoyez-moi toutes les organisations de la zone Bases de données situées en « Amérique du Nord ».
"SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid WHERE t2.name = ""University of Michigan"";","rendez-moi tous les chercheurs de ""l'Université du Michigan""."
"SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = ""Databases"" AND t2.name = ""University of Michigan"";","renvoyez-moi tous les chercheurs dans le domaine des bases de données à ""l'Université du Michigan""."
"SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"";","rends - moi tous les papiers de "" l' Université du Michigan "" ."
"SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"" AND t4.year > 2000;","rendez-moi tous les papiers après 2000 à ""l'Université du Michigan""."
"SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid = t1.oid JOIN writes AS t4 ON t4.aid = t1.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN conference AS t2 ON t5.cid = t2.cid WHERE t2.name = ""VLDB"" AND t3.name = ""University of Michigan"";","renvoyez-moi tous les articles de la conférence VLDB à ""l'Université du Michigan""."
"SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t4 ON t4.aid = t1.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN journal AS t3 ON t5.jid = t3.jid WHERE t3.name = ""PVLDB"" AND t2.name = ""University of Michigan"";","retournez-moi tous les papiers dans PVLDB à ""l'Université du Michigan""."
"SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t4 ON t4.aid = t1.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN journal AS t3 ON t5.jid = t3.jid WHERE t3.name = ""PVLDB"" AND t2.name = ""University of Michigan"" AND t5.year > 2000;","renvoyez-moi tous les papiers dans PVLDB après 2000 à ""l'Université du Michigan""."
"SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did = t1.did JOIN publication AS t3 ON t3.pid = t1.pid WHERE t2.name = ""Databases"" AND t3.citation_num > 200;",renvoyez-moi l'article dans la zone Bases de données avec plus de 200 citations.
"SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.citation_num > 200;",renvoyez-moi l'article dans PVLDB avec plus de 200 citations.
"SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.citation_num > 200;",renvoyez-moi l'article à la conférence VLDB avec plus de 200 citations.
"SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"" AND t3.citation_num > 200;","renvoyez - moi l' article de "" H. V. Jagadish "" avec plus de 200 citations ."
"SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""PVLDB"" AND t4.citation_num > 200;","renvoyez - moi les articles de "" H. V. Jagadish "" sur PVLDB avec plus de 200 citations ."
"SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""VLDB"" AND t4.citation_num > 200;","renvoyez - moi les articles de "" H. V. Jagadish "" sur la conférence VLDB avec plus de 200 citations ."
SELECT title FROM publication WHERE citation_num > 200 AND YEAR > 2000;,renvoyez-moi l'article après 2000 avec plus de 200 citations.
"SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did = t1.did JOIN publication AS t3 ON t3.pid = t1.pid WHERE t2.name = ""Databases"" AND t3.citation_num > 200 AND t3.year > 2000;",renvoyez-moi l'article après 2000 dans le domaine des bases de données avec plus de 200 citations.
"SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.citation_num > 200 AND t2.year > 2000;",renvoyez-moi l'article après 2000 dans PVLDB avec plus de 200 citations.
"SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.citation_num > 200 AND t2.year > 2000;",renvoyez-moi l'article après 2000 à la conférence VLDB avec plus de 200 citations.
"SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","retournez - moi le nombre de conférences qui ont des articles de "" H. V. Jagadish "" ."
"SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","retournez - moi le nombre de revues qui contiennent des articles de "" H. V. Jagadish "" ."
"SELECT COUNT ( DISTINCT t3.title ) , t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"" GROUP BY t3.year;","retournez - moi le nombre d' articles écrits par "" H. V. Jagadish "" chaque année ."
"SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t3.title = ""Making database systems usable"";","retournez - moi le nombre d' auteurs de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT YEAR , SUM ( citation_num ) FROM publication WHERE title = ""Making database systems usable"" GROUP BY YEAR;",Renvoyez-moi le nombre de citations de « Rendre les systèmes de bases de données utilisables » chaque année.
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid = t1.cited JOIN publication AS t2 ON t2.pid = t1.citing WHERE t3.title = ""Making database systems usable"" AND t2.year < 2010;","retournez - moi le nombre de citations de "" Rendre les systèmes de bases de données utilisables "" avant 2010 ."
"SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"";","retournez - moi le nombre d' articles de "" H. V. Jagadish "" ."
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"";",retournez-moi le nombre d'articles sur la conférence VLDB.
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"";",retournez-moi le nombre d'articles sur PVLDB .
SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR > 2000;,retournez moi le nombre de papiers après 2000 .
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.year > 2000;",retournez moi le nombre d'articles sur PVLDB après 2000 .
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.year > 2000;",retournez - moi le nombre d' articles sur la conférence VLDB après 2000 .
"SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""PVLDB"";","retournez - moi le nombre d' articles de "" H. V. Jagadish "" sur PVLDB ."
"SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""VLDB"";","retournez - moi le nombre d' articles de "" H. V. Jagadish "" sur la conférence VLDB ."
"SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"" AND t3.year > 2000;","retournez - moi le nombre d' articles de "" H. V. Jagadish "" après 2000 ."
"SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""PVLDB"" AND t4.year > 2000;","retournez - moi le nombre d' articles de "" H. V. Jagadish "" sur PVLDB après 2000 ."
"SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t2.name = ""VLDB"" AND t4.year > 2000;","renvoyez - moi le nombre d' articles de "" H. V. Jagadish "" sur la conférence VLDB après 2000 ."
SELECT COUNT ( DISTINCT keyword ) FROM keyword;,retournez moi le nombre de mots clés .
"SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did = t2.did JOIN keyword AS t1 ON t1.kid = t2.kid WHERE t3.name = ""Databases"";",retournez-moi le nombre de mots-clés dans la zone Bases de données.
"SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid = t1.kid JOIN publication AS t3 ON t3.pid = t2.pid WHERE t1.keyword = ""Natural Language"";","retournez-moi le nombre d'articles qui contiennent le mot-clé ""Natural Language""."
"SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid = t1.kid JOIN publication AS t2 ON t2.pid = t3.pid WHERE t2.title = ""Making database systems usable"";","retournez-moi le nombre de mots clés de "" Rendre les systèmes de bases de données utilisables "" ."
"SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"";","retournez moi le nombre des mots clés liés à "" H. V. Jagadish "" ."
"SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t2.name = ""VLDB"";",retournez moi le nombre de mots clés dans la conférence VLDB .
"SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t3.name = ""PVLDB"";",retournez-moi le nombre de mots-clés dans PVLDB .
"SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid = t2.oid JOIN writes AS t4 ON t4.aid = t2.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN publication_keyword AS t3 ON t5.pid = t3.pid JOIN keyword AS t1 ON t3.kid = t1.kid WHERE t6.name = ""University of Michigan"";",retournez-moi le nombre de mots-clés dans les articles de « University of Michigan ».
"SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid = t1.kid JOIN publication AS t5 ON t5.pid = t3.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.keyword = ""User Study"";","renvoyez moi le numéro des papiers de "" H. V. Jagadish "" contenant le mot clé "" User Study "" ."
"SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid = t1.kid JOIN publication AS t4 ON t4.pid = t2.pid JOIN journal AS t3 ON t4.jid = t3.jid WHERE t3.name = ""PVLDB"" AND t1.keyword = ""Keyword search"";","me renvoyer le nombre d'articles dans PVLDB contenant le mot-clé ""Recherche par mot-clé""."
"SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid = t1.kid JOIN publication AS t4 ON t4.pid = t3.pid JOIN conference AS t2 ON t4.cid = t2.cid WHERE t2.name = ""VLDB"" AND t1.keyword = ""Information Retrieval"";","retournez - moi le nombre d' articles dans la conférence VLDB contenant le mot - clé "" Information Retrieval "" ."
"SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t1.keyword = ""Relational Database"";","retournez-moi le nombre d'auteurs qui ont des articles contenant le mot-clé ""base de données relationnelle""."
"SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid = t1.kid JOIN publication AS t3 ON t3.pid = t2.pid WHERE t1.keyword = ""Natural Language"";","retournez-moi le total des citations des articles contenant le mot-clé "" Natural Language """
SELECT COUNT ( DISTINCT name ) FROM organization;,renvoyez moi le numéro des organismes .
"SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent = ""North America"";","retournez - moi le numéro des organisations en "" Amérique du Nord "" ."
"SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = ""Databases"";",renvoyez-moi le nombre d'organisations dans la zone Bases de données .
"SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = ""Databases"" AND t2.continent = ""North America"";",retournez-moi le nombre d'organisations dans la zone Bases de données situées en « Amérique du Nord ».
"SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"";","retournez - moi le nombre d' articles dans "" University of Michigan "" ."
"SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t6.did JOIN domain_publication AS t2 ON t3.did = t2.did JOIN organization AS t5 ON t5.oid = t1.oid JOIN publication AS t4 ON t4.pid = t2.pid WHERE t3.name = ""Databases"" AND t5.name = ""University of Michigan"";","retournez - moi le nombre d' articles dans "" University of Michigan "" dans le domaine des bases de données ."
"SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"" AND t4.year > 2000;","retournez - moi le nombre d' articles après 2000 à "" l' Université du Michigan "" ."
"SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid = t1.oid JOIN writes AS t4 ON t4.aid = t1.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN conference AS t2 ON t5.cid = t2.cid WHERE t2.name = ""VLDB"" AND t3.name = ""University of Michigan"";","Renvoyez-moi le nombre d'articles à la conférence VLDB à ""l'Université du Michigan""."
"SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t4 ON t4.aid = t1.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN journal AS t3 ON t5.jid = t3.jid WHERE t3.name = ""PVLDB"" AND t2.name = ""University of Michigan"";","retournez - moi le nombre d' articles dans PVLDB à "" University of Michigan "" ."
"SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t4 ON t4.aid = t1.aid JOIN publication AS t5 ON t4.pid = t5.pid JOIN journal AS t3 ON t5.jid = t3.jid WHERE t3.name = ""PVLDB"" AND t2.name = ""University of Michigan"" AND t5.year > 2000;","retournez - moi le nombre d' articles dans PVLDB après 2000 à "" University of Michigan "" ."
"SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"";","renvoyez - moi le total des citations des articles dans "" University of Michigan "" ."
"SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid WHERE t2.name = ""University of Michigan"";","Renvoyez-moi le nombre de chercheurs à ""l'Université du Michigan""."
"SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = ""Databases"" AND t2.name = ""University of Michigan"";","retournez - moi le nombre de chercheurs dans le domaine des bases de données à "" l' Université du Michigan "" ."
"SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""PVLDB"";",retournez-moi le nombre d'auteurs qui ont des articles dans PVLDB .
"SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"";",retournez-moi le nombre d'auteurs qui ont des articles à la conférence VLDB.
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.year < 2000;",retournez - moi le nombre d' articles publiés sur PVLDB avant 2000 .
"SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.year < 2000;",retournez - moi le nombre d' articles publiés dans la conférence VLDB avant 2000 .
"SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"";",renvoyez-moi le nombre total de citations de tous les articles dans PVLDB .
"SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"";",renvoyez-moi les citations de chaque article dans PVLDB .
"SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.year = 2005;",retournez - moi le nombre total de citations d' articles dans PVLDB en 2005 .
"SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.year < 2005;",retournez - moi le nombre total de citations d' articles dans PVLDB avant 2005 .
"SELECT t2.year , SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" GROUP BY t2.year;",retournez-moi le nombre total de citations d'articles dans PVLDB chaque année .
"SELECT COUNT ( DISTINCT t2.title ) , t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" GROUP BY t2.year;",retournez-moi le nombre d'articles publiés dans PVLDB chaque année .
"SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"";",renvoyez-moi le total des citations de tous les articles de la conférence VLDB .
"SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"";",renvoyez-moi les citations de chaque article de la conférence VLDB .
"SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.year = 2005;",renvoyez - moi le nombre total de citations d' articles à la conférence VLDB en 2005 .
"SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.year < 2005;",retournez - moi le total des citations des articles de la conférence VLDB avant 2005 .
"SELECT t2.year , SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" GROUP BY t2.year;",renvoyez-moi le nombre total de citations d'articles à la conférence VLDB chaque année .
"SELECT COUNT ( DISTINCT t2.title ) , t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" GROUP BY t2.year;",retournez-moi le nombre d'articles publiés dans la conférence VLDB chaque année .
"SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid = t2.aid JOIN publication AS t7 ON t4.pid = t7.pid JOIN writes AS t5 ON t5.pid = t7.pid JOIN writes AS t6 ON t6.pid = t7.pid JOIN author AS t1 ON t5.aid = t1.aid JOIN author AS t3 ON t6.aid = t3.aid WHERE t1.name = ""H. V. Jagadish"" AND t3.name = ""Divesh Srivastava"";",renvoyez-moi les auteurs qui ont coopéré à la fois avec « H. V. Jagadish » et « Divesh Srivastava ».
"SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" AND t5.year > 2000;","renvoyez - moi les auteurs qui ont coopéré avec "" H. V. Jagadish "" après 2000 ."
"SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Divesh Srivastava"";",renvoyez-moi les papiers écrits par « H. V. Jagadish » et « Divesh Srivastava ».
"SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Yunyao Li"" AND t5.year > 2005;","renvoyez - moi les articles écrits par "" H. V. Jagadish "" et "" Yunyao Li "" après 2005 ."
"SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid = t4.jid JOIN writes AS t3 ON t3.pid = t6.pid JOIN writes AS t5 ON t5.pid = t6.pid JOIN author AS t1 ON t5.aid = t1.aid JOIN author AS t2 ON t3.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Yunyao Li"" AND t4.name = ""PVLDB"";","renvoyez-moi les articles écrits par "" H. V. Jagadish "" et "" Yunyao Li "" sur PVLDB ."
"SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid = t4.jid JOIN writes AS t3 ON t3.pid = t6.pid JOIN writes AS t5 ON t5.pid = t6.pid JOIN author AS t1 ON t5.aid = t1.aid JOIN author AS t2 ON t3.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Yunyao Li"" AND t4.name = ""PVLDB"" AND t6.year > 2005;","renvoyez - moi les articles écrits par "" H. V. Jagadish "" et "" Yunyao Li "" sur PVLDB après 2005 ."
"SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","renvoyez-moi les auteurs qui ont coopéré avec "" H. V. Jagadish "" ."
"SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Divesh Srivastava"" AND t5.year < 2000;","renvoyez - moi les articles écrits par "" H. V. Jagadish "" et "" Divesh Srivastava "" avant 2000 ."
"SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid = t5.citing JOIN publication AS t6 ON t6.pid = t5.cited JOIN writes AS t3 ON t3.pid = t7.pid JOIN writes AS t4 ON t4.pid = t6.pid JOIN author AS t2 ON t3.aid = t2.aid JOIN author AS t1 ON t4.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";",renvoyez-moi les auteurs qui ont cité les articles de « H. V. Jagadish ».
"SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Divesh Srivastava"";",rapportez-moi le nombre d'articles écrits par « H. V. Jagadish » et « Divesh Srivastava ».
"SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Divesh Srivastava"" AND t5.year < 2000;","retournez - moi le nombre d' articles écrits par "" H. V. Jagadish "" et "" Divesh Srivastava "" avant 2000 ."
"SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid = t2.aid JOIN publication AS t7 ON t4.pid = t7.pid JOIN writes AS t5 ON t5.pid = t7.pid JOIN writes AS t6 ON t6.pid = t7.pid JOIN author AS t1 ON t5.aid = t1.aid JOIN author AS t3 ON t6.aid = t3.aid WHERE t2.name = ""Cong Yu"" AND t1.name = ""H. V. Jagadish"" AND t3.name = ""Yunyao Li"";","retournez - moi le nombre d' articles écrits par "" H. V. Jagadish "" , "" Yunyao Li "" , et "" Cong Yu "" ."
"SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","retournez - moi le nombre d' auteurs qui ont collaboré avec "" H. V. Jagadish "" ."
"SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid = t5.citing JOIN publication AS t6 ON t6.pid = t5.cited JOIN writes AS t3 ON t3.pid = t7.pid JOIN writes AS t4 ON t4.pid = t6.pid JOIN author AS t2 ON t3.aid = t2.aid JOIN author AS t1 ON t4.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"";","retournez - moi le nombre d' auteurs qui ont cité les articles de "" H. V. Jagadish "" ."
"SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""H. V. Jagadish"" AND t1.name = ""Divesh Srivastava"" AND t5.citation_num > 200;","renvoyez - moi les articles écrits par "" H. V. Jagadish "" et "" Divesh Srivastava "" avec plus de 200 citations ."
"SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t1.keyword = ""Relational Database"" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;","retournez-moi l'auteur qui a le plus grand nombre d'articles contenant le mot-clé ""Base de données relationnelle""."
"SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t1.keyword = ""Relational Database"" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;","renvoyez-moi la conférence qui a le plus grand nombre d'articles contenant le mot-clé ""base de données relationnelle""."
"SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t1.keyword = ""Relational Database"" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;","renvoyez-moi la conférence, qui a le plus grand nombre d'articles contenant le mot-clé ""base de données relationnelle""."
"SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t1.keyword = ""Relational Database"" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;","retournez-moi la revue qui a le plus grand nombre d'articles contenant le mot-clé ""Relational Database""."
"SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t1.keyword = ""Relational Database"" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;","renvoyez-moi le journal, qui a le plus grand nombre d'articles contenant le mot-clé ""Relational Database"" ."
"SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t2.name = ""VLDB"" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;","renvoyez-moi le mot-clé, qui a été contenu par le plus grand nombre d'articles dans la conférence VLDB."
"SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t3.name = ""PVLDB"" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;","renvoyez-moi le mot-clé, qui a été contenu par le plus grand nombre d'articles dans PVLDB ."
"SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;","renvoyez-moi le mot-clé, qui a été contenu par le plus grand nombre d'articles de "" H. V. Jagadish "" ."
"SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;","renvoyez-moi l'auteur de ""l'Université du Michigan"" dont les articles ont le plus de citations totales."
"SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did = t2.did JOIN publication AS t5 ON t5.pid = t2.pid JOIN writes AS t3 ON t3.pid = t5.pid JOIN author AS t1 ON t3.aid = t1.aid JOIN organization AS t6 ON t6.oid = t1.oid WHERE t4.name = ""Databases"" AND t6.name = ""University of Michigan"" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;","renvoyez-moi l'auteur de ""l'Université du Michigan"" dont les articles dans le domaine des bases de données ont le plus grand nombre de citations."
"SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid = t2.aid JOIN publication AS t5 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t5.pid JOIN author AS t1 ON t4.aid = t1.aid WHERE t2.name = ""Divesh Srivastava"" AND t1.name = ""H. V. Jagadish"" ORDER BY t5.citation_num DESC LIMIT 1;","renvoyez - moi les articles écrits par "" H. V. Jagadish "" et "" Divesh Srivastava "" avec le plus grand nombre de citations ."
"SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title ) > 10;","renvoyez-moi les conférences, qui ont plus de 10 articles de "" H. V. Jagadish "" ."
"SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;","renvoyez-moi la conférence, qui a le plus grand nombre d'articles de "" H. V. Jagadish "" ."
"SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title ) > 10;","renvoyez-moi les revues, qui contiennent plus de 10 articles de "" H. V. Jagadish "" ."
"SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t1.name = ""H. V. Jagadish"" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;","retournez-moi le journal, qui a le plus grand nombre d'articles de "" H. V. Jagadish "" ."
SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;,renvoyez-moi l'article avec le plus de citations.
"SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did = t1.did JOIN publication AS t3 ON t3.pid = t1.pid WHERE t2.name = ""Databases"" ORDER BY t3.citation_num DESC LIMIT 1;",renvoyez-moi l'article dans la zone Bases de données avec le plus de citations.
"SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" ORDER BY t2.citation_num DESC LIMIT 1;",renvoyez-moi l'article dans PVLDB avec le plus de citations.
"SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" ORDER BY t2.citation_num DESC LIMIT 1;",renvoyez-moi l'article de la conférence VLDB avec le plus de citations.
"SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = ""H. V. Jagadish"" ORDER BY t3.citation_num DESC LIMIT 1;","renvoyez - moi l' article de "" H. V. Jagadish "" avec le plus de citations ."
SELECT title FROM publication WHERE YEAR > 2000 ORDER BY citation_num DESC LIMIT 1;,renvoyez-moi l'article après 2000 avec le plus de citations.
"SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did = t1.did JOIN publication AS t3 ON t3.pid = t1.pid WHERE t2.name = ""Databases"" AND t3.year > 2000 ORDER BY t3.citation_num DESC LIMIT 1;",renvoyez-moi l'article après 2000 dans la zone Bases de données avec le plus de citations.
"SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid = t1.jid WHERE t1.name = ""PVLDB"" AND t2.year > 2000 ORDER BY t2.citation_num DESC LIMIT 1;",renvoyez-moi l'article après 2000 dans PVLDB avec le plus de citations.
"SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid = t1.cid WHERE t1.name = ""VLDB"" AND t2.year > 2000 ORDER BY t2.citation_num DESC LIMIT 1;",renvoyez-moi l'article après 2000 à la conférence VLDB avec le plus de citations.
"SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""PVLDB"" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title ) > 10;",renvoyez-moi les auteurs qui ont plus de 10 articles dans PVLDB .
"SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid = t2.jid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""PVLDB"" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",renvoyez-moi les auteurs qui ont le plus d'articles dans PVLDB .
"SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t1.keyword = ""Relational Database"" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title ) > 10;","renvoyez-moi les auteurs qui ont plus de 10 articles contenant le mot-clé ""Base de données relationnelle""."
"SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t1.keyword = ""Relational Database"" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title ) > 60;","retournez-moi les conférences, qui ont plus de 60 papiers contenant le mot-clé ""Relational Database""."
"SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t1.keyword = ""Relational Database"" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title ) > 60;","renvoyez-moi les revues, qui ont plus de 60 articles contenant le mot-clé ""Relational Database""."
"SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t3 ON t3.pid = t4.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t2.name = ""VLDB"" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title ) > 100;","renvoyez-moi les mots-clés, qui ont été contenus par plus de 100 articles dans la conférence VLDB."
"SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid = t1.kid JOIN publication AS t2 ON t2.pid = t4.pid JOIN journal AS t3 ON t2.jid = t3.jid WHERE t3.name = ""PVLDB"" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title ) > 100;","renvoyez-moi les mots-clés, qui ont été contenus par plus de 100 articles dans PVLDB ."
"SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN writes AS t4 ON t4.pid = t3.pid JOIN author AS t2 ON t4.aid = t2.aid WHERE t2.name = ""H. V. Jagadish"" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title ) > 10;","renvoyez-moi les mots-clés, qui ont été contenus par plus de 10 articles de "" H. V. Jagadish "" ."
"SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title ) > 10;",renvoyez moi les auteurs qui ont plus de 10 papiers à la conférence VLDB .
"SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid = t2.cid JOIN writes AS t3 ON t3.pid = t4.pid JOIN author AS t1 ON t3.aid = t1.aid WHERE t2.name = ""VLDB"" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",renvoyez-moi l'auteur qui a le plus de papiers dans la conférence VLDB .
"SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid WHERE t2.name = ""University of Michigan"" GROUP BY t1.name HAVING SUM ( t4.citation_num ) > 5000;","renvoyez-moi l'auteur de ""l'Université du Michigan"" dont les articles ont plus de 5000 citations au total."
"SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t6.did JOIN organization AS t5 ON t5.oid = t1.oid JOIN writes AS t2 ON t2.aid = t1.aid JOIN publication AS t4 ON t2.pid = t4.pid WHERE t3.name = ""Databases"" AND t5.name = ""University of Michigan"" GROUP BY t1.name HAVING SUM ( t4.citation_num ) > 5000;","renvoyez - moi l' auteur dans le domaine "" Université du Michigan "" dans les bases de données dont les articles ont plus de 5000 citations au total ."
"SELECT release_year FROM movie WHERE title = ""The Imitation Game"";","De quelle année date le film "" The Imitation Game "" ?"
"SELECT release_year FROM movie WHERE title = ""The Imitation Game"";","En quelle année a été produit le film "" The Imitation Game """
"SELECT birth_year FROM actor WHERE name = ""Benedict Cumberbatch"";","En quelle année est né "" Benedict Cumberbatch "" ?"
"SELECT birth_year FROM actor WHERE name = ""Benedict Cumberbatch"";","En quelle année est né "" Benedict Cumberbatch """
"SELECT birth_year FROM actor WHERE name = ""Benedict Cumberbatch"";",Quelle est l'année de naissance de « Kevin Spacey » ?
"SELECT birth_year FROM actor WHERE name = ""Benedict Cumberbatch"";","En quelle année est né "" Kevin Spacey "" ?"
"SELECT nationality FROM actor WHERE name = ""Christoph Waltz"";","Quelle est la nationalité de l'actrice "" Christoph Waltz "" ?"
"SELECT nationality FROM actor WHERE name = ""Christoph Waltz"";","Quelle est la nationalité de l'acteur "" Christoph Waltz "" ?"
SELECT title FROM movie WHERE release_year = 2015;,Retrouvez tous les films produits en 2015
"SELECT name FROM actor WHERE birth_city = ""Tehran"";","Retrouvez tous les acteurs nés à "" Téhéran """
"SELECT name FROM actor WHERE birth_city = ""Tehran"";",Retrouvez tous les acteurs nés à Téhéran
"SELECT name FROM actor WHERE birth_city = ""Tehran"";",Quels acteurs sont nés à Téhéran
"SELECT name FROM actor WHERE nationality = ""Afghanistan"";",Trouver tous les acteurs qui viennent d'Afghanistan
"SELECT name FROM actor WHERE nationality = ""Afghanistan"";",Retrouvez tous les acteurs d'Afghanistan
"SELECT name FROM actor WHERE nationality = ""Afghanistan"";",Donnez-moi le nom de tous les acteurs d'Afghanistan
SELECT name FROM actor WHERE birth_year = 1984;,Retrouvez tous les acteurs nés en 1984
"SELECT birth_city FROM director WHERE name = ""director_name0"";","Où est le lieu de naissance de "" Kevin Spacey """
"SELECT birth_city FROM director WHERE name = ""director_name0"";","Dans quelle ville est né "" Kevin Spacey "" ?"
"SELECT nationality FROM director WHERE name = ""director_name0"";","Quelle est la nationalité de "" Kevin Spacey "" ?"
"SELECT budget FROM movie WHERE title = ""Finding Nemo"";","A combien s'élevait le budget de "" Le Monde de Nemo """
"SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Steven Spielberg"" AND t3.release_year > 2006;","Retrouvez tous les films réalisés par "" Steven Spielberg "" après 2006"
"SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t3.title = ""James Bond"";",Qui est le réalisateur du film « James Bond » ?
"SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t3.title = ""James Bond"";",Qui a réalisé le film « James Bond » ?
"SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t3.title = ""James Bond"";","Liste des réalisateurs "" James Bond """
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t2.role = ""Alan Turing"" AND t3.title = ""The Imitation Game"";",Retrouvez l'acteur qui a joué « Alan Turing » dans le film « The Imitation Game »
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t2.role = ""Alan Turing"" AND t3.title = ""The Imitation Game"";",Qui a joué « Alan Turing » dans le film « The Imitation Game » ?
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t2.role = ""Alan Turing"" AND t3.title = ""The Imitation Game"";","Qui était l'acteur qui a joué ""Alan Turing"" dans le film ""The Imitation Game"" ?"
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t2.role = ""Alan Turing"" AND t3.title = ""The Imitation Game"";","Qui interprète ""Alan Turing"" dans le film ""The Imitation Game"" ?"
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t2.role = ""Alan Turing"" AND t3.title = ""The Imitation Game"";",Qui est l'acteur jouant « Alan Turing » dans « The Imitation Game » ?
"SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid = t1.gid JOIN movie AS t3 ON t3.mid = t1.msid WHERE t3.title = ""Jurassic Park"";",Quel est le genre du film « Jurassic Park » ?
"SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t3.release_year = 2015 AND t3.title = ""Joy"";",Qui était le réalisateur du film Joy de 2015 ?
"SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid = t1.mid JOIN writer AS t2 ON t3.wid = t2.wid WHERE t2.name = ""Matt Damon"";","Retrouvez tous les films écrits par "" Matt Damon """
"SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid = t3.msid JOIN producer AS t1 ON t1.pid = t3.pid JOIN written_by AS t5 ON t5.msid = t2.mid JOIN writer AS t4 ON t5.wid = t4.wid WHERE t1.name = ""Woody Allen"" AND t4.name = ""Woody Allen"";","Retrouvez tous les films écrits et produits par "" Woody Allen """
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Robin Wright"";","Retrouvez tous les films avec "" Robin Wright """
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Robin Wright"";","Quels sont tous les films avec "" Robin Wright "" ?"
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Robin Wright"";","Retrouvez tous les films dans lesquels "" Robin Wright "" apparaît"
"SELECT budget FROM movie WHERE release_year = 2007 AND title = ""Juno"";",Quel était le budget du film Juno de 2007 ?
"SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid = t1.gid JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.genre = ""Sci-Fi"" AND t3.release_year = 2010;",Retrouvez toutes les Sci-Fi produites en 2010
"SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid = t1.gid JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.genre = ""Sci-Fi"" AND t3.release_year = 2010;",Lister tous les films de science-fiction sortis en 2010
"SELECT name FROM actor WHERE birth_city = ""Austin"" AND birth_year > 1980;","Retrouvez tous les acteurs nés à "" Austin "" après 1980"
"SELECT name FROM actor WHERE birth_city = ""Austin"" AND birth_year > 1980;",Qui sont les acteurs nés à « Austin » après 1980 ?
"SELECT name FROM actor WHERE birth_city = ""Austin"" AND birth_year > 1980;",Retrouvez tous les acteurs d'Austin nés après 1980
"SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.birth_city = ""Los Angeles"";","Retrouvez tous les films des réalisateurs nés à "" Los Angeles """
"SELECT name FROM actor WHERE birth_city = ""New York City"" AND birth_year = 1984;","Retrouvez tous les acteurs nés à "" New York City "" en 1984"
"SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid = t1.id JOIN movie AS t3 ON t2.msid = t3.mid WHERE t1.keyword = ""nuclear weapons"";",Trouver tous les films sur les armes nucléaires
"SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid = t1.id JOIN movie AS t3 ON t2.msid = t3.mid WHERE t1.keyword = ""nuclear weapons"";",Quels sont les films liés aux armes nucléaires
"SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Alfred Hitchcock"";","Quels films a réalisé "" Alfred Hitchcock "" ?"
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN directed_by AS t2 ON t4.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t1.name = ""Taraneh Alidoosti"" AND t3.name = ""Asghar Farhadi"";","Retrouvez tous les films réalisés par "" Asghar Farhadi "" et mettant en vedette "" Taraneh Alidoosti """
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN directed_by AS t2 ON t4.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t1.name = ""Taraneh Alidoosti"" AND t3.name = ""Asghar Farhadi"";",Quels sont tous les films réalisés par « Asghar Farhadi » avec « Taraneh Alidoosti » ?
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN directed_by AS t2 ON t4.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t1.name = ""Taraneh Alidoosti"" AND t3.name = ""Asghar Farhadi"";",Combien y a-t-il de films réalisés par « Asghar Farhadi » et mettant en vedette « Taraneh Alidoosti » ?
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN directed_by AS t2 ON t4.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t1.name = ""Taraneh Alidoosti"" AND t3.name = ""Asghar Farhadi"";","Listez tous les films réalisés par "" Asghar Farhadi "" dans lesquels "" Taraneh Alidoosti "" a joué"
"SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid = t3.pid JOIN tv_series AS t2 ON t2.sid = t3.msid WHERE t1.name = ""Shonda Rhimes"";",Quelles sont toutes les séries télé créées par « Shonda Rhimes » ?
"SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN tv_series AS t2 ON t2.sid = t3.msid WHERE t3.role = ""Olivia Pope"" AND t2.title = ""Scandal"";",Qui joue « Olivia Pope » dans la série Scandal ?
"SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid = t1.mid JOIN writer AS t2 ON t3.wid = t2.wid WHERE t1.title = ""The Truman Show"";","Qui est l'auteur du film "" The Truman Show """
"SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid = t1.mid JOIN writer AS t2 ON t3.wid = t2.wid WHERE t1.title = ""The Truman Show"";","Qui est l'auteur de "" The Truman Show """
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN tv_series AS t2 ON t2.sid = t3.msid WHERE t1.name = ""Scott Foley"";",Quelles sont les séries mettant en vedette « Scott Foley » ?
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN tv_series AS t2 ON t2.sid = t3.msid WHERE t1.name = ""Scott Foley"";",Quelles sont les séries dans lesquelles « Scott Foley » est acteur ?
"SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid = t1.aid JOIN movie AS t5 ON t5.mid = t4.msid JOIN directed_by AS t2 ON t5.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t1.name = ""Kate Winslet"";","Retrouvez les réalisateurs de tous les films mettant en vedette "" Kate Winslet """
"SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid = t2.aid JOIN movie AS t5 ON t5.mid = t3.msid JOIN made_by AS t4 ON t5.mid = t4.msid JOIN producer AS t1 ON t1.pid = t4.pid WHERE t2.name = ""Kate Winslet"";","Retrouvez les producteurs de tous les films dans lesquels "" Kate Winslet "" est acteur"
"SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN tv_series AS t3 ON t3.sid = t1.msid WHERE t3.release_year = 2013 AND t3.title = ""House of Cards"";",Qui est le réalisateur de la série télévisée « House of Cards » de 2013 ?
"SELECT name FROM actor WHERE birth_city = ""Austin"" AND gender = ""female"";",Retrouvez toutes les actrices d'Austin
"SELECT name FROM actor WHERE birth_year > 1980 AND nationality = ""Italy"";",Retrouvez tous les acteurs italiens nés après 1980
"SELECT name FROM actor WHERE birth_city = ""New York City"" AND birth_year > 1980 AND gender = ""female"";","Retrouvez toutes les actrices nées à "" New York City "" après 1980"
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t1.gender = ""female"" AND t3.title = ""Saving Private Ryan"";",Retrouvez toutes les actrices du film « Il faut sauver le soldat Ryan »
"SELECT name FROM director WHERE nationality = ""Afghanistan"";",Retrouvez tous les réalisateurs qui viennent d'Afghanistan
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t3.title = ""Camp X-Ray"";","Retrouvez les acteurs qui ont joué dans le film ""Camp X-Ray"""
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t1.nationality = ""Canada"" AND t3.title = ""James Bond"";","Retrouvez tous les acteurs du Canada qui ont joué dans les films "" James Bond """
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Rowan Atkinson"" AND t3.role = ""Mr. Bean"";","retrouvez tous les films dans lesquels "" Rowan Atkinson "" a joué le rôle de "" Mr. Bean """
"SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t3.title = ""The Past"";","où est le réalisateur de "" The Past "" de"
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid WHERE t2.role = ""Mr. Bean"";","qui a joué le rôle de "" Mr. Bean """
"SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did = t2.did JOIN movie AS t4 ON t4.mid = t2.msid JOIN classification AS t1 ON t4.mid = t1.msid JOIN genre AS t3 ON t3.gid = t1.gid WHERE t5.name = ""Asghar Farhadi"";","quels sont les genres de films réalisés par "" Asghar Farhadi """
"SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid = t2.msid WHERE t2.role = ""Daffy Duck"";","Quel film avait le personnage "" Daffy Duck """
"SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t3.title = ""Daddy Long Legs"";","Quels sont les rôles principaux dans le film "" Daddy Long Legs """
"SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did = t2.did JOIN movie AS t4 ON t4.mid = t2.msid JOIN tags AS t5 ON t5.msid = t4.mid JOIN keyword AS t1 ON t5.kid = t1.id WHERE t1.keyword = ""nuclear weapons"";",Lister tous les réalisateurs de films sur les armes nucléaires
"SELECT COUNT ( DISTINCT t2.title ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Jennifer Aniston"" AND t2.release_year > 2010;","Quel est le nombre de films dans lesquels "" Jennifer Aniston "" a joué après 2010 ?"
"SELECT COUNT ( DISTINCT t1.name ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t3.title = ""Saving Private Ryan"";",Quel est le nombre d'acteurs dans le film « Il faut sauver le soldat Ryan » ?
"SELECT COUNT ( DISTINCT t1.name ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t3.title = ""Saving Private Ryan"";","Combien y a-t-il d'acteurs dans le film "" Il faut sauver le soldat Ryan "" ?"
"SELECT COUNT ( DISTINCT t3.title ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Steven Spielberg"";","Combien de films "" Steven Spielberg "" a-t-il réalisé ?"
SELECT COUNT ( DISTINCT title ) FROM movie WHERE release_year = 2013;,Combien de films ont été produits en 2013 ?
SELECT COUNT ( DISTINCT title ) FROM movie WHERE release_year = 2013;,Quel est le nombre de films produits en 2013 ?
"SELECT COUNT ( DISTINCT t3.title ) , t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Woody Allen"" GROUP BY t3.release_year;",Quel est le nombre de films réalisés par « Woody Allen » par an ?
"SELECT COUNT ( DISTINCT t2.title ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Shahab Hosseini"";",Dans combien de films « Shahab Hosseini » a-t-il joué ?
"SELECT COUNT ( DISTINCT t2.title ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Shahab Hosseini"";","Quel est le nombre de films dans lesquels "" Shahab Hosseini "" a joué ?"
"SELECT COUNT ( DISTINCT t2.title ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Shahab Hosseini"";","Quel est le nombre de films avec "" Shahab Hosseini "" ?"
"SELECT COUNT ( DISTINCT t2.title ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Shahab Hosseini"";","Dans combien de films "" Shahab Hosseini "" a-t-il joué"
"SELECT COUNT ( DISTINCT name ) FROM actor WHERE birth_city = ""Los Angeles"" AND birth_year > 2000;",Combien d'acteurs sont nés à « Los Angeles » après 2000 ?
"SELECT COUNT ( DISTINCT t2.title ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Humphrey Bogart"" AND t2.release_year < 1942;","Dans combien de films "" Humphrey Bogart "" a-t-il joué avant 1942 ?"
"SELECT COUNT ( DISTINCT t2.title ) , t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.name = ""Brad Pitt"" GROUP BY t2.release_year;","Quel est le nombre de films dans lesquels "" Brad Pitt "" joue par an ?"
"SELECT COUNT ( DISTINCT t3.title ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid = t1.id JOIN movie AS t3 ON t2.msid = t3.mid WHERE t1.keyword = ""Iraq war"" AND t3.release_year = 2015;",Combien de films sur la guerre en Irak ont ​​été produits en 2015 ?
"SELECT COUNT ( DISTINCT t3.title ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid = t1.id JOIN movie AS t3 ON t2.msid = t3.mid WHERE t1.keyword = ""Persians"" AND t3.release_year > 1990;",Combien de films sur les Perses sont sortis après 1990 ?
"SELECT COUNT ( DISTINCT t3.title ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Quentin Tarantino"" AND t3.release_year > 2010;","Combien de films "" Quentin Tarantino "" a-t-il réalisé après 2010 ?"
"SELECT COUNT ( DISTINCT t3.title ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Quentin Tarantino"" AND t3.release_year < 2010;","Combien de films "" Quentin Tarantino "" a-t-il réalisé avant 2010 ?"
"SELECT COUNT ( DISTINCT t4.title ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did = t2.did JOIN movie AS t4 ON t4.mid = t2.msid JOIN made_by AS t5 ON t4.mid = t5.msid JOIN producer AS t1 ON t1.pid = t5.pid WHERE t3.name = ""Quentin Tarantino"" AND t4.release_year < 2010 AND t4.release_year > 2002;","Combien de films "" Quentin Tarantino "" a-t-il réalisé avant 2002 et après 2010 ?"
"SELECT COUNT ( DISTINCT name ) FROM actor WHERE birth_city = ""New York City"" AND birth_year > 1980 AND gender = ""female"";",Combien d'actrices sont nées à « New York City » après 1980 ?
"SELECT COUNT ( DISTINCT t1.name ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid = t1.aid JOIN movie AS t5 ON t5.mid = t4.msid JOIN directed_by AS t2 ON t5.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t1.nationality = ""Iran"" AND t3.name = ""Jim Jarmusch"";","trouver le nombre d'acteurs iraniens qui ont joué dans les films de "" Jim Jarmusch """
"SELECT COUNT ( DISTINCT t1.name ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t1.nationality = ""China"" AND t3.title = ""Rush Hour 3"";","Combien d'acteurs chinois ont joué dans "" Rush Hour 3 """
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN CAST AS t3 ON t4.mid = t3.msid JOIN actor AS t2 ON t3.aid = t2.aid WHERE t1.name = ""Woody Strode"" AND t2.name = ""Jason Robards"";","Trouvez tous les films mettant en vedette à la fois "" Woody Strode "" et "" Jason Robards """
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN CAST AS t3 ON t4.mid = t3.msid JOIN actor AS t2 ON t3.aid = t2.aid WHERE t1.name = ""Woody Strode"" AND t2.name = ""Jason Robards"";","Retrouvez tous les films avec "" Woody Strode "" et "" Jason Robards """
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN CAST AS t3 ON t4.mid = t3.msid JOIN actor AS t2 ON t3.aid = t2.aid WHERE t1.name = ""Woody Strode"" AND t2.name = ""Jason Robards"";","Retrouvez tous les films mettant en scène à la fois "" Woody Strode "" et "" Jason Robards """
"SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid = t1.aid JOIN movie AS t4 ON t4.mid = t5.msid JOIN CAST AS t3 ON t4.mid = t3.msid JOIN actor AS t2 ON t3.aid = t2.aid WHERE t1.name = ""Woody Strode"" AND t2.name = ""Jason Robards"";","Retrouvez tous les films avec "" Jason Robards "" et "" Woody Strode """
"SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid = t1.aid JOIN movie AS t5 ON t5.mid = t4.msid JOIN CAST AS t3 ON t5.mid = t3.msid JOIN actor AS t2 ON t3.aid = t2.aid WHERE t2.name = ""Tom Hanks"";","Retrouvez tous les acteurs ayant joué dans le même film que "" Tom Hanks """
"SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did = t2.did JOIN directed_by AS t1 ON t5.did = t1.did JOIN movie AS t4 ON t4.mid = t2.msid JOIN movie AS t3 ON t3.mid = t1.msid WHERE t4.title = ""Revolutionary Road"";",Quels films ont le même réalisateur que le film « Revolutionary Road » ?
SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid = t1.gid JOIN movie AS t3 ON t3.mid = t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre ) DESC LIMIT 1;,Trouvez le film qui est classé dans le plus grand nombre de genres
"SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid = t1.aid JOIN movie AS t2 ON t2.mid = t3.msid WHERE t1.nationality = ""China"" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name ) DESC LIMIT 1;",quel film compte le plus d'acteurs chinois ?
"SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid = t1.aid JOIN movie AS t5 ON t5.mid = t4.msid JOIN directed_by AS t2 ON t5.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did WHERE t3.name = ""Quentin Tarantino"" ORDER BY t5.release_year DESC LIMIT 1;","Retrouvez les acteurs qui ont joué dans le dernier film de "" Quentin Tarantino """
"SELECT t3.budget , t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Quentin Tarantino"" ORDER BY t3.release_year DESC LIMIT 1;","Retrouvez le nom et le budget du dernier film de "" Quentin Tarantino """
"SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = ""Jim Jarmusch"" ORDER BY t3.release_year DESC LIMIT 1;","Quel est le dernier film de "" Jim Jarmusch """
SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did = t2.did JOIN movie AS t4 ON t4.mid = t2.msid JOIN made_by AS t5 ON t4.mid = t5.msid JOIN producer AS t1 ON t1.pid = t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name ) DESC LIMIT 1;,Quel producteur a travaillé avec le plus de réalisateurs ?
"SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t1.name = ""Gabriele Ferzetti"" ORDER BY t3.release_year DESC LIMIT 1;","Retrouvez le dernier film dans lequel "" Gabriele Ferzetti "" a joué"
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.name = ""buttercup kitchen"";",combien y a-t-il de cuisine renoncule à san francisco ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""chinese"";",Combien de restaurants chinois y a-t-il dans la baie ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""chinese"";",Combien d'endroits pour la cuisine chinoise y a-t-il dans la région de la baie ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""chinese"";",Combien y a-t-il d'endroits chinois dans la région de la baie ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""chinese"";",Combien de places pour les chinois y a-t-il dans la région de la baie ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.county = ""santa cruz county"" AND t1.name = ""jamerican cuisine"";",combien y a-t-il de cuisine américaine dans le comté de santa cruz ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t1.name = ""jamerican cuisine"";",où est la cuisine américaine ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",quel est le meilleur restaurant français de san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Quel est le meilleur français à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Quel est le meilleur endroit à San Francisco pour la cuisine française ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Donnez-moi le meilleur endroit à San Francisco pour la cuisine française ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Où est le meilleur français à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Donnez-moi le meilleur français de San Francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Où est le meilleur restaurant français à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Donnez-moi le meilleur restaurant de San Francisco pour la cuisine française ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Donnez-moi le meilleur restaurant français de San Francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Quel est le meilleur restaurant de san francisco pour la cuisine française ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.food_type = ""french"" );",Quel est le meilleur restaurant de San Francisco pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.name = ""denny"";",Où est Denny dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"" AND t1.rating > 2.5;",quels sont les bons restaurants sur bethel island rd à bethel island ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"" AND t1.rating > 2.5;",donnez-moi de bons restaurants sur l'île de bethel rd dans l'île de bethel ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"" AND t1.rating > 2.5;",donnez-moi un bon restaurant sur l'île de bethel rd à l'île de bethel ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"" AND t1.rating > 2.5;",qu'est-ce qu'un bon restaurant sur bethel island rd à bethel island ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"";",où peut-on trouver un restaurant à alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"";",Donnez-moi un restaurant à Alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"";",où peut-on trouver des restaurants à alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"";",où est un restaurant à alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"";",Donnez-moi des restaurants à Alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t1.food_type = ""french"" AND t1.rating > 2.5;",Donnez-moi des restaurants bons pour la cuisine française ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t1.food_type = ""french"" AND t1.rating > 2.5;",Où sont les bons restaurants pour la cuisine française ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""palo alto"" AND t1.food_type = ""french"";",Combien y a-t-il d'endroits pour la cuisine française à Palo Alto ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""palo alto"" AND t1.food_type = ""french"";",combien de restaurants français y a-t-il à palo alto ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""palo alto"" AND t1.food_type = ""french"";",Combien de restaurants français y a-t-il à palo alto ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""palo alto"" AND t1.food_type = ""french"";",combien de places pour le français y a-t-il à palo alto ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.county = ""yolo county"" AND t1.food_type = ""italian"";",combien de restaurants italiens y a-t-il dans le comté de yolo ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""french"";",Où puis-je manger de la cuisine française en vue sur la montagne ?
"SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.name = ""denny"";",Combien y a-t-il de denny dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"" AND t1.rating > 2.5;",Donnez-moi un bon restaurant à Alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"" AND t1.rating > 2.5;",quels sont les bons restaurants à alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"" AND t1.rating > 2.5;",qu'est-ce qu'un bon restaurant à alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""alameda"" AND t1.rating > 2.5;",Donnez-moi de bons restaurants à Alameda ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon restaurant sur buchanan à san francisco pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où sont de bons arabes sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon restaurant arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",quels sont les bons endroits pour l'arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donne moi un bon arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi des restaurants bons pour la cuisine arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi une bonne place sur buchanan à san francisco pour la nourriture arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon endroit sur buchanan à san francisco pour la nourriture arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où puis-je manger de la nourriture arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi de bons endroits sur buchanan à san francisco pour la nourriture arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un restaurant arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi un restaurant sur buchanan à san francisco qui sert de la bonne cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi un bon restaurant sur buchanan à san francisco pour la nourriture arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un restaurant sur buchanan à san francisco qui sert de la bonne cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi de bons restaurants sur buchanan à san francisco pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi de bons endroits pour l'arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où puis-je manger de la bonne nourriture arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où sont quelques bons restaurants pour la cuisine arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où sont quelques bons endroits pour l'arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi un bon restaurant arabe sur buchanan à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t2.street_name = ""buchanan"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donne moi de bons arabes sur buchanan à san francisco ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""french"";",Où puis-je manger de la cuisine française dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"";",donnez-moi des restaurants sur l'île de bethel rd dans l'île de bethel ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"";",donnez-moi un restaurant sur l'île de bethel rd à l'île de bethel ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"";",où peut-on trouver un restaurant sur bethel island rd à bethel island ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""bethel island"" AND t2.street_name = ""bethel island rd"";",où peut-on trouver des restaurants sur bethel island rd à bethel island ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",quel est le meilleur restaurant de la baie pour la cuisine américaine ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Où est le meilleur restaurant de la région de la baie pour la cuisine américaine ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Quel est le meilleur restaurant de la région de la baie pour la cuisine américaine ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",quel est le meilleur restaurant américain de la baie ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",quel est le meilleur restaurant américain de la baie ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Quel est le meilleur américain de la baie ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Donnez-moi le meilleur restaurant de la baie pour la cuisine américaine ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Donnez-moi le meilleur restaurant de la région de la baie pour la cuisine américaine ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Quel est le meilleur restaurant de la région de la baie pour la cuisine américaine ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",où est le meilleur américain de la baie ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",Donnez-moi le meilleur américain de la baie ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" AND t1.rating = ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = ""bay area"" AND t1.food_type = ""american"" );",donnez-moi le meilleur restaurant américain de la baie ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Donnez-moi quelques bons restaurants pour la cuisine française dans la région de Yosemite et Mono Lake ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Quels sont les bons endroits dans la région de Yosemite et Mono Lake pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Donnez-moi un bon restaurant dans la région de Yosemite et Mono Lake pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Donnez-moi un bon restaurant français dans la région de Yosemite et Mono Lake ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",où est un bon endroit dans la région de yosemite et mono lake pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Où sont les bons restaurants pour la cuisine française dans la région de Yosemite et Mono Lake ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",donnez-moi une bonne place dans la région de yosemite et du lac mono pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Où est un bon restaurant dans la région de Yosemite et Mono Lake pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Quels sont les bons restaurants dans la région de Yosemite et Mono Lake pour la cuisine française ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",où est un bon restaurant français dans la région de yosemite et mono lake ?
"SELECT t3.house_number , t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = ""yosemite and mono lake area"" AND t1.food_type = ""french"" AND t1.rating > 2.5;",Où puis-je manger de la bonne cuisine française dans la région de Yosemite et Mono Lake ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Où sont quelques bons restaurants pour la cuisine arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Quels sont les bons endroits avec vue sur la montagne pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Où sont les bons restaurants arabes avec vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",montrez-moi un bon restaurant arabe avec vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi un bon arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi un bon restaurant arabe avec vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",donnez-moi une bonne place en vue sur la montagne pour la nourriture arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Où sont les bons arabes à Mountain View ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un restaurant avec vue sur la montagne qui sert une bonne cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Quels sont les bons restaurants avec vue sur la montagne pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi quelques bons restaurants pour la cuisine arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Où puis-je manger de la bonne nourriture arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi de bons endroits pour l'arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Où est un bon arabe à Mountain View ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi un restaurant avec vue sur la montagne qui sert de la bonne cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi de bons restaurants arabes avec vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Où sont les bons endroits pour l'arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi de bons arabes en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Donnez-moi un bon restaurant avec vue sur la montagne pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon restaurant arabe avec vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",Quels sont les bons endroits pour l'arabe en vue sur la montagne ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon restaurant avec vue sur la montagne pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""mountain view"" AND t1.food_type = ""arabic"" AND t1.rating > 2.5;",où est un bon endroit avec vue sur la montagne pour la cuisine arabe ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.name = ""jamerican cuisine"";",où puis-je trouver une cuisine américaine à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.name = ""jamerican cuisine"";",où est la cuisine américaine à san francisco ?
"SELECT t2.house_number , t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = ""san francisco"" AND t1.name = ""jamerican cuisine"";",où est une cuisine américaine à san francisco ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""bay area"" );",Où pouvons-nous trouver des restaurants dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""bay area"" );",Donnez-moi des restaurants dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""bay area"" );",donnez-moi un restaurant dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""bay area"" );",Où puis-je trouver un restaurant dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""region0"" ) AND t1.rating > 2.5;",donnez-moi un bon restaurant dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""region0"" ) AND t1.rating > 2.5;",Quels sont les bons restaurants dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""region0"" ) AND t1.rating > 2.5;",donnez-moi quelques bons restaurants dans la région de la baie ?
"SELECT t2.house_number , t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id = t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region = ""region0"" ) AND t1.rating > 2.5;",qu'est-ce qu'un bon restaurant dans la région de la baie ?
SELECT count(*) FROM singer,Combien avons-nous de chanteurs ?
SELECT count(*) FROM singer,Quel est le nombre total de chanteurs ?
SELECT count(*) FROM singer,Combien y a-t-il de chanteurs ?
SELECT count(*) FROM singer,Quel est le nombre de chanteurs ?
"SELECT name , country , age FROM singer ORDER BY age DESC","Afficher le nom, le pays, l'âge de tous les chanteurs classés par âge du plus âgé au plus jeune."
"SELECT name , country , age FROM singer ORDER BY age DESC","Quels sont les noms, pays et âges de chaque chanteur par ordre décroissant d'âge ?"
"SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'","Quel est l'âge moyen, minimum et maximum de tous les chanteurs français ?"
"SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'","Quel est l'âge moyen, minimum et maximum de tous les chanteurs français ?"
"SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",Indiquez le nom et l'année de sortie de la chanson du plus jeune chanteur.
"SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1",Quels sont les noms et les années de sortie de toutes les chansons du plus jeune chanteur ?
SELECT DISTINCT country FROM singer WHERE age > 20,Quels sont tous les pays distincts d'où viennent les chanteurs de plus de 20 ans ?
SELECT DISTINCT country FROM singer WHERE age > 20,Quels sont les différents pays avec des chanteurs de plus de 20 ans ?
"SELECT country , count(*) FROM singer GROUP BY country",Afficher tous les pays et le nombre de chanteurs dans chaque pays.
"SELECT country , count(*) FROM singer GROUP BY country",Combien y a-t-il de chanteurs de chaque pays ?
SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),Énumérez tous les noms de chansons par des chanteurs au-dessus de l'âge moyen.
SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),Quels sont tous les noms de chansons de chanteurs plus âgés que la moyenne ?
"SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",Afficher l'emplacement et le nom de tous les stades d'une capacité comprise entre 5000 et 10000.
"SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",Quels sont les emplacements et les noms de toutes les stations d'une capacité comprise entre 5000 et 10000 ?
"SELECT avg(capacity) , max(capacity) FROM stadium",Quelle est la capacité moyenne et maximale de tous les stades ?
"SELECT avg(capacity) , max(capacity) FROM stadium",Quelles sont les capacités moyennes et maximales de toutes les stations ?
"SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",Quel est le nom et la capacité du stade avec la fréquentation moyenne la plus élevée ?
"SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1",Quel est le nom et la capacité du stade avec la fréquentation moyenne la plus élevée ?
SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,Combien y a-t-il de concerts en 2014 ou 2015 ?
SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,Combien de concerts ont eu lieu en 2014 ou 2015 ?
"SELECT T2.name , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",Afficher le nom du stade et le nombre de concerts dans chaque stade.
"SELECT T2.name , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id","Pour chaque stade, combien de concerts s'y déroulent ?"
"SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",Afficher le nom et la capacité du stade avec le plus grand nombre de concerts en 2014 ou après.
"SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",Quel est le nom et la capacité du stade avec le plus de concerts après 2013 ?
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,Quelle année compte le plus de concerts ?
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,Quelle est l'année où il y a eu le plus de concerts ?
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),Afficher les noms des stades sans aucun concert.
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),Comment s'appellent les stades sans concerts ?
SELECT country FROM singer WHERE age > 40 INTERSECT SELECT country FROM singer WHERE age < 30,Afficher les pays d'où proviennent un chanteur de plus de 40 ans et un chanteur de moins de 30 ans.
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year = 2014,Afficher les noms de tous les stades à l'exception des stades ayant un concert en 2014.
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year = 2014,Quels sont les noms de tous les stades qui n'ont pas donné de concert en 2014 ?
"SELECT T2.concert_name , T2.theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id",Afficher le nom et le thème de tous les concerts et le nombre de chanteurs dans chaque concert.
"SELECT T2.concert_name , T2.theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id","Quels sont les noms, les thèmes et le nombre de chanteurs pour chaque concert ?"
"SELECT T2.name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Énumérez les noms des chanteurs et le nombre de concerts pour chaque chanteur.
"SELECT T2.name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",Quels sont les noms des chanteurs et le nombre de concerts pour chacun ?
SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014,Listez tous les noms de chanteurs dans les concerts de l'année 2014.
SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014,Comment s'appellent les chanteurs qui ont donné un concert en 2014 ?
"SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'","quel est le nom et la nation du chanteur qui a une chanson avec ""Hey"" dans son nom ?"
"SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'","Quel est le nom et le pays d'origine de chaque chanteur qui a une chanson avec le mot ""Hey"" dans son titre ?"
"SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015",Trouvez le nom et l'emplacement des stades où certains concerts ont eu lieu dans les années 2014 et 2015.
"SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015",Quels sont les noms et les emplacements des stades qui ont accueilli des concerts en 2014 et 2015 ?
SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1,Trouvez le nombre de concerts qui se sont déroulés dans le stade avec la plus grande capacité.
SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1,Quel est le nombre de concerts qui ont eu lieu dans le stade avec la plus grande capacité ?
SELECT count(*) FROM pets WHERE weight > 10,Trouvez le nombre d'animaux dont le poids est supérieur à 10.
SELECT count(*) FROM pets WHERE weight > 10,Combien d'animaux ont un poids supérieur à 10 ?
SELECT weight FROM pets ORDER BY pet_age LIMIT 1,Trouvez le poids du plus jeune chien.
SELECT weight FROM pets ORDER BY pet_age LIMIT 1,Combien pèse le plus jeune chien ?
"SELECT max(weight) , petType FROM pets GROUP BY petType",Trouvez le poids maximum pour chaque type d'animal. Indiquez le poids maximum et le type d'animal.
"SELECT max(weight) , petType FROM pets GROUP BY petType",Indiquez le poids maximum et le type pour chaque type d'animal de compagnie.
SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,Trouvez le nombre d'animaux domestiques appartenant à des étudiants âgés de plus de 20 ans.
SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,Combien d'animaux de compagnie sont possédés par des étudiants âgés de plus de 20 ans ?
SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',Trouvez le nombre de chiens de compagnie élevés par des étudiantes (de sexe F).
SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',Combien d'animaux de compagnie chiens sont élevés par les étudiantes ?
SELECT count(DISTINCT pettype) FROM pets,Trouvez le nombre de types distincts d'animaux de compagnie.
SELECT count(DISTINCT pettype) FROM pets,Combien y a-t-il de types d'animaux de compagnie différents ?
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog',Trouvez le prénom des élèves qui ont un chat ou un chien.
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog',Quels sont les prénoms de chaque élève qui a un chat ou un chien comme animal de compagnie ?
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog',Trouvez le nom des élèves qui ont à la fois des chats et des chiens.
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog',Quels sont les prénoms des élèves qui ont à la fois des chats et des chiens comme animaux de compagnie ?
"SELECT major , age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",Trouvez la majeure et l'âge des élèves qui n'ont pas de chat.
"SELECT major , age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')","Quelle majeure est chaque étudiant qui ne possède pas de chat comme animal de compagnie, et aussi quel âge ont-ils ?"
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat',Trouvez l'identifiant des étudiants qui n'ont pas de chat.
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat',Quels sont les identifiants des élèves qui ne possèdent pas de chat comme animal de compagnie ?
"SELECT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",Trouvez le prénom et l'âge des élèves qui ont un chien mais qui n'ont pas de chat comme animal de compagnie.
"SELECT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",Quel est le prénom de chaque élève qui a un chien mais qui n'a pas de chat ?
"SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",Trouvez le type et le poids du plus jeune animal de compagnie.
"SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1",Quel type d'animal de compagnie est l'animal le plus jeune et combien pèse-t-il ?
"SELECT petid , weight FROM pets WHERE pet_age > 1",Trouvez l'identifiant et le poids de tous les animaux dont l'âge est supérieur à 1.
"SELECT petid , weight FROM pets WHERE pet_age > 1",Quel est l'identifiant et le poids de chaque animal de compagnie âgé de plus d'un an ?
"SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",Trouvez l'âge moyen et maximum pour chaque type d'animal.
"SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype",Quel est l'âge moyen et maximum pour chaque type d'animal ?
"SELECT avg(weight) , pettype FROM pets GROUP BY pettype",Trouvez le poids moyen de chaque type d'animal.
"SELECT avg(weight) , pettype FROM pets GROUP BY pettype",Quel est le poids moyen de chaque type d'animal ?
"SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",Trouvez le prénom et l'âge des élèves qui ont un animal de compagnie.
"SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid",Quels sont les différents prénoms et âges des élèves qui ont des animaux de compagnie ?
SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith',Trouvez l'identifiant de l'animal appartenant à l'étudiant dont le nom de famille est « Smith ».
SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith',"Quel est l'identifiant de l'animal de compagnie appartenant à l'étudiant dont le nom de famille est ""Smith"" ?"
"SELECT count(*) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid",Trouvez le nombre d'animaux de compagnie pour chaque élève qui a un animal de compagnie et une carte d'étudiant.
"SELECT count(*) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid","Pour les élèves qui ont des animaux de compagnie, combien d'animaux de compagnie chaque élève possède-t-il ?"
"SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1",Trouvez le prénom et le sexe de l'élève qui a plus d'un animal de compagnie.
"SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1",Quels sont le prénom et le sexe de tous les élèves qui ont plus d'un animal de compagnie ?
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat',Trouvez le nom de famille de l'élève qui a un chat de 3 ans.
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat',Quel est le nom de famille de l'élève qui a un chat de 3 ans ?
SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid),Trouvez l'âge moyen des élèves qui n'ont pas d'animal de compagnie.
SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid),Quel est l'âge moyen de tous les étudiants qui ne possèdent pas d'animaux domestiques ?
SELECT count(*) FROM CONTINENTS;,Combien y a-t-il de continents ?
SELECT count(*) FROM CONTINENTS;,Quel est le nombre de continents ?
"SELECT T1.ContId , T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId;","Combien de pays compte chaque continent ? Indiquez l'identifiant du continent, le nom du continent et le nombre de pays."
"SELECT T1.ContId , T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId;","Pour chaque continent, indiquez son identifiant, son nom et combien de pays il compte ?"
SELECT count(*) FROM COUNTRIES;,Combien de pays sont répertoriés ?
SELECT count(*) FROM COUNTRIES;,Combien de pays existent ?
"SELECT T1.FullName , T1.Id , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id;","Combien de modèles produit chaque constructeur automobile ? Nom complet, identifiant et numéro du créateur de liste."
"SELECT T1.FullName , T1.Id , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id;","Quel est le nom complet de chaque constructeur automobile, avec son identifiant et combien de modèles il produit ?"
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,Quel modèle de voiture a la puissance minimale ?
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,Quel est le modèle de la voiture avec le moins de puissance ?
SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT avg(Weight) FROM CARS_DATA),Trouvez le modèle de la voiture dont le poids est inférieur au poids moyen.
SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT avg(Weight) FROM CARS_DATA),Quel est le modèle de la voiture avec un poids inférieur à la moyenne ?
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970';,Trouver le nom des fabricants qui ont produit des voitures en 1970 ?
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970';,Quel est le nom des différents constructeurs automobiles qui ont produit une voiture en 1970 ?
"SELECT T2.Make , T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA);",Trouver la marque et l'heure de production des voitures qui ont été produites au cours de la première année ?
"SELECT T2.Make , T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA);",Quel est le fabricant du carr produit la première année et en quelle année était-ce ?
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model = T2.model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.id WHERE T3.year > 1980;,Quels modèles de voitures distincts sont produits après 1980 ?
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model = T2.model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.id WHERE T3.year > 1980;,Quels sont les différents modèles pour les cartes produites après 1980 ?
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent;",Combien y a-t-il de constructeurs automobiles sur chaque continent ? Indiquez le nom du continent et le nombre.
"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent;",Quel est le nom de chaque continent et combien y a-t-il de constructeurs automobiles dans chacun d'eux ?
SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,Lequel des pays compte le plus de constructeurs automobiles ? Indiquez le nom du pays.
SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,Comment s'appelle le pays qui compte le plus de constructeurs automobiles ?
"SELECT Count(*) , T2.FullName , T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id GROUP BY T2.id;",Combien de modèles de voitures sont produits par chaque constructeur ? Indiquez le nombre et le nom complet du fabricant.
"SELECT Count(*) , T2.FullName , T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id GROUP BY T2.id;",Quel est le nombre de modèles de voitures produits par chaque constructeur et quel est l'identifiant et le nom complet de chaque constructeur ?
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)';,Quelle est l'accélération de la voiture marque amc hornet sportabout (sw) ?
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)';,Combien accélère la voiture qui fait amc hornet sportabout (sw) ?
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france';,Combien y a-t-il de constructeurs automobiles en France ?
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france';,Quel est le nombre de fabricants de soins en France ?
SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa';,Combien de modèles de voitures sont produits aux États-Unis ?
SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa';,Quel est le nombre de modèles de voitures produites aux États-Unis ?
SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4;,Quelle est la moyenne des miles par gallon (mpg) des voitures à 4 cylindres ?
SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4;,Quelle est la moyenne des miles par gallon de toutes les cartes à 4 cylindres ?
SELECT Weight FROM CARS_DATA WHERE Cylinders = 4 AND YEAR = 1974 ORDER BY Weight ASC LIMIT 1;,Quel est le plus petit poids de la voiture produite avec 8 cylindres en 1974 ?
SELECT Weight FROM CARS_DATA WHERE Cylinders = 4 AND YEAR = 1974 ORDER BY Weight ASC LIMIT 1;,Quel est le poids minimum de la voiture à 8 cylindres produite en 1974 ?
"SELECT Maker , Model FROM MODEL_LIST;",Quels sont tous les fabricants et modèles ?
"SELECT Maker , Model FROM MODEL_LIST;",Quels sont les fabricants et les modèles ?
"SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1;",Quels sont les pays ayant au moins un constructeur automobile ? Nom et identifiant de la liste.
"SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1;",Quels sont les noms et identifiants de tous les pays comptant au moins un constructeur automobile ?
SELECT count(*) FROM CARS_DATA WHERE horsepower > 150;,Quel est le nombre de voitures de plus de 150 chevaux ?
SELECT count(*) FROM CARS_DATA WHERE horsepower > 150;,Quel est le nombre de voitures d'une puissance supérieure à 150 chevaux ?
"SELECT avg(Weight) , YEAR FROM CARS_DATA GROUP BY YEAR;",Quel est le poids moyen des voitures chaque année ?
"SELECT avg(Weight) , YEAR FROM CARS_DATA GROUP BY YEAR;",Quel est le poids moyen et l'année pour chaque année ?
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3;,Quels pays d'Europe ont au moins 3 constructeurs automobiles ?
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3;,Quels sont les noms de tous les pays européens avec au moins 3 fabricants ?
"SELECT T2.horsepower , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1;",Quelle est la puissance maximale et la marque des modèles de voitures à 3 cylindres ?
"SELECT T2.horsepower , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1;",Quelle est la plus grande puissance des modèles à 3 cylindres et de quelle marque s'agit-il ?
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.mpg DESC LIMIT 1;,Quel modèle économise le plus d'essence ? C'est-à-dire avoir le maximum de miles par gallon.
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.mpg DESC LIMIT 1;,Quel est le modèle de voiture avec le mpg le plus élevé ?
SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980;,Quelle est la puissance moyenne des voitures avant 1980 ?
SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980;,Quelle est la puissance moyenne de toutes les cartes produites avant 1980 ?
SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo';,Quel est l'edispl moyen des voitures de modèle volvo ?
SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo';,Quel est l'edispl moyen pour toutes les Volvo ?
"SELECT max(Accelerate) , Cylinders FROM CARS_DATA GROUP BY Cylinders;",Quelle est l'accélération maximale pour un nombre différent de cylindres ?
"SELECT max(Accelerate) , Cylinders FROM CARS_DATA GROUP BY Cylinders;",Quelle est l'accélération maximale pour tous les différents cylindres ?
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,Quel modèle a le plus de versions (marques) de voitures ?
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,Quel modèle a les versions les plus différentes ?
SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,Combien de voitures ont plus de 4 cylindres ?
SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,Quel est le nombre de voitures avec plus de 4 cylindres ?
SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,Combien de voitures ont plus de 6 cylindres ?
SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,Quel est le nombre de voitures avec plus de 6 cylindres ?
SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;,combien de voitures ont été produites en 1980 ?
SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;,"En 1980, combien de voitures ont été fabriquées ?"
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';,Combien de modèles de voitures ont été produits par le constructeur avec le nom complet American Motor Company ?
SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';,Quel est le nombre de modèles de voitures créés par le constructeur automobile American Motor Company ?
"SELECT T1.FullName , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3;",Quels constructeurs ont conçu plus de 3 modèles de voitures ? Indiquez le nom complet et l'identifiant.
"SELECT T1.FullName , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3;",Quels sont les noms et identifiants de tous les fabricants avec plus de 3 modèles ?
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500;,Quels modèles distinctifs sont produits par le fabricant portant le nom complet General Motors ou pesant plus de 3500 ?
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500;,Quels sont les différents modèles créés par le constructeur automobile General Motors ou qui pesaient plus de 3500 ?
SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight > 3000 AND T1.weight < 4000;,En quelles années ont été produites des voitures pesant pas moins de 3000 et pas plus de 4000 ?
SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight > 3000 AND T1.weight < 4000;,Quelles sont les différentes années au cours desquelles il y a eu des voitures produites qui pesaient moins de 4000 et aussi des voitures qui pesaient plus de 3000 ?
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,Quelle est la puissance de la voiture avec la plus grande accélération ?
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,Quelle est la puissance de la voiture qui accélère le plus ?
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,"Pour le modèle volvo, combien de cylindres possède la voiture qui accélère le moins ?"
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,"Pour un modèle volvo, combien de cylindres possède la version qui accélère le moins ?"
SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,Combien de voitures ont une accélération plus grande que la voiture avec la plus grande puissance ?
SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,Quel est le nombre de voitures avec une accélération supérieure à celle qui a le plus de puissance ?
"SELECT COUNT(*) FROM ( SELECT T1.CountryId , COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) > 2 );",Combien de pays ont plus de 2 constructeurs automobiles ?
"SELECT COUNT(*) FROM ( SELECT T1.CountryId , COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) > 2 );",Quel est le nombre de pays avec plus de 2 constructeurs automobiles ?
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1;,"Pour les voitures à 4 cylindres, quel modèle a la plus grande puissance ?"
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1;,"Pour toutes les voitures 4 cylindres, quel modèle a le plus de puissance ?"
"SELECT T2.MakeId , T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders <= 3;","Parmi les voitures avec plus que la plus faible puissance, lesquelles n'ont pas plus de 3 cylindres ? Indiquez la voiture makeid et faites le nom."
"SELECT T2.MakeId , T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders <= 3;","Parmi les voitures qui n'ont pas la puissance minimale, quelles sont les marques et les noms de toutes celles qui ont moins de 4 cylindres ?"
SELECT mpg FROM CARS_DATA WHERE Cylinders = 8 OR YEAR < 1980 ORDER BY mpg DESC LIMIT 1;,Quel est le kilométrage maximum par gallon de la voiture à 8 cylindres ou produite avant 1980 ?
SELECT mpg FROM CARS_DATA WHERE Cylinders = 8 OR YEAR < 1980 ORDER BY mpg DESC LIMIT 1;,Quel est le mpg maximum des voitures qui avaient 8 cylindres ou qui ont été produites avant 1980 ?
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company';,Quels modèles sont plus légers que 3500 mais non construits par la « Ford Motor Company » ?
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company';,Quels sont les différents modèles plus légers que le 3500 mais qui n'ont pas été construits par la Ford Motor Company ?
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country;,Comment s'appellent les pays où il n'y a pas un seul constructeur automobile ?
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country;,Comment s'appellent les pays sans constructeurs automobiles ?
"SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) >= 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model GROUP BY T1.Id HAVING count(*) > 3;",Quels sont les constructeurs automobiles qui produisent au moins 2 modèles et plus de 3 marques de voitures ? Indiquez l'identifiant et le fabricant.
"SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) >= 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model GROUP BY T1.Id HAVING count(*) > 3;",Quels sont les identifiants et les fabricants de tous les constructeurs automobiles qui produisent au moins 2 modèles et fabriquent plus de 3 voitures ?
"SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.countryId HAVING count(*) > 3 UNION SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country JOIN MODEL_LIST AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat';",Quels sont l'identifiant et les noms des pays qui ont plus de 3 constructeurs automobiles ou qui produisent le modèle « fiat » ?
"SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.countryId HAVING count(*) > 3 UNION SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country JOIN MODEL_LIST AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat';",Quels sont les identifiants et les noms de tous les pays qui ont plus de 3 constructeurs automobiles ou qui produisent des Fiat ?
"SELECT Country FROM AIRLINES WHERE Airline = ""JetBlue Airways""","À quel pays appartient la compagnie aérienne ""JetBlue Airways"" ?"
"SELECT Country FROM AIRLINES WHERE Airline = ""JetBlue Airways""",Dans quel pays Jetblue Airways est-il affilié ?
"SELECT Abbreviation FROM AIRLINES WHERE Airline = ""JetBlue Airways""","Quelle est l'abréviation de la compagnie aérienne ""JetBlue Airways"" ?"
"SELECT Abbreviation FROM AIRLINES WHERE Airline = ""JetBlue Airways""",Quelle abréviation correspond à Jetblue Airways ?
"SELECT Airline , Abbreviation FROM AIRLINES WHERE Country = ""USA""","Énumérez tous les noms de compagnies aériennes et leurs abréviations en ""USA""."
"SELECT Airline , Abbreviation FROM AIRLINES WHERE Country = ""USA""",Quels sont les noms et abréviations des compagnies aériennes aux États-Unis ?
"SELECT AirportCode , AirportName FROM AIRPORTS WHERE city = ""Anthony""",Indiquez le code et le nom de l'aéroport dans la ville d'Anthony.
"SELECT AirportCode , AirportName FROM AIRPORTS WHERE city = ""Anthony""",Donnez le code et le nom de l'aéroport correspondant à la ville Anthony.
SELECT count(*) FROM AIRLINES,Combien de compagnies aériennes avons-nous ?
SELECT count(*) FROM AIRLINES,Quel est le nombre total de compagnies aériennes ?
SELECT count(*) FROM AIRPORTS,Combien d'aéroports avons-nous ?
SELECT count(*) FROM AIRPORTS,Renvoie le nombre d'aéroports.
SELECT count(*) FROM FLIGHTS,Combien de vols avons-nous ?
SELECT count(*) FROM FLIGHTS,Renvoie le nombre de vols.
"SELECT Airline FROM AIRLINES WHERE Abbreviation = ""UAL""","Quelle compagnie aérienne a l'abréviation ""UAL"" ?"
"SELECT Airline FROM AIRLINES WHERE Abbreviation = ""UAL""",Donnez la compagnie aérienne avec l'abréviation 'UAL'.
"SELECT count(*) FROM AIRLINES WHERE Country = ""USA""",Combien de compagnies aériennes partent des États-Unis ?
"SELECT count(*) FROM AIRLINES WHERE Country = ""USA""",Renvoie le nombre de compagnies aériennes aux États-Unis.
"SELECT City , Country FROM AIRPORTS WHERE AirportName = ""Alton""",Dans quelle ville et pays se trouve l'aéroport d'Alton ?
"SELECT City , Country FROM AIRPORTS WHERE AirportName = ""Alton""",Donnez la ville et le pays de l'aéroport d'Alton.
"SELECT AirportName FROM AIRPORTS WHERE AirportCode = ""AKO""",Quel est le nom de l'aéroport pour l'aéroport 'AKO' ?
"SELECT AirportName FROM AIRPORTS WHERE AirportCode = ""AKO""",Renvoyez le nom de l'aéroport avec le code 'AKO'.
"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",Quels sont les noms des aéroports de la ville d'Aberdeen ?
"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",Quels sont les noms des aéroports à Aberdeen ?
"SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",Combien de vols partent de 'APG' ?
"SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",Comptez le nombre de vols au départ de 'APG'.
"SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",Combien de vols ont une destination ATO ?
"SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",Comptez le nombre de vols en ATO.
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",Combien de vols partent de la ville d'Aberdeen ?
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",Renvoie le nombre de vols au départ d'Aberdeen.
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",Combien de vols arrivent dans la ville d'Aberdeen ?
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",Renvoie le nombre de vols arrivant à Aberdeen.
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = ""Ashley"" AND T3.City = ""Aberdeen""",Combien de vols partent de la ville 'Aberdeen' et ont pour destination la ville 'Ashley' ?
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = ""Ashley"" AND T3.City = ""Aberdeen""",Combien de vols volent de Aberdeen à Ashley ?
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""JetBlue Airways""",Combien de vols la compagnie aérienne 'JetBlue Airways' a-t-elle?
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""JetBlue Airways""",Donnez le nombre de vols Jetblue Airways.
"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",Combien de vols 'United Airlines' vont à l'aéroport 'ASY'?
"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",Comptez le nombre de vols United Airlines arrivant à l'aéroport d'ASY.
"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",Combien de vols 'United Airlines' partent de l'aéroport 'AHD' ?
"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",Renvoie le nombre de vols United Airlines au départ de l'aéroport AHD.
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = ""Aberdeen"" AND T3.Airline = ""United Airlines""",Combien de vols United Airlines desservent la ville « Aberdeen » ?
"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = ""Aberdeen"" AND T3.Airline = ""United Airlines""",Comptez le nombre de vols United Airlines qui arrivent à Aberdeen.
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,Quelle ville a le plus grand nombre de vols à l'arrivée ?
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,Quelle ville a l'aéroport de destination le plus fréquent ?
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,Quelle ville a le plus grand nombre de vols au départ ?
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,Quelle ville est l'aéroport source le plus fréquent ?
SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,Quel est le code de l'aéroport qui a le plus grand nombre de vols ?
SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,Quel est le code de l'aéroport avec le plus de vols ?
SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,Quel est le code de l'aéroport qui a le moins de vols ?
SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,Donnez le code de l'aéroport avec le moins de vols.
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,Quelle compagnie aérienne a le plus de vols ?
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,Quelle compagnie aérienne dessert le plus de vols ?
"SELECT T1.Abbreviation , T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",Trouver l'abréviation et le pays de la compagnie aérienne qui a le moins de vols ?
"SELECT T1.Abbreviation , T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",Quelle est l'abréviation de la compagnie aérienne qui a le moins de vols et dans quel pays se trouve-t-elle ?
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",Quelles sont les compagnies aériennes qui ont des vols au départ de l'aéroport 'AHD' ?
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",Quelles compagnies aériennes ont un vol avec l'aéroport source AHD ?
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",Quelles sont les compagnies aériennes qui ont des vols arrivant à l'aéroport 'AHD' ?
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",Quelles compagnies aériennes ont un vol avec l'aéroport de destination AHD ?
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO""",Trouvez toutes les compagnies aériennes qui ont des vols à partir des deux aéroports 'APG' et 'CVO'.
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO""",Quelles compagnies aériennes proposent des vols au départ des aéroports APG et CVO ?
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",Trouvez toutes les compagnies aériennes qui ont des vols depuis l'aéroport 'CVO' mais pas depuis 'APG'.
"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",Quelles compagnies aériennes ont des départs depuis les aéroports de CVO mais pas depuis les aéroports de APG ?
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) > 10,Trouvez toutes les compagnies aériennes qui ont au moins 10 vols.
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) > 10,Quelles compagnies aériennes ont au moins 10 vols ?
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,Trouvez toutes les compagnies aériennes qui ont moins de 200 vols.
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,Quelles compagnies aériennes ont moins de 200 vols ?
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid = T1.Airline WHERE T2.Airline = ""United Airlines""","Quels sont les numéros de vol de la compagnie aérienne ""United Airlines"" ?"
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid = T1.Airline WHERE T2.Airline = ""United Airlines""",Quels numéros de vol correspondent aux vols United Airlines ?
"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""","Quels sont les numéros de vol des vols au départ de l'aéroport ""APG"" ?"
"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""",Donnez les numéros de vol des vols au départ d'APG.
"SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""","Quels sont les numéros de vol des vols arrivant à l'aéroport ""APG"" ?"
"SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",Donnez les numéros de vol des vols atterrissant à APG.
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""","Quels sont les numéros de vol des vols au départ de la ville ""Aberdeen "" ?"
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",Donnez les numéros de vol des vols au départ d'Aberdeen.
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""","Quels sont les numéros de vol des vols arrivant à City ""Aberdeen"" ?"
"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",Donnez les numéros de vol des vols arrivant à Aberdeen.
"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = ""Aberdeen"" OR T2.city = ""Abilene""",Trouvez le nombre de vols atterrissant dans la ville d'Aberdeen ou d'Abilene.
"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = ""Aberdeen"" OR T2.city = ""Abilene""",Combien de vols atterrissent à Aberdeen ou Abilene ?
SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),Trouvez le nom des aéroports qui n'ont pas de vol aller-retour.
SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),Quels aéroports n'ont pas de vols au départ ou à l'arrivée ?
SELECT name FROM employee ORDER BY age,Triez les noms des employés par leur âge dans l'ordre croissant.
SELECT name FROM employee ORDER BY age,Listez les noms des employés et triez-les par ordre croissant d'âge.
"SELECT count(*) , city FROM employee GROUP BY city",Quel est le nombre d'employés de chaque ville ?
"SELECT count(*) , city FROM employee GROUP BY city",Comptez le nombre d'employés pour chaque ville.
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,De quelles villes proviennent plus d'un employé de moins de 30 ans ?
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,Trouvez les villes qui ont plus d'un employé de moins de 30 ans.
"SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION",Trouvez le nombre de magasins dans chaque emplacement.
"SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION",Combien y a-t-il de magasins à chaque emplacement ?
"SELECT manager_name , district FROM shop ORDER BY number_products DESC LIMIT 1",Trouvez le nom du gérant et le quartier du magasin dont le nombre de produits est le plus important.
"SELECT manager_name , district FROM shop ORDER BY number_products DESC LIMIT 1",Quels sont le nom du gérant et le quartier du magasin qui vend le plus grand nombre de produits ?
"SELECT min(Number_products) , max(Number_products) FROM shop",trouver le nombre minimum et maximum de produits de tous les magasins.
"SELECT min(Number_products) , max(Number_products) FROM shop",Quel est le nombre minimum et maximum de produits dans tous les magasins ?
"SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC","Renvoie le nom, l'emplacement et le quartier de tous les magasins par ordre décroissant du nombre de produits."
"SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC","Triez toutes les boutiques par numéro de produits dans l'ordre décroissant, et renvoyez le nom, l'emplacement et le quartier de chaque boutique."
SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),Trouvez les noms des magasins dont le nombre de produits est supérieur au nombre moyen de produits.
SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),Le nombre de produits de quels magasins est supérieur à la moyenne ? Donnez-moi les noms des magasins.
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,trouver le nom de l'employé qui a été récompensé le plus de fois dans l'évaluation.
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,Quel employé a reçu le plus de récompenses dans les évaluations ? Donnez-moi le nom de l'employé.
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,Trouvez le nom de l'employé qui a obtenu la prime unique la plus élevée.
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,Quel employé a reçu le plus gros bonus ? Donnez-moi le nom de l'employé.
SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),Trouvez les noms des employés qui n'ont jamais remporté de prix lors de l'évaluation.
SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),Quels sont les noms des employés qui n'ont jamais reçu d'évaluation ?
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,Comment s'appelle le magasin qui embauche le plus d'employés ?
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,Quel magasin compte le plus d'employés ? Donnez-moi le nom de la boutique.
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),Trouvez le nom des magasins qui n'embauchent aucun employé.
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),Quels magasins fonctionnent sans employés ? Trouver les noms des boutiques
"SELECT count(*) , t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",Trouver le nombre d'employés embauchés dans chaque magasin ; afficher également le nom du magasin.
"SELECT count(*) , t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name","Pour chaque magasin, retournez le nombre d'employés qui y travaillent et le nom du magasin."
SELECT sum(bonus) FROM evaluation,Quel est le bonus total accordé dans toutes les évaluations ?
SELECT sum(bonus) FROM evaluation,Trouvez le montant total des bonus accordés dans toutes les évaluations.
SELECT * FROM hiring,Donnez-moi toutes les informations sur l'embauche.
SELECT * FROM hiring,Quelles sont toutes les informations sur l'embauche?
SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000,Quel quartier a à la fois des magasins avec moins de 3000 produits et des magasins avec plus de 10000 produits ?
SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000,Trouvez les quartiers dans lesquels il y a à la fois des magasins vendant moins de 3000 produits et des magasins vendant plus de 10000 produits.
SELECT count(DISTINCT LOCATION) FROM shop,Combien y a-t-il de magasins différents ?
SELECT count(DISTINCT LOCATION) FROM shop,Comptez le nombre d'emplacements de magasins distincts.
"SELECT document_id , document_name , document_description FROM Documents","Répertorier les ID de document, les noms de document et les descriptions de document pour tous les documents."
"SELECT document_id , document_name , document_description FROM Documents","Quels sont les identifiants, les noms et les descriptions de tous les documents ?"
"SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""",Quel est le nom du document et l'identifiant du modèle pour le document dont la description contient la lettre « w » ?
"SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""",Renvoie les noms et les ID de modèle pour les documents qui contiennent la lettre w dans leur description.
"SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""","Quel est l'identifiant du document, l'identifiant du modèle et la description du document nommé ""Robbin CV"" ?"
"SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""","Renvoyez l'identifiant du document, l'identifiant du modèle et la description du document avec le nom Robbin CV."
SELECT count(DISTINCT template_id) FROM Documents,Combien de modèles différents tous les documents utilisent-ils ?
SELECT count(DISTINCT template_id) FROM Documents,Comptez le nombre de modèles différents utilisés pour les documents.
SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',"Combien de documents utilisent le modèle avec le code de type ""PPT"" ?"
SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',Comptez le nombre de documents qui utilisent le type de modèle PPT.
"SELECT template_id , count(*) FROM Documents GROUP BY template_id",Afficher tous les identifiants de modèles et le nombre de documents utilisant chaque modèle.
"SELECT template_id , count(*) FROM Documents GROUP BY template_id",Quels sont les différents identifiants de modèles utilisés pour les documents et combien de fois chacun d'entre eux a-t-il été utilisé ?
"SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le code de type du modèle utilisé par la plupart des documents ?
"SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",Renvoie l'identifiant et le code type du modèle utilisé pour le plus grand nombre de documents.
SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,Afficher les identifiants de tous les modèles utilisés par plusieurs documents.
SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,Quels sont les identifiants de modèle de tous les modèles utilisés dans plusieurs documents ?
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,Afficher les identifiants de tous les modèles qui ne sont utilisés par aucun document.
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,Quels sont les identifiants des modèles qui ne sont utilisés dans aucun document ?
SELECT count(*) FROM Templates,Combien de modèles avons-nous ?
SELECT count(*) FROM Templates,Comptez le nombre de modèles.
"SELECT template_id , version_number , template_type_code FROM Templates","Afficher les identifiants de modèle, les numéros de version et les codes de type de modèle pour tous les modèles."
"SELECT template_id , version_number , template_type_code FROM Templates","Quels sont les identifiants, les numéros de version et les codes de type pour chaque modèle ?"
SELECT DISTINCT template_type_code FROM Templates,Afficher tous les codes de type de modèle distincts pour tous les modèles.
SELECT DISTINCT template_type_code FROM Templates,Quels sont les différents codes de type de modèle ?
"SELECT template_id FROM Templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""",Quels sont les identifiants des modèles avec le code de type de modèle PP ou PPT ?
"SELECT template_id FROM Templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""",Renvoie les identifiants des templates qui ont le code PP ou PPT.
"SELECT count(*) FROM Templates WHERE template_type_code = ""CV""",Combien de modèles ont un CV de code de type de modèle ?
"SELECT count(*) FROM Templates WHERE template_type_code = ""CV""",Comptez le nombre de modèles de type CV.
"SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",Quels sont le numéro de version et le code de type de modèle pour le modèle dont le numéro de version est supérieur à 5 ?
"SELECT version_number , template_type_code FROM Templates WHERE version_number > 5",Renvoie les numéros de version et les codes de type de modèle des modèles avec un numéro de version supérieur à 5.
"SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",Afficher tous les codes de type de modèle et le nombre de modèles pour chacun.
"SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code",Quels sont les différents codes de type de modèle et combien de modèles correspondent à chacun ?
SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,Quel code de type de modèle a le plus grand nombre de modèles ?
SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,Renvoie le code de type du type de modèle auquel appartiennent le plus de modèles.
SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,Afficher tous les codes de type de modèle avec moins de trois modèles.
SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,Quels sont les codes des types de modèles qui ont moins de 3 modèles ?
"SELECT min(Version_Number) , template_type_code FROM Templates",Qu'est-ce que le plus petit numéro de version et son code de type de modèle ?
"SELECT min(Version_Number) , template_type_code FROM Templates","Renvoie le numéro de version le plus bas, ainsi que son code de type de modèle correspondant."
"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""","Quel est le code de type de modèle du modèle utilisé par le document portant le nom ""Base de données"" ?"
"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""",Renvoie le code de type de modèle du modèle utilisé par un document nommé Base de données.
"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T1.template_type_code = ""BK""",Afficher tous les noms de documents à l'aide de modèles avec le code de type de modèle BK.
"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T1.template_type_code = ""BK""",Quels sont les noms des documents qui utilisent des modèles avec le code BK ?
"SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Afficher tous les codes de type de modèle et le nombre de documents utilisant chaque type.
"SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",Quels sont les différents codes de type de modèle et combien de documents utilisent chaque type ?
SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,Quel code de type de modèle est utilisé par le plus grand nombre de documents ?
SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,Renvoie le code du type de modèle le plus couramment utilisé dans les documents.
SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id,Afficher tous les codes de type de modèle qui ne sont utilisés par aucun document.
SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id,Quels sont les codes des types de modèles qui ne sont utilisés pour aucun document ?
"SELECT template_type_code , template_type_description FROM Ref_template_types",Afficher tous les codes et descriptions de type de modèle.
"SELECT template_type_code , template_type_description FROM Ref_template_types",Quels sont les codes de type et les descriptions pour tous les types de modèles ?
"SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""","Quelles sont les descriptions de type de modèle pour le code de type de modèle ""AD""."
"SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",Renvoie la description du type de modèle du type de modèle avec le code AD.
"SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""","Quel est le code de type de modèle pour la description du type de modèle ""Livre""."
"SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""","Renvoie le code type du type de modèle avec la description ""Livre""."
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID,Quelles sont les descriptions de type de modèle distinctes pour les modèles déjà utilisés par un document ?
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID,Renvoie les différentes descriptions des modèles qui ont été utilisés dans un document.
"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = ""Presentation""","Quels sont les identifiants de modèle avec la description du type de modèle ""Présentation""."
"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = ""Presentation""",Renvoie les identifiants correspondant aux templates avec la description 'Présentation'.
SELECT count(*) FROM Paragraphs,Combien de paragraphes au total ?
SELECT count(*) FROM Paragraphs,Comptez le nombre de paragraphes.
SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show',Combien de paragraphes pour le document avec le nom 'Summer Show' ?
SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show',"Comptez le nombre de paragraphes dans le document intitulé ""Summer Show""."
SELECT Other_Details FROM Paragraphs WHERE paragraph_text = 'Korea',"Afficher les détails du paragraphe pour le paragraphe contenant le texte ""Corée""."
SELECT Other_Details FROM Paragraphs WHERE paragraph_text = 'Korea',"Quels sont les détails du paragraphe contenant le texte ""Corée"" ?"
"SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'",Afficher tous les identifiants de paragraphe et les textes du document portant le nom 'Welcome to NY'.
"SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'","Quels sont les identifiants et les textes des paragraphes du document intitulé ""Bienvenue à NY"" ?"
"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews""","Afficher tous les textes des paragraphes du document ""Avis clients""."
"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews""","Quels sont les textes des paragraphes du document portant le nom ""Avis clients"" ?"
"SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",Afficher tous les identifiants de document et le nombre de paragraphes dans chaque document. Trier par ID de document.
"SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","Renvoie les différents identifiants de document ainsi que le nombre de paragraphes correspondant à chacun, classés par identifiant."
"SELECT T1.document_id , T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id","Afficher tous les identifiants de document, les noms et le nombre de paragraphes dans chaque document."
"SELECT T1.document_id , T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id","Quels sont les identifiants et les noms de chaque document, ainsi que le nombre de paragraphes dans chacun ?"
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,Répertorier tous les identifiants de document avec au moins deux paragraphes.
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,Quels sont les identifiants des documents qui ont 2 paragraphes ou plus ?
"SELECT T1.document_id , T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom du document avec le plus grand nombre de paragraphes ?
"SELECT T1.document_id , T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",Renvoie l'identifiant et le nom du document avec le plus de paragraphes.
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,Quel est l'identifiant du document avec le moins de paragraphes ?
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,Renvoie l'id du document avec le moins de paragraphes.
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,Quel est l'identifiant du document avec 1 à 2 paragraphes ?
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,Donnez les identifiants des documents qui ont entre un et deux paragraphes.
SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland',"Affichez l'identifiant du document avec le texte du paragraphe ""Brésil"" et ""Irlande""."
SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland',"Quels sont les identifiants des documents contenant le texte de paragraphe ""Brésil"" et ""Irlande"" ?"
SELECT count(*) FROM teacher,Combien y a-t-il d'enseignants ?
SELECT count(*) FROM teacher,Quel est le nombre total d'enseignants ?
SELECT Name FROM teacher ORDER BY Age ASC,Énumérez les noms des enseignants par ordre croissant d'âge.
SELECT Name FROM teacher ORDER BY Age ASC,Quels sont les noms des professeurs classés par âge croissant ?
"SELECT Age , Hometown FROM teacher",Quel est l'âge et la ville d'origine des enseignants ?
"SELECT Age , Hometown FROM teacher",Quel est l'âge et la ville natale de chaque enseignant ?
"SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban Distric""","Indiquez le nom des enseignants dont la ville natale n'est pas ""Little Lever Urban District""."
"SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban Distric""",Comment s'appellent les professeurs dont la ville natale n'est pas « Little Lever Urban District » ?
SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,Afficher le nom des enseignants âgés de 32 ou 33 ans ?
SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,Comment s'appellent les professeurs qui ont 32 ou 33 ans ?
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,Quelle est la ville natale du plus jeune enseignant ?
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,D'où vient le plus jeune professeur ?
"SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",Indiquez les différentes villes natales des enseignants et le nombre d'enseignants de chaque ville natale.
"SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown","Pour chaque ville natale, combien y a-t-il d'enseignants ?"
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,Énumérez la ville natale la plus courante des enseignants.
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,Quelles sont les villes natales les plus courantes pour les enseignants ?
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,Montrez les villes natales partagées par au moins deux enseignants.
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,De quelles villes sont originaires au moins deux enseignants ?
"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",Afficher les noms des enseignants et les cours qu'ils sont disposés à enseigner.
"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",Quel est le nom de chaque professeur et quel cours enseigne-t-il ?
"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",Afficher les noms des enseignants et les cours qu'ils sont chargés d'enseigner par ordre alphabétique croissant du nom de l'enseignant.
"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",Comment s'appellent les enseignants et les cours qu'ils enseignent par ordre alphabétique croissant du nom de l'enseignant ?
"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = ""Math""",Afficher le nom du professeur du cours de mathématiques.
"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = ""Math""",Comment s'appellent les personnes qui enseignent les cours de mathématiques ?
"SELECT T2.Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",Afficher les noms des enseignants et le nombre de cours qu'ils enseignent.
"SELECT T2.Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",Comment s'appellent les professeurs et combien de cours enseignent-ils ?
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,Afficher les noms des enseignants qui enseignent au moins deux cours.
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,Comment s'appellent les professeurs qui enseignent au moins deux cours ?
SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),Énumérez les noms des enseignants qui n'ont pas été désignés pour donner des cours.
SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),Comment s'appellent les professeurs dont les cours n'ont pas été organisés ?
SELECT count(*) FROM visitor WHERE age < 30,Combien y a-t-il de visiteurs de moins de 30 ans ?
SELECT name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC,"Trouvez les noms des visiteurs dont le niveau d'adhésion est supérieur à 4, et classez les résultats par niveau de haut en bas."
SELECT avg(age) FROM visitor WHERE Level_of_membership <= 4,Quel est l'âge moyen des visiteurs dont le niveau d'adhésion n'est pas supérieur à 4 ?
"SELECT name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY age DESC","Trouvez le nom et le niveau d'adhésion des visiteurs dont le niveau d'adhésion est supérieur à 4, et triez par leur âge de vieux à jeune."
"SELECT museum_id , name FROM museum ORDER BY num_of_staff DESC LIMIT 1",Trouver l'identifiant et le nom du musée qui compte le plus d'employés ?
SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009,Trouvez le nombre moyen d'employés travaillant pour les musées qui étaient ouverts avant 2009.
"SELECT Num_of_Staff , Open_Year FROM museum WHERE name = 'Plaza Museum'",Quelle est l'année d'ouverture et le nombre d'employés du musée nommé Plaza Museum ?
SELECT name FROM museum WHERE num_of_staff > (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010),trouver les noms des musées qui ont plus de personnel que le nombre minimum de personnel de tous les musées ouverts après 2010.
"SELECT t1.id , t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t1.id HAVING count(*) > 1","trouver l'identifiant, le nom et l'âge des visiteurs qui ont visité certains musées plus d'une fois."
"SELECT t2.visitor_id , t1.name , t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","Quels sont l'identifiant, le nom et le niveau d'adhésion des visiteurs qui ont dépensé la plus grande somme d'argent au total dans tous les billets de musée ?"
"SELECT t2.Museum_ID , t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",Quels sont l'identifiant et le nom du musée le plus visité ?
SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),Quel est le nom du musée qui n'avait pas encore de visiteur ?
"SELECT t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",Trouvez le nom et l'âge du visiteur qui a acheté le plus de billets à la fois.
"SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit",Quel est le nombre moyen et maximum de billets achetés lors de toutes les visites ?
SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id WHERE t1.Level_of_membership = 1,Quelle est la dépense totale en billets des visiteurs dont le niveau d'adhésion est 1 ?
SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year < 2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year > 2011,Comment s'appelle le visiteur qui a visité à la fois un musée ouvert avant 2009 et un musée ouvert après 2011 ?
SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID WHERE t1.open_year > 2010),Trouver le nombre de visiteurs qui n'ont visité aucun musée ouvert après 2010.
SELECT count(*) FROM museum WHERE open_year > 2013 OR open_year < 2008,Combien de musées ont été ouverts après 2013 ou avant 2008 ?
SELECT count(*) FROM players,Trouvez le nombre total de joueurs.
SELECT count(*) FROM players,Combien y a-t-il de joueurs ?
SELECT count(*) FROM matches,Trouver le nombre total de matchs.
SELECT count(*) FROM matches,Comptez le nombre de matchs.
"SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",Indiquez le prénom et la date de naissance de tous les joueurs du pays avec le code USA.
"SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",Quels sont les prénoms et dates de naissance des joueurs américains ?
"SELECT avg(loser_age) , avg(winner_age) FROM matches",Trouvez l'âge moyen des perdants et des gagnants de tous les matchs.
"SELECT avg(loser_age) , avg(winner_age) FROM matches",Quel est l'âge moyen des perdants et des gagnants d'un match à l'autre ?
SELECT avg(winner_rank) FROM matches,Trouvez le classement moyen des gagnants dans tous les matchs.
SELECT avg(winner_rank) FROM matches,Quel est le classement moyen des vainqueurs dans tous les matchs ?
SELECT min(loser_rank) FROM matches,Trouvez le plus haut rang de perdants dans tous les matchs.
SELECT min(loser_rank) FROM matches,Quel est le meilleur classement des perdants sur tous les matchs ?
SELECT count(DISTINCT country_code) FROM players,trouver le nombre de codes de pays distincts de tous les joueurs.
SELECT count(DISTINCT country_code) FROM players,De combien de pays différents les joueurs sont-ils originaires ?
SELECT count(DISTINCT loser_name) FROM matches,Trouver le nombre de nom distinct des perdants.
SELECT count(DISTINCT loser_name) FROM matches,Combien y a-t-il de noms de perdants différents ?
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,Trouvez le nom du tournoi qui a plus de 10 matchs.
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,Comment s'appellent les tournois qui comptent plus de 10 matchs ?
SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,Énumérez les noms de tous les gagnants qui ont joué en 2013 et en 2016.
SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,Quels sont les noms des joueurs qui ont gagné en 2013 et 2016 ?
SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,Indiquez le nombre de tous les matchs joués au cours des années 2013 ou 2016.
SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,Combien de matches ont été joués en 2013 ou 2016 ?
"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",Quels sont le code pays et le prénom des joueuses qui ont remporté les deux tournois WTA Championships et Australian Open ?
"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",Quels sont les prénoms et codes de pays des joueuses qui ont remporté à la fois les championnats WTA et l'Open d'Australie ?
"SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",Trouvez le prénom et le code pays du joueur le plus âgé.
"SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",Quels sont le prénom et l'indicatif du pays du joueur le plus âgé ?
"SELECT first_name , last_name FROM players ORDER BY birth_date",Indiquez le prénom et le nom de tous les joueurs dans l'ordre de la date de naissance.
"SELECT first_name , last_name FROM players ORDER BY birth_date","Quels sont les noms complets de tous les joueurs, triés par date de naissance ?"
"SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",Indiquez le prénom et le nom de tous les joueurs qui sont à gauche / main L dans l'ordre de la date de naissance.
"SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date","Quels sont les noms complets de tous les joueurs gauchers, par ordre de date de naissance ?"
"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1",Trouvez le prénom et le code pays du joueur qui a fait le plus de tours.
"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1",Quels sont le prénom et l'indicatif du pays du joueur avec le plus de tournées ?
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,Trouvez l'année qui a le plus de matchs.
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,Quelle année a eu le plus de matchs ?
"SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",Trouvez le nom et les points de classement du gagnant qui a gagné le plus de fois.
"SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",Quel est le nom du vainqueur qui a remporté le plus de matchs et combien de points de classement ce joueur a-t-il ?
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,Trouvez le nom du gagnant qui a le plus de points de classement et a participé au tournoi de l'Open d'Australie.
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,Comment s'appelle le vainqueur avec le plus de points de classement qui a participé au tournoi de l'Open d'Australie ?
"SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",trouver les noms du perdant et du vainqueur qui ont disputé le match avec le plus grand nombre de minutes.
"SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1",Comment s'appellent le vainqueur et le perdant qui ont disputé le match le plus long ?
"SELECT avg(ranking) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",Retrouvez le classement moyen de chaque joueur et son prénom.
"SELECT avg(ranking) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",Quels sont les prénoms de tous les joueurs et leurs classements moyens ?
"SELECT sum(ranking_points) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",Trouvez le total des points de classement pour chaque joueur et son prénom.
"SELECT sum(ranking_points) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",Quels sont les prénoms de tous les joueurs et leur total de points de classement ?
"SELECT count(*) , country_code FROM players GROUP BY country_code",trouver le nombre de joueurs pour chaque pays.
"SELECT count(*) , country_code FROM players GROUP BY country_code",Combien y a-t-il de joueurs de chaque pays ?
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,trouver le code du pays où se trouve le plus grand nombre de joueurs.
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,Quel est le code du pays avec le plus de joueurs ?
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,Trouvez les codes des pays qui ont plus de 50 joueurs.
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,Quels sont les codes des pays de plus de 50 joueurs ?
"SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",Trouvez le nombre total de tournées pour chaque date de classement.
"SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date",Combien y avait-il de tournées au total pour chaque date de classement ?
"SELECT count(*) , YEAR FROM matches GROUP BY YEAR",Trouvez le nombre de matchs qui se sont déroulés chaque année.
"SELECT count(*) , YEAR FROM matches GROUP BY YEAR",Combien de matches ont été joués chaque année ?
"SELECT DISTINCT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",Retrouvez le nom et le rang des 3 plus jeunes vainqueurs sur l'ensemble des matchs.
"SELECT DISTINCT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3",Quels sont les noms et les rangs des trois plus jeunes vainqueurs de tous les matchs ?
SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',Combien de vainqueurs différents ont participé aux championnats WTA et étaient gauchers ?
SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',Trouvez le nombre de gagnants gauchers qui ont participé aux championnats WTA.
"SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","Trouvez le prénom, le code du pays et la date de naissance du gagnant qui a le plus de points de classement dans tous les matchs."
"SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","Quels sont le prénom, le code du pays et la date de naissance du joueur avec le plus de points de classement de vainqueur sur tous les matchs ?"
"SELECT count(*) , hand FROM players GROUP BY hand",Trouvez le nombre de joueurs pour chaque type de main.
"SELECT count(*) , hand FROM players GROUP BY hand",Combien y a-t-il de joueurs pour chaque type de main ?
SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured',Combien de navires ont fini par être « capturés » ?
"SELECT name , tonnage FROM ship ORDER BY name DESC",Indiquez le nom et le tonnage classés par ordre alphabétique décroissant pour les noms.
"SELECT name , date FROM battle","Indiquez le nom, la date et le résultat de chaque bataille."
"SELECT max(killed) , min(killed) FROM death",Quel est le nombre maximal et minimal de décès causé à chaque fois ?
SELECT avg(injured) FROM death,Quel est le nombre moyen de blessures causées à chaque fois ?
"SELECT T1.killed , T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'",Quelles sont les situations de décès et de blessures causées par le navire de jauge 't' ?
"SELECT name , RESULT FROM battle WHERE bulgarian_commander != 'Boril'",Quels sont le nom et les résultats des batailles lorsque le commandant bulgare n'est pas 'Boril'
"SELECT DISTINCT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'","Quels sont les différents identifiants et noms des batailles qui ont perdu des navires de type ""Brig"" ?"
"SELECT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed) > 10",Quels sont les identifiants et les noms des batailles qui ont fait plus de 10 morts au total.
"SELECT T2.id , T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant et le nom du navire qui a causé le plus de blessures ?
SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I',Quels sont les noms de bataille distincts entre le commandant bulgare 'Kaloyan' et le commandant latin 'Baldwin I' ?
SELECT count(DISTINCT RESULT) FROM battle,Combien y a-t-il de résultats différents pour les batailles ?
SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage = '225' );,Combien de batailles n'ont perdu aucun navire avec un tonnage de '225' ?
"SELECT T1.name , T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name , T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'",Indiquez le nom et la date de la bataille qui a perdu le navire nommé 'Lettice' et le navire nommé 'HMS Atalanta'
"SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel'","Afficher les noms, les résultats et les commandants bulgares des batailles sans navires perdus dans la 'Manche'."
SELECT note FROM death WHERE note LIKE '%East%',"Quelles sont les notes des événements de décès dont la sous-chaîne est ""Est"" ?"
"SELECT line_1 , line_2 FROM addresses","quelles sont toutes les adresses, y compris la ligne 1 et la ligne 2 ?"
"SELECT line_1 , line_2 FROM addresses",Quelle est la première et la deuxième ligne pour toutes les adresses ?
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea',Quel est le code postal de l'adresse dans la ville de Port Chelsea ?
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea',Quel est le code postal de Port Chelsea ?
"SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",Quel département offre le plus de diplômes ? Indiquez le nom et l'identifiant du département.
"SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","Pour chaque identifiant de département, quel est le nom du département avec le plus grand nombre de diplômes ?"
SELECT count(DISTINCT department_id) FROM Degree_Programs,Combien de départements offrent un diplôme?
SELECT count(DISTINCT department_id) FROM Degree_Programs,Combien de départements différents proposent des diplômes ?
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,Combien de noms de diplômes différents sont proposés ?
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,Combien de diplômes différents sont proposés ?
SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer',Combien de diplômes le département d'ingénierie offre-t-il ?
SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer',Combien de diplômes compte le département d'ingénierie ?
"SELECT section_name , section_description FROM Sections",Quels sont les noms et les descriptions de toutes les sections ?
"SELECT section_name , section_description FROM Sections",Quels sont les noms et les descriptions de toutes les sections ?
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) <= 2",Quels sont les noms et identifiants des cours ayant au plus 2 sections ?
"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) <= 2",Quels sont les noms et identifiants de chaque cours avec moins de 2 sections ?
SELECT section_name FROM Sections ORDER BY section_name DESC,Lister le nom_section dans l'ordre lexicographique inversé.
SELECT section_name FROM Sections ORDER BY section_name DESC,Quels sont les noms des sections dans l'ordre alphabétique inverse ?
"SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",Quel est le semestre auquel la plupart des étudiants se sont inscrits? Afficher à la fois le nom et l'identifiant.
"SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","Pour chaque semestre, quel est le nom et l'identifiant de celui qui compte le plus d'étudiants inscrits ?"
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',Quelle est la description du département dont le nom a pour sous-chaîne l'ordinateur ?
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',Quelle est la description du département pour celui dont le nom contient le mot ordinateur ?
"SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) = 2","Qui est inscrit à 2 programmes diplômants en un semestre ? Indiquez le prénom, le deuxième prénom, le nom de famille et l'identifiant."
"SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) = 2","Quels sont le prénom, le deuxième prénom et le nom de famille, ainsi que les identifiants, de tous les étudiants qui se sont inscrits à des programmes de 2 diplômes au cours d'un semestre ?"
"SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'","Qui est inscrit dans un programme de licence? Indiquez le prénom, le deuxième prénom, le nom de famille."
"SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'","Quels sont le prénom, le deuxième prénom et le nom de famille de toutes les personnes inscrites à un programme de licence ?"
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,Trouvez le type de programme auquel le plus grand nombre d'étudiants sont inscrits ?
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom du résumé du diplôme qui compte le plus grand nombre d'étudiants inscrits ?
"SELECT T1.degree_program_id , T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",Trouvez le programme auquel le plus grand nombre d'étudiants sont inscrits. Indiquez à la fois l'identifiant et le résumé.
"SELECT T1.degree_program_id , T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",Quel est l'identifiant du programme et le résumé du diplôme qui compte le plus d'étudiants inscrits ?
"SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","Quel étudiant s'est inscrit le plus souvent dans un programme ? Indiquez l'identifiant, le prénom, le deuxième prénom, le nom de famille, le nombre d'inscriptions et l'identifiant de l'étudiant."
"SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","Quels sont le prénom, le deuxième prénom et le nom de famille, ainsi que l'identifiant et le nombre d'inscriptions, de l'étudiant qui s'est inscrit le plus dans un programme ?"
SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),Quels semestres n'ont aucun étudiant inscrit? Indiquez le nom du semestre.
SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),Quel est le nom du semestre sans étudiants inscrits ?
SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,Quels sont tous les noms de cours des cours auxquels des étudiants sont déjà inscrits ?
SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,Quels sont les noms de tous les cours auxquels certains étudiants sont inscrits ?
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom du cours avec le plus grand nombre d'inscriptions ?
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom du cours avec le plus d'étudiants inscrits ?
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id,Trouvez le nom de famille des étudiants qui vivent actuellement dans l'État de Caroline du Nord mais qui ne se sont inscrits à aucun programme menant à un diplôme.
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id,Quel est le nom de famille des étudiants qui vivent en Caroline du Nord mais qui ne se sont inscrits à aucun programme menant à un diplôme ?
"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2",Indiquez la date et l'identifiant du relevé de notes avec au moins 2 résultats de cours.
"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2",Quelle est la date et l'identifiant du relevé de notes avec au moins 2 cours répertoriés ?
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward',Quel est le numéro de téléphone de l'homme qui s'appelle Timmothy et qui s'appelle Ward ?
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward',Quel est le numéro de téléphone portable de l'étudiant nommé Timothy Ward ?
"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","Qui est le premier étudiant à s'inscrire ? Indiquez le prénom, le deuxième prénom et le nom de famille."
"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","Quels sont le prénom, le deuxième prénom et le nom de famille du premier étudiant à s'inscrire ?"
"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1","Qui est le premier diplômé de l'école ? Indiquez le prénom, le deuxième prénom et le nom de famille."
"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1","Quels sont le prénom, le deuxième prénom et le nom de famille du premier diplômé de l'école ?"
SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,Quelle adresse permanente est différente de son adresse actuelle ? Indiquez son prénom.
SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,Quel est le prénom de l'étudiant dont l'adresse permanente est différente de son adresse actuelle ?
"SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",Quelle adresse accueille actuellement le plus d'étudiants ? Indiquez l'identifiant de l'adresse et toutes les lignes.
"SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","Quel est l'identifiant, la ligne 1 et la ligne 2 de l'adresse avec le plus d'étudiants ?"
SELECT avg(transcript_date) FROM Transcripts,"En moyenne, quand les transcriptions ont-elles été imprimées ?"
SELECT avg(transcript_date) FROM Transcripts,Quelle est la date moyenne de transcription ?
"SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",Quand la première transcription est-elle publiée ? Indiquez la date et les détails.
"SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",Quelle est la première date de publication d'un relevé de notes et quels détails pouvez-vous me donner ?
SELECT count(*) FROM Transcripts,Combien de transcriptions sont publiées ?
SELECT count(*) FROM Transcripts,Combien de transcriptions sont répertoriées ?
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,Quelle est la date de publication du dernier relevé de notes ?
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,Quand la dernière transcription a-t-elle été publiée ?
"SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",Combien de fois au maximum un résultat d'inscription à un cours peut-il apparaître dans différents relevés de notes ? Afficher également l'identifiant d'inscription au cours.
"SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",Quel est le nombre maximal de fois qu'un cours apparaît dans différents relevés de notes et quel est l'identifiant d'inscription de ce cours ?
"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","Affichez la date de la transcription qui affiche le moins de résultats, indiquez également l'identifiant."
"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",Quels sont la date et l'identifiant de la transcription avec le moins de résultats ?
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor',Trouvez le semestre auquel les étudiants de Master et les étudiants de Bachelor se sont inscrits.
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor',Quel est l'identifiant du semestre auquel les étudiants en master et en licence étaient inscrits ?
SELECT count(DISTINCT current_address_id) FROM Students,À combien d'adresses différentes les étudiants vivent-ils actuellement ?
SELECT count(DISTINCT current_address_id) FROM Students,Quelles sont les différentes adresses où vivent les étudiants ?
SELECT other_student_details FROM Students ORDER BY other_student_details DESC,Énumérez tous les détails des étudiants dans l'ordre lexicographique inversé.
SELECT other_student_details FROM Students ORDER BY other_student_details DESC,Quels autres détails pouvez-vous me dire sur les élèves par ordre alphabétique inversé ?
SELECT section_description FROM Sections WHERE section_name = 'h',Décrivez la partie h.
SELECT section_description FROM Sections WHERE section_name = 'h',Quelle est la description de la section nommée h ?
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number = '09700166582',Trouvez le prénom des étudiants qui vivent en permanence dans le pays Haïti ou qui ont le numéro de téléphone portable 09700166582.
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number = '09700166582',Quels sont les prénoms des étudiants qui vivent en Haïti de façon permanente ou qui ont le numéro de téléphone portable 09700166582 ?
SELECT Title FROM Cartoon ORDER BY title,Énumérez les titres de tous les dessins animés par ordre alphabétique.
SELECT Title FROM Cartoon ORDER BY title,Quels sont les titres des dessins animés classés par ordre alphabétique ?
"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","Liste tous les dessins animés réalisés par ""Ben Jones""."
"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",Comment s'appellent tous les dessins animés réalisés par Ben Jones ?
"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","Combien de dessins animés ont été écrits par ""Joseph Kuhr"" ?"
"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",Quel est le nombre de cartoones écrits par Joseph Kuhr ?
"SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date",répertorier tous les titres de dessins animés et leurs réalisateurs classés par date de diffusion
"SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date",Quel est le nom et les réalisateurs de tous les dessins animés classés par date de diffusion ?
"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","Indiquez le titre de tous les dessins animés réalisés par ""Ben Jones"" ou ""Brandon Vietti""."
"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",Quels sont les titres de tous les dessins animés réalisés par Ben Jones ou Brandon Vietti ?
"SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",Quel pays a le plus de chaînes de télévision ? Indiquez le pays et le nombre de chaînes de télévision dont il dispose.
"SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",Quel est le pays avec le plus grand nombre de chaînes de télévision et combien en possède-t-il ?
"SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel;",Indiquez le nombre de noms de séries et de contenus différents dans le tableau des chaînes TV.
"SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel;",Combien de séries et de contenus différents sont répertoriés dans le tableau des chaînes TV ?
"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","Quel est le contenu de la chaîne de télévision avec le nom de série ""Sky Radio"" ?"
"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",Quel est le contenu de la série Sky Radio ?
"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","Qu'est-ce que l'option de forfait de la chaîne de télévision avec le nom de série ""Sky Radio"" ?"
"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";",Quelles sont les options de forfait des chaînes de télévision dont les noms de série sont Sky Radio ?
"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",Combien de chaînes de télévision utilisant la langue anglaise ?
"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",Combien de chaînes de télévision utilisent la langue anglaise ?
"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",Indiquez la langue utilisée par le moins grand nombre de chaînes de télévision. Langue de la liste et numéro de chaîne de télévision.
"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",Quelles sont les langues utilisées par le moins de chaînes de télévision et combien de chaînes l'utilisent ?
"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE",Indiquez chaque langue et le nombre de chaînes de télévision qui l'utilisent.
"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE","Pour chaque langue, indiquez le nombre de chaînes de télévision qui l'utilisent."
"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";","Quelle est la chaîne de télévision qui diffuse le dessin animé ""The Rise of the Blue Beetle !"" ? Indiquez le nom de la série de la chaîne de télévision."
"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";","Quel est le nom de la série de la chaîne de télévision qui diffuse le dessin animé ""The Rise of the Blue Beetle"" ?"
"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","Indiquez le titre de tous les dessins animés diffusés sur la chaîne de télévision avec le nom de la série ""Sky Radio""."
"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","Quel est le titre de tous les cartools qui sont sur la chaîne de télévision avec le nom de la série ""Sky Radio"" ?"
SELECT Episode FROM TV_series ORDER BY rating,Répertorier l'épisode de toutes les séries télévisées triées par note.
SELECT Episode FROM TV_series ORDER BY rating,Quels sont tous les épisodes classés par notes ?
"SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",Énumérez les 3 séries télévisées les mieux notées. Énumérez l'épisode et la note de la série télévisée.
"SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",Quels sont les 3 épisodes les mieux notés dans le tableau des séries télévisées et quelles étaient ces notes ?
"SELECT max(SHARE) , min(SHARE) FROM TV_series;",Quelle est la part minimale et maximale des séries TV ?
"SELECT max(SHARE) , min(SHARE) FROM TV_series;",Quelle est la part maximale et minimale pour la série TV ?
"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","Quelle est la date de diffusion de la série télévisée avec l'épisode ""L'amour d'une vie"" ?"
"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","Quand l'épisode ""L'amour d'une vie"" a-t-il été diffusé ?"
"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","Quel est le classement hebdomadaire des séries télévisées avec l'épisode ""L'amour d'une vie"" ?"
"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","Quel est le classement hebdomadaire de l'épisode ""L'amour d'une vie"" ?"
"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","Quelle est la chaîne de télévision de la série télévisée avec l'épisode ""L'amour d'une vie"" ? Indiquez le nom de la série de la chaîne de télévision."
"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","Comment s'appelle la série dont l'épisode ""L'amour d'une vie"" s'appelle ?"
"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","Répertoriez l'épisode de toutes les séries télévisées diffusées sur la chaîne de télévision avec le nom de la série ""Sky Radio""."
"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","Quel est l'épisode de la série télévisée ""Sky Radio"" ?"
"SELECT count(*) , Directed_by FROM cartoon GROUP BY Directed_by",Trouvez le nombre de dessins animés réalisés par chacun des réalisateurs répertoriés.
"SELECT count(*) , Directed_by FROM cartoon GROUP BY Directed_by",Combien de dessins animés chaque réalisateur a-t-il créés ?
"SELECT production_code , channel FROM cartoon ORDER BY original_air_date LIMIT 1",Trouvez le code de production et la chaîne du dessin animé le plus récemment diffusé.
"SELECT production_code , channel FROM cartoon ORDER BY original_air_date LIMIT 1",Quel est le code de production et la chaîne du dessin animé le plus récent ?
"SELECT package_option , series_name FROM TV_Channel WHERE hight_definition_TV = ""yes""",Trouvez le choix de forfait et le nom de la série de la chaîne de télévision qui a la télévision haute définition.
"SELECT package_option , series_name FROM TV_Channel WHERE hight_definition_TV = ""yes""",Quelles sont les options de forfait et le nom de la série pour la chaîne de télévision prenant en charge la télévision haute définition ?
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',les chaînes de télévision de quels pays diffusent un dessin animé écrit par Todd Casey ?
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',Quels sont les pays qui diffusent à la télévision des dessins animés écrits par Todd Casey ?
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',quelles chaînes de télévision de pays ne diffusent aucun dessin animé écrit par Todd Casey ?
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',Quels sont les pays qui ne diffusent pas les dessins animés écrits par Todd Casey ?
"SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'",Trouver le nom de la série et le pays de la chaîne de télévision qui diffuse des dessins animés réalisés par Ben Jones et Michael Chang ?
"SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'",Quel est le nom de la série et le pays de toutes les chaînes de télévision qui diffusent des dessins animés réalisés par Ben Jones et des dessins animés réalisés par Michael Chang ?
"SELECT Pixel_aspect_ratio_PAR , country FROM tv_channel WHERE LANGUAGE != 'English'",trouver le rapport d'aspect des pixels et la nation des chaînes de télévision qui n'utilisent pas l'anglais.
"SELECT Pixel_aspect_ratio_PAR , country FROM tv_channel WHERE LANGUAGE != 'English'",Quel est le format des pixels et le pays d'origine pour toutes les chaînes de télévision qui n'utilisent pas l'anglais ?
SELECT id FROM tv_channel GROUP BY country HAVING count(*) > 2,trouver l'identifiant des chaînes de télévision provenant des pays où il y a plus de deux chaînes de télévision.
SELECT id FROM tv_channel GROUP BY country HAVING count(*) > 2,Quels sont les identifiants de toutes les chaînes de télévision qui ont plus de 2 chaînes de télévision ?
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones',trouver l'identifiant des chaînes de télévision qui ne diffusent aucun dessin animé réalisé par Ben Jones.
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones',Quels sont les identifiants des chaînes de télévision qui n'ont pas de dessins animés réalisés par Ben Jones ?
SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'),trouver l'option forfait de la chaîne de télévision qui n'a pas de dessin animé réalisé par Ben Jones.
SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'),Quelles sont les options de forfait de toutes les chaînes de télévision qui ne diffusent aucun dessin animé réalisé par Ben Jones ?
SELECT count(*) FROM poker_player,Combien y a-t-il de joueurs de poker ?
SELECT count(*) FROM poker_player,Comptez le nombre de joueurs de poker.
SELECT Earnings FROM poker_player ORDER BY Earnings DESC,Listez les gains des joueurs de poker par ordre décroissant.
SELECT Earnings FROM poker_player ORDER BY Earnings DESC,"Quels sont les gains des joueurs de poker, classés par valeur décroissante ?"
"SELECT Final_Table_Made , Best_Finish FROM poker_player",Lister les tables finales réalisées et les meilleures finitions des joueurs de poker.
"SELECT Final_Table_Made , Best_Finish FROM poker_player",Quelles sont les tables finales faites et les meilleures finitions pour tous les joueurs de poker ?
SELECT avg(Earnings) FROM poker_player,Quel est le salaire moyen des joueurs de poker ?
SELECT avg(Earnings) FROM poker_player,Renvoie les gains moyens de tous les joueurs de poker.
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,Quel est le rang d'argent du joueur de poker avec les gains les plus élevés ?
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,Renvoie le rang d'argent du joueur avec les plus gros gains.
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,Quel est le nombre maximum de tables finales réalisées parmi les joueurs de poker avec des gains inférieurs à 200 000 ?
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,Renvoie le nombre maximum de tables finales réalisées parmi tous les joueurs de poker ayant des gains inférieurs à 200 000.
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,Comment s'appellent les joueurs de poker ?
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,Renvoie les noms de tous les joueurs de poker.
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,Comment s'appellent les joueurs de poker dont les gains sont supérieurs à 300 000 ?
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,Donnez les noms des joueurs de poker qui ont des gains supérieurs à 300 000.
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made,Listez les noms des joueurs de poker classés par les tables finales faites par ordre croissant.
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made,"Quels sont les noms des joueurs de poker, classés par ordre croissant du nombre de tables finales qu'ils ont réalisées ?"
SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,Quelle est la date de naissance du joueur de poker avec les gains les plus bas ?
SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,Renvoie la date de naissance du joueur de poker avec les gains les plus faibles.
SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,Quel est le rang monétaire du joueur de poker le plus grand ?
SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,Renvoie le rang d'argent du joueur de poker avec la plus grande taille.
SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200,Quel est le salaire moyen des joueurs de poker avec une taille supérieure à 200 ?
SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200,Donnez les gains moyens des joueurs de poker de plus de 200 ans.
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,Quels sont les noms des joueurs de poker par ordre décroissant de gains ?
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,Renvoie les noms des joueurs de poker triés par leurs gains décroissants.
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",Quelles sont les différentes nationalités des personnes et le nombre correspondant de personnes de chaque nation ?
"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",Combien y a-t-il de personnes de chaque nationalité ?
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,Quelle est la nationalité la plus courante des personnes ?
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,Donnez la nationalité qui est la plus commune à toutes les personnes.
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,Quelles sont les nationalités partagées par au moins deux personnes ?
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,Retournez les nationalités pour lesquelles il y a deux personnes ou plus.
"SELECT Name , Birth_Date FROM people ORDER BY Name ASC",Dressez la liste des noms et dates de naissance des personnes par ordre alphabétique croissant des noms.
"SELECT Name , Birth_Date FROM people ORDER BY Name ASC","Quels sont les noms et dates de naissance des personnes, classés par leurs noms dans l'ordre alphabétique ?"
"SELECT Name FROM people WHERE Nationality != ""Russia""","Afficher les noms des personnes dont la nationalité n'est pas ""Russie""."
"SELECT Name FROM people WHERE Nationality != ""Russia""",Comment s'appellent les personnes qui ne sont pas russes ?
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),Dressez la liste des noms de personnes qui ne sont pas des joueurs de poker.
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),Comment s'appellent les personnes qui ne jouent pas au poker ?
SELECT count(DISTINCT Nationality) FROM people,Combien y a-t-il de nationalités distinctes ?
SELECT count(DISTINCT Nationality) FROM people,Comptez le nombre de nationalités différentes.
SELECT count(*) FROM area_code_state,Combien y a-t-il d'états ?
"SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC","Énumérez les numéros et les noms des candidats, classés par nom de candidat décroissant."
"SELECT vote_id , phone_number , state FROM votes","Répertoriez les identifiants de vote, les numéros de téléphone et les états de tous les votes."
"SELECT max(area_code) , min(area_code) FROM area_code_state",Quelles sont les valeurs maximales et minimales des indicatifs régionaux ?
SELECT max(created) FROM votes WHERE state = 'CA',Quelle est la dernière date de création des votes de l'état « CA » ?
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',Quels sont les noms des candidats dont les noms ne sont pas 'Jessie Alloway'
"SELECT DISTINCT state , created FROM votes",Quels sont les états distincts et créer le temps de tous les votes?
"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING count(*) >= 2",Quels sont les numéros des candidats et les noms des candidats qui ont eu au moins deux votes ?
"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","De tous les candidats qui ont été votés, quel est le numéro de candidat et le nom du candidat qui a obtenu le moins de votes ?"
SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA',Quel est le nombre de votes de l'état « NY » ou « CA » ?
SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),Combien de candidats n'ont pas été votés ?
SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,Quel est l'indicatif régional dans lequel le plus d'électeurs ont voté ?
"SELECT T2.created , T2.state , T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = 'Tabatha Gehling'","Quels sont les dates de création, les états et les numéros de téléphone des votes pour la candidate nommée ""Tabatha Gehling"" ?"
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss',"Énumérez les indicatifs régionaux dans lesquels les électeurs ont voté à la fois pour le candidat ""Tabatha Gehling"" et le candidat ""Kelly Clauss""."
"SELECT contestant_name FROM contestants WHERE contestant_name LIKE ""%Al%""",Renvoie les noms des concurrents dont les noms contiennent la sous-chaîne 'Al'.
SELECT Name FROM country WHERE IndepYear > 1950,Quels sont les noms de tous les pays qui sont devenus indépendants après 1950 ?
SELECT Name FROM country WHERE IndepYear > 1950,Donnez les noms des nations qui ont été fondées après 1950.
"SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",Combien de pays ont une république comme forme de gouvernement ?
"SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",Combien de pays ont des gouvernements qui sont des républiques ?
"SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",Quelle est la superficie totale des pays de la région Caraïbe ?
"SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",Quelle superficie les pays des Caraïbes couvrent-ils ensemble ?
"SELECT Continent FROM country WHERE Name = ""Anguilla""",Dans quel continent se trouve Anguilla ?
"SELECT Continent FROM country WHERE Name = ""Anguilla""",Quel est le nom du continent auquel appartient Anguilla ?
"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = ""Kabul""",Dans quelle région se trouve la ville de Kaboul ?
"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = ""Kabul""",Dans quelle région se trouve Kaboul ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba"" ORDER BY Percentage DESC LIMIT 1",Quelle langue est la plus populaire à Aruba ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba"" ORDER BY Percentage DESC LIMIT 1",Quelle langue est principalement parlée à Aruba ?
"SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",Quelle est la population et l'espérance de vie au Brésil ?
"SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""",Donnez-moi la population et l'espérance de vie du Brésil.
"SELECT Population , Region FROM country WHERE Name = ""Angola""",Quelle est la région et la population de l'Angola?
"SELECT Population , Region FROM country WHERE Name = ""Angola""",À quelle région appartient l'Angola et quelle est sa population ?
"SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",Quelle est l'espérance de vie moyenne prévue pour les pays de la région de l'Afrique centrale ?
"SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",Quelle est l'espérance de vie moyenne des habitants de l'Afrique centrale ?
"SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",Comment s'appelle le pays qui a l'espérance de vie la plus courte d'Asie ?
"SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",Donnez le nom du pays d'Asie où l'espérance de vie est la plus faible.
"SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""",Quelle est la population totale et le PNB maximum en Asie ?
"SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""","Combien de personnes vivent en Asie, et quel est le PNB le plus élevé parmi elles ?"
"SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",Quelle est l'espérance de vie moyenne dans les pays africains qui sont des républiques ?
"SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",Donnez l'espérance de vie moyenne des pays d'Afrique qui sont des républiques ?
"SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",Quelle est la superficie totale des continents Asie et Europe ?
"SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",Donner la superficie totale couverte par les pays d'Asie ou d'Europe.
"SELECT sum(Population) FROM city WHERE District = ""Gelderland""",Combien de personnes vivent dans le district de Gelderland ?
"SELECT sum(Population) FROM city WHERE District = ""Gelderland""",Quelle est la population totale du district de Gelderland ?
"SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""",Quel est le PNB moyen et la population totale de toutes les nations dont le gouvernement est un territoire américain ?
"SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""",Donnez le PNB moyen et la population totale des nations considérées comme territoire américain.
SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,Combien de langues uniques sont parlées dans le monde ?
SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,Quel est le nombre de langues distinctes utilisées dans le monde ?
"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",Combien y a-t-il de types de gouvernements en Afrique ?
"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",Combien y a-t-il de formes différentes de gouvernement en Afrique ?
"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba""",Quel est le nombre total de langues utilisées à Aruba ?
"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba""",Combien de langues sont parlées à Aruba ?
"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Afghanistan"" AND IsOfficial = ""T""",Combien de langues officielles compte l'Afghanistan ?
"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Afghanistan"" AND IsOfficial = ""T""",Combien de langues officielles sont parlées en Afghanistan ?
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,Quel est le nom du pays qui parle le plus de langues ?
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,Donnez le nom de la nation qui utilise le plus de langues.
SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,Quel continent a les langues les plus diverses ?
SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,Quel continent parle le plus de langues ?
"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"")",Combien de pays parlent à la fois l'anglais et le néerlandais ?
"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"")",Quel est le nombre de nations qui utilisent l'anglais et le néerlandais ?
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French""",Comment s'appellent les nations parlant à la fois l'anglais et le français ?
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French""",Donnez les noms des nations qui parlent à la fois l'anglais et le français.
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French"" AND T2.IsOfficial = ""T""",Quels sont les noms des nations où l'anglais et le français sont les langues officielles ?
"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French"" AND T2.IsOfficial = ""T""",Donnez les noms des pays ayant l'anglais et le français comme langues officielles.
"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Chinese""",Quel est le nombre de continents distincts où le chinois est parlé ?
"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Chinese""",Combien de continents parlent chinois ?
"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" OR T2.Language = ""Dutch""",Quelles sont les régions qui utilisent l'anglais ou le néerlandais ?
"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" OR T2.Language = ""Dutch""",Quelles régions parlent le néerlandais ou l'anglais ?
"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND IsOfficial = ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"" AND IsOfficial = ""T""",Quels sont les pays où l'anglais ou le néerlandais est la langue officielle ?
"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND IsOfficial = ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"" AND IsOfficial = ""T""",Quels pays ont l'anglais ou le néerlandais comme langue officielle ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",Quelle langue est la plus populaire sur le continent asiatique ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",Quelle est la langue utilisée par le plus grand nombre de nations asiatiques ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = ""Republic"" GROUP BY T2.Language HAVING COUNT(*) = 1",Quelles langues sont parlées par un seul pays dans les gouvernements des républiques ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = ""Republic"" GROUP BY T2.Language HAVING COUNT(*) = 1",Quelles langues ne sont utilisées que par un seul pays avec un gouvernement républicain ?
"SELECT T1.Name , T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1",Trouvez la ville avec la plus grande population qui utilise l'anglais.
"SELECT T1.Name , T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1",Quelle est la ville la plus peuplée qui parle anglais ?
"SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","Trouver le nom, la population et la durée de vie prévue du pays asiatique avec la plus grande superficie ?"
"SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","Quels sont le nom, la population et l'espérance de vie du plus grand pays asiatique par terre ?"
"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")",Quelle est l'espérance de vie moyenne dans les pays où l'anglais n'est pas la langue officielle ?
"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")",Donner l'espérance de vie moyenne des pays dans lesquels l'anglais n'est pas la langue officielle.
"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"")",Quel est le nombre total de personnes vivant dans les pays qui n'utilisent pas l'anglais ?
"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"")",Combien de personnes vivent dans des pays qui ne parlent pas anglais ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T""",Quelle est la langue officielle parlée dans le pays dont le chef d'État est Béatrix ?
"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T""",Quelle est la langue officielle utilisée dans le pays dont le chef d'État s'appelle Béatrix.
"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = ""T""",Quel est le nombre total de langues officielles uniques parlées dans les pays fondés avant 1930 ?
"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = ""T""","Pour les pays fondés avant 1930, quel est le nombre total de langues officielles distinctes ?"
"SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",Quels sont les pays qui ont une superficie plus grande que n'importe quel pays d'Europe ?
"SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",Quels pays ont une plus grande superficie que celle de n'importe quel pays d'Europe ?
"SELECT Name FROM country WHERE Continent = ""Africa"" AND population < (SELECT max(population) FROM country WHERE Continent = ""Asia"")",Quels sont les pays africains qui ont une population inférieure à n'importe quel pays d'Asie ?
"SELECT Name FROM country WHERE Continent = ""Africa"" AND population < (SELECT min(population) FROM country WHERE Continent = ""Asia"")",Quels pays africains ont une population inférieure à celle de n'importe quel pays d'Asie ?
"SELECT Name FROM country WHERE Continent = ""Asia"" AND population > (SELECT max(population) FROM country WHERE Continent = ""Africa"")",Quels pays asiatiques ont une population plus importante que n'importe quel pays d'Afrique ?
"SELECT Name FROM country WHERE Continent = ""Asia"" AND population > (SELECT min(population) FROM country WHERE Continent = ""Africa"")",Quels sont les pays asiatiques qui ont une population supérieure à celle de n'importe quel pays d'Afrique ?
"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",Quels sont les indicatifs de pays pour les pays qui ne parlent pas anglais ?
"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",Renvoie les codes de pays pour les pays qui ne parlent pas anglais.
"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",Quels sont les codes pays des pays où les gens utilisent des langues autres que l'anglais ?
"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",Donnez les codes de pays pour les pays dans lesquels les gens parlent des langues autres que l'anglais.
"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",Quels sont les codes des pays qui ne parlent pas anglais et dont les formes de gouvernement ne sont pas républicaines ?
"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",Renvoie les codes des pays qui ne parlent pas anglais et n'ont pas de républiques pour les gouvernements.
SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode = T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English'),Quelles sont les villes des pays européens où l'anglais n'est pas la langue officielle ?
SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode = T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English'),Comment s'appellent les villes d'Europe dont l'anglais n'est pas la langue officielle ?
"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = \'T\' AND T2.Language = \'Chinese\' AND T1.Continent = ""Asia""",Quelles villes uniques se trouvent dans les pays asiatiques où le chinois est la langue officielle ?
"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = \'T\' AND T2.Language = \'Chinese\' AND T1.Continent = ""Asia""",Renvoie les différents noms de villes qui se trouvent en Asie et dont le chinois est la langue officielle.
"SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1","Quels sont le nom, l'année de l'indépendance et la superficie du pays le moins peuplé ?"
"SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1","Donnez le nom, l'année de l'indépendance et la superficie du pays le moins peuplé."
"SELECT Name , population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","Quels sont la population, le nom et le chef du pays avec la plus grande superficie ?"
"SELECT Name , population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","Donnez le nom, la population et le chef de l'État du pays qui a la plus grande superficie."
"SELECT COUNT(T2.Language) , T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2",Renvoie le nom du pays et le nombre de langues parlées pour chaque pays qui parle au moins 3 langues.
"SELECT COUNT(T2.Language) , T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2","Quels sont les noms des pays qui parlent plus de 2 langues, ainsi que combien de langues ils parlent ?"
"SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",Trouver le nombre de villes dans chaque district dont la population est supérieure à la population moyenne des villes ?
"SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District",Combien de villes dans chaque district ont une population supérieure à la population moyenne de toutes les villes ?
"SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",Trouvez le nom du formulaire gouvernemental et la population totale pour chaque formulaire gouvernemental dont l'espérance de vie moyenne est supérieure à 72 ans.
"SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72",Quelles sont les différentes formes de gouvernement et quelle est la population totale de chacune pour les formes de gouvernement dont l'espérance de vie moyenne est supérieure à 72 ans ?
"SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",Trouvez l'espérance de vie moyenne et la population totale pour chaque continent où l'espérance de vie moyenne est inférieure à 72 ans ?
"SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72","Quels sont les différents continents et la population totale et l'espérance de vie moyenne correspondant à chacun, pour les continents qui ont une espérance de vie moyenne inférieure à 72 ans ?"
"SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",Quels sont les noms et les superficies des pays avec les 5 plus grandes superficies ?
"SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",Renvoyer les noms et superficies des 5 plus grands pays.
SELECT Name FROM country ORDER BY Population DESC LIMIT 3,Quels sont les noms des pays avec les 3 plus grandes populations ?
SELECT Name FROM country ORDER BY Population DESC LIMIT 3,Renvoie les noms des 3 pays les plus peuplés.
SELECT Name FROM country ORDER BY Population ASC LIMIT 3,Quels sont les noms des nations avec les 3 populations les plus faibles ?
SELECT Name FROM country ORDER BY Population ASC LIMIT 3,Renvoie les noms des 3 pays avec le moins de monde.
"SELECT count(*) FROM country WHERE continent = ""Asia""",Combien y a-t-il de pays en Asie ?
"SELECT count(*) FROM country WHERE continent = ""Asia""",Comptez le nombre de pays en Asie.
"SELECT Name FROM country WHERE continent = ""Europe"" AND Population = ""80000""",Comment s'appellent les pays qui se trouvent sur le continent européen et qui comptent 80 000 habitants ?
"SELECT Name FROM country WHERE continent = ""Europe"" AND Population = ""80000""",Donnez les noms des pays qui sont en Europe et ont une population égale à 80 000.
"SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000",Quelle est la population totale et la superficie moyenne des pays du continent nord-américain dont la superficie est supérieure à 3000 ?
"SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = ""North America"" AND SurfaceArea > 3000",Donner la population totale et la superficie moyenne correspondant aux pays d'Amérique du Nord qui ont une superficie supérieure à 3000.
SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,Quelles sont les villes dont la population est comprise entre 160 000 et 900 000 ?
SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,Renvoie les noms des villes dont la population est comprise entre 160 000 et 900 000.
SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,Quelle langue est parlée par le plus grand nombre de pays ?
SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,Donnez la langue parlée dans le plus de pays.
"SELECT LANGUAGE , CountryCode , max(Percentage) FROM countrylanguage GROUP BY CountryCode",Quelle est la langue parlée par le plus grand pourcentage de personnes dans chaque pays ?
"SELECT LANGUAGE , CountryCode , max(Percentage) FROM countrylanguage GROUP BY CountryCode",Quels sont les codes pays des différents pays et quelles sont les langues parlées par le plus grand pourcentage de personnes pour chacun ?
"SELECT count(*) , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",Quel est le nombre total de pays où l'espagnol est parlé par le plus grand pourcentage de personnes ?
"SELECT count(*) , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",Comptez le nombre de pays pour lesquels l'espagnol est la langue majoritairement parlée.
"SELECT CountryCode , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",Quels sont les codes des pays où l'espagnol est parlé par le plus grand pourcentage de personnes ?
"SELECT CountryCode , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",Renvoie les codes des pays pour lesquels l'espagnol est la langue majoritairement parlée.
SELECT count(*) FROM conductor,Combien y a-t-il de conducteurs ?
SELECT count(*) FROM conductor,Compter le nombre de conducteurs.
SELECT Name FROM conductor ORDER BY Age ASC,Énumérez les noms des conducteurs par ordre croissant d'âge.
SELECT Name FROM conductor ORDER BY Age ASC,"Quels sont les noms des chefs d'orchestre, classés par âge ?"
SELECT Name FROM conductor WHERE Nationality != 'USA',"Comment s'appellent les chefs d'orchestre dont la nationalité n'est pas ""USA"" ?"
SELECT Name FROM conductor WHERE Nationality != 'USA',"Renvoie les noms des chefs d'orchestre qui n'ont pas la nationalité ""USA""."
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,Quelles sont les maisons de disques des orchestres par ordre décroissant d'années au cours desquelles ils ont été fondés ?
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,"Retournez les maisons de disques des orchestres, triées par ordre décroissant d'année de création."
SELECT avg(Attendance) FROM SHOW,Quelle est la fréquentation moyenne des spectacles ?
SELECT avg(Attendance) FROM SHOW,Renvoie la fréquentation moyenne de tous les spectacles.
"SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""","Quelle est la part maximale et minimale des performances dont le type n'est pas ""Live final""."
"SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""","Renvoie les parts maximales et minimales pour les performances qui n'ont pas le type ""Live final""."
SELECT count(DISTINCT Nationality) FROM conductor,Combien de nationalités différentes les chefs d'orchestre ont-ils ?
SELECT count(DISTINCT Nationality) FROM conductor,Comptez le nombre de chefs d'orchestre de nationalités différentes.
SELECT Name FROM conductor ORDER BY Year_of_Work DESC,Énumérez les noms des chefs d'orchestre par ordre décroissant d'années de travail.
SELECT Name FROM conductor ORDER BY Year_of_Work DESC,"Comment s'appellent les chefs d'orchestre, classés par ordre décroissant d'années de travail ?"
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,Indiquez le nom du chef d'orchestre avec le plus d'années de travail.
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,Comment s'appelle le chef d'orchestre qui a travaillé le plus grand nombre d'années ?
"SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",Indiquez les noms des chefs d'orchestre et les orchestres qu'ils ont dirigés.
"SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",Quels sont les noms des chefs d'orchestre ainsi que les orchestres correspondants qu'ils ont dirigés ?
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,Indiquez les noms des chefs d'orchestre qui ont dirigé plus d'un orchestre.
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,Quels sont les noms des chefs d'orchestre qui ont dirigé plus d'un orchestre ?
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,Indiquez le nom du chef d'orchestre qui a dirigé le plus grand nombre d'orchestres.
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,Comment s'appelle le chef d'orchestre qui a dirigé le plus d'orchestres ?
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,Veuillez indiquer le nom du chef qui a dirigé des orchestres fondés après 2008.
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,Quels sont les noms des chefs d'orchestre qui ont dirigé des orchestres fondés après l'année 2008 ?
"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",Veuillez indiquer les différentes maisons de disques et le nombre d'orchestres correspondant.
"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",Combien d'orchestres chaque maison de disques gère-t-elle ?
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,Veuillez indiquer les formats d'enregistrement des orchestres par ordre croissant de nombre.
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"Quels sont les principaux formats de disques des orchestres, classés par fréquence ?"
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,Indiquez la maison de disques partagée par le plus grand nombre d'orchestres.
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,Quelle est la maison de disques utilisée par le plus grand nombre d'orchestres ?
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),Énumérez les noms des orchestres qui n'ont pas de représentation.
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),Quels sont les orchestres qui n'ont pas de représentations ?
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,Afficher les maisons de disques communes aux orchestres fondés avant 2003 et après 2003.
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,Quelles sont les maisons de disques utilisées par les orchestres fondés avant 2003 et ceux fondés après 2003 ?
"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""","Trouver le nombre d'orchestres dont le format d'enregistrement est ""CD"" ou ""DVD""."
"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",Comptez le nombre d'orchestres qui ont un CD ou un DVD comme format d'enregistrement.
SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,Indiquez les années au cours desquelles des orchestres qui ont donné plus d'une représentation sont fondés.
SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,Que sont les années de fondation pour les orchestres qui ont eu plus d'une représentation ?
SELECT count(*) FROM Highschooler,Combien y a-t-il de lycéens ?
SELECT count(*) FROM Highschooler,Comptez le nombre de lycéens.
"SELECT name , grade FROM Highschooler",Montrez les noms et les notes de chaque lycéen.
"SELECT name , grade FROM Highschooler",Quels sont les noms et les notes de chaque lycéen ?
SELECT grade FROM Highschooler,Afficher toutes les notes des lycéens.
SELECT grade FROM Highschooler,Quelle est la note de chaque lycéen ?
"SELECT grade FROM Highschooler WHERE name = ""Kyle""",En quelle classe est Kyle ?
"SELECT grade FROM Highschooler WHERE name = ""Kyle""",Rendez la note au lycéen nommé Kyle.
SELECT name FROM Highschooler WHERE grade = 10,Montrez les noms de tous les élèves du secondaire en 10e année.
SELECT name FROM Highschooler WHERE grade = 10,Quels sont les noms de tous les élèves du secondaire en 10e année ?
"SELECT ID FROM Highschooler WHERE name = ""Kyle""",Montrez la carte d'identité du lycéen nommé Kyle.
"SELECT ID FROM Highschooler WHERE name = ""Kyle""",Quelle est l'identité de Kyle ?
SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,Combien y a-t-il d'élèves du secondaire en 9e ou 10e année?
SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,Comptez le nombre d'élèves du secondaire en 9e ou 10e année.
"SELECT grade , count(*) FROM Highschooler GROUP BY grade",Indiquez le nombre d'élèves du secondaire pour chaque classe.
"SELECT grade , count(*) FROM Highschooler GROUP BY grade",Combien y a-t-il d'élèves du secondaire dans chaque classe ?
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,Quelle année a le plus de lycéens?
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,Renvoie la classe qui compte le plus grand nombre d'élèves du secondaire.
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,Montrez-moi toutes les classes qui comptent au moins 4 élèves.
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,Quelles classes ont 4 lycéens ou plus ?
"SELECT student_id , count(*) FROM Friend GROUP BY student_id",Afficher les numéros d'étudiants et les numéros d'amis correspondant à chacun.
"SELECT student_id , count(*) FROM Friend GROUP BY student_id",Combien d'amis chaque élève a-t-il ?
"SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",Montrez les noms des élèves du secondaire et leur nombre correspondant d'amis.
"SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",Comment s'appellent les lycéens et combien d'amis chacun a-t-il ?
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,Comment s'appelle le lycéen qui a le plus d'amis ?
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,Renvoie le nom de l'élève du secondaire qui a le plus d'amis.
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,Montrez les noms des lycéens qui ont au moins 3 amis.
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,Comment s'appellent les lycéens qui ont 3 amis ou plus ?
"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = ""Kyle""",Montrez les noms de tous les amis du lycéen Kyle.
"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = ""Kyle""",Renvoyez les noms des amis du lycéen Kyle.
"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",Combien d'amis le lycéen Kyle a-t-il ?
"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",Comptez le nombre d'amis que Kyle a.
SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,Afficher les identifiants de tous les étudiants qui n'ont pas d'amis.
SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,Quels sont les identifiants des lycéens qui n'ont pas d'amis ?
SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,Afficher les noms de tous les élèves du secondaire qui n'ont pas d'amis.
SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,Comment s'appellent les élèves qui n'ont pas d'amis ?
SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,Afficher les identifiants des lycéens qui ont des amis et qui sont également appréciés par quelqu'un d'autre.
SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,Quels sont les identifiants des étudiants qui ont à la fois des amis et sont aimés ?
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,Afficher le nom de tous les étudiants qui ont des amis et qui sont également appréciés par quelqu'un d'autre.
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,Comment s'appellent les lycéens qui ont tous les deux des amis et qui sont appréciés ?
"SELECT student_id , count(*) FROM Likes GROUP BY student_id",Comptez le nombre de likes pour chaque identifiant étudiant.
"SELECT student_id , count(*) FROM Likes GROUP BY student_id",Combien de likes correspondent à chaque identifiant étudiant ?
"SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id",Affichez les noms des lycéens qui ont des goûts et le nombre de goûts pour chacun.
"SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id","Quels sont les noms des lycéens qui ont des likes, et combien de likes chacun a-t-il ?"
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,Comment s'appelle le lycéen qui a le plus de likes ?
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,Donnez le nom de l'élève avec le plus de likes.
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 2,Afficher les noms des élèves qui ont au moins 2 likes.
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 2,Quels sont les noms des étudiants qui ont 2 likes ou plus ?
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,Affichez les noms des élèves qui ont une note supérieure à 5 et qui ont au moins 2 amis.
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,Quels sont les noms des lycéens qui ont une note supérieure à 5 et qui ont 2 amis ou plus ?
"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",Combien de likes Kyle a-t-il ?
"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",Renvoie le nombre de likes du lycéen nommé Kyle.
SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),Trouvez la note moyenne de tous les élèves qui ont des amis.
SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),Quelle est la note moyenne des élèves qui ont des amis ?
SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),Trouvez la note minimale des élèves qui n'ont pas d'amis.
SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),Quelle est la note la plus basse des élèves qui n'ont pas d'amis ?
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,Quels États ont à la fois des propriétaires et des professionnels qui y vivent ?
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,Trouvez les États où vivent les propriétaires et les professionnels.
SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),Quel est l'âge moyen des chiens qui ont subi des traitements ?
SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),Trouvez l'âge moyen des chiens qui ont subi des traitements.
"SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2","Quels professionnels vivent dans l'état de l'Indiana ou ont fait plus de 2 traitements ? Indiquez son identifiant, son nom et son téléphone portable."
"SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2","Trouvez l'identité, le nom et le téléphone portable des professionnels qui vivent dans l'état de l'Indiana ou qui ont effectué plus de deux traitements."
SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment) > 1000 ),Quels chiens n'ont pas coûté plus de 1000 à leur propriétaire pour un traitement ? Listez les noms des chiens.
SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment) > 1000 ),Quels sont les noms des chiens pour lesquels le propriétaire a dépensé plus de 1000 pour le traitement ?
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,Quels prénoms sont utilisés pour les professionnels ou les propriétaires mais ne sont pas utilisés comme noms de chiens ?
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,Trouvez les prénoms qui sont utilisés pour les professionnels ou les propriétaires mais qui ne sont pas utilisés comme noms de chiens.
"SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id","Quel professionnel n'a opéré aucun traitement sur des chiens ? Indiquez l'identifiant, le rôle et l'e-mail du professionnel."
"SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id","Donnez-moi l'identifiant, le rôle et l'e-mail des professionnels qui n'ont effectué aucun traitement sur les chiens."
"SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","Quel propriétaire possède le plus de chiens ? Indiquez l'identifiant, le prénom et le nom du propriétaire."
"SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","Renvoie l'identifiant du propriétaire, le prénom et le nom du propriétaire qui a le plus de chiens."
"SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2","Quels professionnels ont fait au moins deux traitements ? Indiquez l'identifiant, le rôle et le prénom du professionnel."
"SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2","Quels sont l'identifiant, le rôle et le prénom des professionnels qui ont effectué deux ou plusieurs soins ?"
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,Quel est le nom de la race avec le plus de chiens ?
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,Quelle race possède le plus de chiens ? Donnez-moi le nom de la race.
"SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",Quel propriétaire a payé le plus de traitements pour son chien ? Indiquez l'identifiant et le nom du propriétaire.
"SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",Dites-moi l'identifiant du propriétaire et le nom de famille du propriétaire qui a dépensé le plus pour les traitements de ses chiens.
SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,Quelle est la description du type de traitement qui coûte le moins cher au total ?
SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,Donnez-moi la description du type de traitement dont le coût total est le plus bas.
"SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",Quel propriétaire a payé la plus grosse somme d'argent au total pour ses chiens ? Afficher l'identifiant du propriétaire et le code postal.
"SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",Trouvez l'identifiant et le code postal du propriétaire qui a dépensé le plus d'argent au total pour ses chiens.
"SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",Quels professionnels ont fait au moins deux types de traitements ? Indiquez l'identifiant professionnel et le téléphone portable.
"SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",Trouvez l'identifiant et le téléphone portable des professionnels qui opèrent deux ou plusieurs types de traitements.
"SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )",Quels sont le prénom et le nom des professionnels qui ont fait un traitement avec un coût inférieur à la moyenne ?
"SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )",Quels professionnels ont opéré un traitement qui coûte moins cher que la moyenne ? Donnez-moi vos prénoms et noms de famille.
"SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id","Indiquez la date de chaque traitement, ainsi que le prénom du professionnel qui l'a opéré."
"SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",Quels sont la date et le prénom de l'opérateur de chaque traitement ?
"SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",Indiquez le coût de chaque traitement et la description du type de traitement correspondant.
"SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",Quels sont le coût et la description du type de traitement de chaque traitement ?
"SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id","Indiquez le prénom, le nom de famille et la taille de son chien pour chaque propriétaire."
"SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id","Quels sont le prénom, le nom de famille de chaque propriétaire et la taille de son chien ?"
"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",Énumérez les paires du prénom du propriétaire et du nom du chien.
"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",Quels sont le prénom de chaque propriétaire et le nom de son chien ?
"SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",Énumérez les noms des chiens de la race la plus rare et les dates de traitement de ceux-ci.
"SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",Quels chiens sont de la race la plus rare? Montrez leurs noms et dates de traitement.
"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",Quels chiens appartiennent à quelqu'un qui vit en Virginie ? Indiquez le prénom du propriétaire et le nom du chien.
"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",Trouvez les prénoms des propriétaires vivant en Virginie et les noms des chiens qu'ils possèdent.
"SELECT DISTINCT T1.date_arrived , T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",Quelles sont la date d'arrivée et la date de départ des chiens ayant subi un traitement ?
"SELECT DISTINCT T1.date_arrived , T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",Trouvez la date d'arrivée et la date de départ des chiens qui ont reçu un traitement.
SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),Indiquez le nom de famille du propriétaire possédant le plus jeune chien.
SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),A qui appartient le plus jeune chien ? Donnez-moi son nom de famille.
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin',Dressez la liste des e-mails des professionnels qui vivent dans l'état d'Hawaï ou l'état du Wisconsin.
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin',Quels sont les e-mails des professionnels vivant dans l'État d'Hawaï ou dans l'État du Wisconsin ?
"SELECT date_arrived , date_departed FROM Dogs",Quelles sont la date d'arrivée et la date de départ de tous les chiens ?
"SELECT date_arrived , date_departed FROM Dogs",Indiquez la date d'arrivée et la date de départ de tous les chiens.
SELECT count(DISTINCT dog_id) FROM Treatments,Combien de chiens ont subi des traitements ?
SELECT count(DISTINCT dog_id) FROM Treatments,Comptez le nombre de chiens qui ont subi un traitement.
SELECT count(DISTINCT professional_id) FROM Treatments,Combien de professionnels ont effectué un traitement aux chiens?
SELECT count(DISTINCT professional_id) FROM Treatments,Trouvez le nombre de professionnels qui ont déjà soigné des chiens.
"SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'","Quels professionnels vivent dans une ville contenant la sous-chaîne « Ouest » ? Énumérez son rôle, sa rue, sa ville et son état."
"SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'","Trouvez le rôle, la rue, la ville et l'état des professionnels vivant dans une ville qui contient la sous-chaîne « Ouest »."
"SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'","Quels propriétaires vivent dans l'État dont le nom contient la sous-chaîne « Nord » ? Indiquez son prénom, son nom et son email."
"SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'","Renvoie le prénom, le nom et l'adresse e-mail des propriétaires vivant dans un État dont le nom contient la sous-chaîne « Nord »."
SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),Combien de chiens ont un âge inférieur à la moyenne ?
SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),Compter le nombre de chiens d'un âge inférieur à la moyenne.
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,Combien coûte le traitement le plus récent ?
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,Montrez-moi le coût du dernier traitement effectué.
SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),Combien de chiens n'ont subi aucun traitement ?
SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),Dites-moi le nombre de chiens qui ont reçu un traitement.
SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),Combien de propriétaires n'ont temporairement pas de chiens ?
SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),Trouvez le nombre de propriétaires qui ne possèdent pas de chiens en ce moment.
SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),Combien de professionnels n'ont opéré aucun traitement sur des chiens ?
SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),Trouver le nombre de professionnels qui n'ont soigné aucun chien.
"SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1","Indiquez le nom, l'âge et le poids des chiens qui ont été abandonnés ? 1 signifie oui et 0 signifie non."
"SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1","Quels sont le nom, l'âge et le poids des chiens qui ont été abandonnés ? Notez que 1 signifie oui et 0 signifie non dans les tableaux."
SELECT avg(age) FROM Dogs,Quel est l'âge moyen de tous les chiens ?
SELECT avg(age) FROM Dogs,Calculez l'âge moyen de tous les chiens.
SELECT max(age) FROM Dogs,Quel est l'âge du chien le plus âgé ?
SELECT max(age) FROM Dogs,Dites-moi l'âge du chien le plus âgé.
"SELECT charge_type , charge_amount FROM Charges",Combien coûte chaque type de charge ? Indiquez le type et le montant des frais.
"SELECT charge_type , charge_amount FROM Charges",Énumérez chaque type de charge et son montant.
SELECT max(charge_amount) FROM Charges,Combien coûte le type de charge le plus cher ?
SELECT max(charge_amount) FROM Charges,Quel est le montant des frais du type de frais le plus cher ?
"SELECT email_address , cell_number , home_phone FROM professionals","Dressez la liste des courriels, des téléphones cellulaires et des téléphones résidentiels de tous les professionnels."
"SELECT email_address , cell_number , home_phone FROM professionals","Quels sont l'e-mail, le téléphone portable et le téléphone fixe de chaque professionnel ?"
"SELECT DISTINCT breed_code , size_code FROM dogs",Quelles sont toutes les combinaisons possibles de type de race et de type de taille ?
"SELECT DISTINCT breed_code , size_code FROM dogs",Trouvez les combinaisons distinctes de type de race et de type de taille pour les chiens.
"SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",Indiquez le prénom de tous les professionnels ainsi que la description du traitement qu'ils ont effectué.
"SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",Quels sont le prénom de chaque professionnel et la description du traitement qu'il a effectué ?
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,Énumérez le nom des chanteurs par ordre croissant de valeur nette.
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,Quels sont les noms des chanteurs classés par valeur nette croissante ?
"SELECT Birth_Year , Citizenship FROM singer",Quelles sont l'année de naissance et la nationalité des chanteurs ?
"SELECT Birth_Year , Citizenship FROM singer",Quelles sont les années de naissance et les nationalités des chanteurs ?
"SELECT Name FROM singer WHERE Citizenship != ""France""","Indiquez le nom des chanteurs dont la nationalité n'est pas ""France""."
"SELECT Name FROM singer WHERE Citizenship != ""France""",Comment s'appellent les chanteurs qui ne sont pas citoyens français ?
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,Montrer le nom des chanteurs dont l'année de naissance est 1948 ou 1949 ?
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,Quels sont les noms des chanteurs dont les années de naissance sont 1948 ou 1949 ?
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,Quel est le nom du chanteur avec la plus grande valeur nette?
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,Quel est le nom du chanteur qui vaut le plus ?
"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",Montrez les différentes nationalités des chanteurs et le nombre de chanteurs de chaque nationalité.
"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship","Pour chaque nationalité, combien de chanteurs sont originaires de ce pays ?"
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,Veuillez indiquer la nationalité la plus courante des chanteurs.
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,Quelle est la citoyenneté de chanteur la plus courante ?
"SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",Affichez les différentes nationalités et la valeur nette maximale des chanteurs de chaque nationalité.
"SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","Pour chaque citoyenneté, quelle est la valeur nette maximale ?"
"SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",Afficher les titres des chansons et les noms des chanteurs.
"SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",Quels sont les titres des chansons et les noms des chanteurs ?
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,Afficher les noms distincts des chanteurs qui ont des chansons avec des ventes supérieures à 300 000.
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,quels sont les différents noms des chanteurs qui ont des ventes supérieures à 300 000 ?
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,Afficher les noms des chanteurs qui ont plus d'une chanson.
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,Quels sont les noms des chanteurs qui ont plus d'une chanson ?
"SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",Affichez les noms des chanteurs et le total des ventes de leurs chansons.
"SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name","Pour chaque nom de chanteur, quel est le total des ventes de leurs chansons ?"
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),Énumérez le nom des chanteurs qui n'ont pas de chanson.
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),Quel est le nom de chaque chanson qui n'a pas de chanson ?
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,Montrez la citoyenneté partagée par les chanteurs dont l'année de naissance est antérieure à 1945 et postérieure à 1955.
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,Quelles sont les nationalités partagées par les chanteurs dont l'année de naissance est antérieure à 1945 et postérieure à 1955 ?
SELECT count(*) FROM Other_Available_Features,Combien y a-t-il de fonctionnalités disponibles au total ?
"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = ""AirCon""",Quel est le nom du type de fonctionnalité de la fonctionnalité AirCon ?
SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code,Afficher les descriptions de type de propriété des propriétés appartenant à ce code.
"SELECT property_name FROM Properties WHERE property_type_code = ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code = ""Apartment"" AND room_count > 1",Quels sont les noms des propriétés qui sont soit des maisons soit des appartements avec plus d'une chambre ?
